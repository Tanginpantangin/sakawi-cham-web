{"version":3,"sources":["enums/enum.ts","utility/constant.ts","utility/helper.ts","components/countDownBar.tsx","components/day.tsx","components/month.tsx","components/dayAhier.tsx","components/monthAhier.tsx","components/dayAwal.tsx","components/monthAwal.tsx","components/calendar.tsx","Layout.tsx","App.tsx","index.tsx"],"names":["MonthEnum","DayEnum","IkasSarakEnum","NasakEnum","AwalMonthEnum","AhierMonthEnum","GuecTypeEnum","displayMonthName","month","result","displayNasakName","nasak","displayIkasSarakName","ikasSarak","firstDateOfSakawiAwal_Lieh_1407","Date","firstDateOfSakawiAhier_InaGirai_Lieh_1988","awalYearArray","no","name","Liéh","numberOfDays","Hak","Jim","Jây","Dal","Bak","Waw","JimLuic","awalMonthArray","Muharam","Syafar","Rabiulawal","Rabiulakhir","Jamadilawal","Jamadilakhir","Rejab","Sykban","Ramadan","Syawal","Julkaejah","Julhiijaah","Helper","currentDate","addedDays","getDayNumbersOfAwalMonth","awalMonth","year","newDays","date","newMonth","newYear","currentMonth","addedMonths","quotient","Math","floor","getMod","addAwalYears","currentYear","addedYears","newIkasSarak","yearNumber","yearName","yearItem","sakawiTakaiCiimConfig","filter","x","ArabYear","differenceInDays","getTime","remain","abs","awalYearNumber","awalYear","awalDate","totalYears","i","length","numberDaysOfCurrentYear","totalMonths","j","maxtrixCalendar","getActualDayNumbersOfAhierMonth","ahierMonth","BilanSa","Takuh","addAhierMonths","previousMonth","numberOfMonths","getMonthNumbersOfAhierYear","addAhierYears","previousYear","newNasak","remainNasak","numberOfDay","BilanKlau","BilanLima","BilanTajuh","BilanSalipan","BilanPuis","BilanDua","BilanPak","BilanNem","BilanDalipan","BilanSapluh","BilanMak","BilanBhang","index","findIndex","JSON","stringify","dayNumbersOfAhierMonth","newDt","setDate","getDate","toYearAhier","startAhierYear","InâGirai","numberOfAhierYear","newGregoryDate","y","ahierYear","matrixPerYear","renderMatrixPerYear","validMatrix","applyGuenGuecRules","push","lastMonthItem","addGregoryDays","dateOfGregoryCalendar","firstGregoryDate","addedGregoryDays","numberOfAhierMonth","m","getExpectedDayNumbersOfAhierMonth","firstDayOfAhierMonth","getDay","getAwalDateByGregoryDate","addAwalMonths","ahierMonthItem","dayNumbersOfAwalMonth","firstDayOfAwalMonth","Number","parseInt","getStartDayByAwalMonth","hasGuenRuleInNextYear","monthGuen","monthGuec","hasGuecRuleInNextYear","NoneGuec","element","checkIsGuenToAddDay","newDate","checkIsGuecToMinusDay","lastMonthOfCurrentYear","firstGregoryDateOfNextYear","checkHasGuecRuleInNextYear","checkHasGuenRuleInNextYear","getAhierAwalDaysGap","firstGregoryDateNextYear","nextAhierYear","matrixNextYear","firstMonth","isKateRamawanConflict","some","item","GuecByNormalRule","GuecByHareiButSukRule","GuecByKateRamawanRule","GuecByRijaNagarRule","n","daysGap","latinNumber","ChamDigitArr","EnglishDigits","reg","RegExp","toString","replace","c","indexOf","CountDownBar","props","useState","percent","setPercent","days","setDays","hours","setHours","minutes","setMinutes","seconds","setSeconds","useEffect","setTimeout","toDate","now","distance","init","ProgressBar","variant","variantType","label","dateName","slice","divStyle","display","flexDirection","fontSize","Day","style","getMonth","Month","setYear","setMonth","firstDateOfMonth","setFirstDateOfMonth","firstDayOfMonth","setFirstDayOfMonth","React","firstDate","count","rows","weeks","cells","cellDate","Container","Row","Col","md","textAlign","ButtonToolbar","ButtonGroup","Button","className","onClick","marginLeft","nowDate","getFullYear","Table","striped","bordered","hover","height","tableLayout","map","d","padding","DayAhier","dateAhier","tdStyle","opacity","currentAhierMonth","color","paddingTop","paddingBottom","dateGregory","monthGregogy","displayGregoryDate","alignSelf","dateAwal","monthAwal","margin","convertToChamDigitUnicode","dayNumbersOfCurrentAwalMonth","displayAwalDate","dayNumbersOfCurrentAhierMonth","MonthAhier","initialAhierDate","Pabuei","initialAwalDate","initialGregoryDate","currentAhierMonthMatrix","setCurrentAhierMonthMatrix","firstDateOfAhierMonth","setFirstDateOfAhierMonth","setFirstDayOfAhierMonth","firstDateOfAwalMonth","setFirstDateOfAwalMonth","setFirstDayOfAwalMonth","firstDateOfGregoryMonth","setFirstDateOfGregoryMonth","firstDayOfGregoryMonth","setFirstDayOfGregoryMonth","firstAhierDate","firstAwalDate","cellAhierDate","addAhierDays","matrixSakawi","week","cellAwalDate","addAwalDays","GregoryDate","DayAwal","MonthAwal","setAwalMonth","matrix","buildMatrixCalendar","console","log","Calendar","initialMatrixCalendarType","setMatrixSakawi","setCurrentAhierMonth","sakawiType","footerStyle","background","justifyContent","Layout","fluid","Navbar","bg","expand","Brand","href","Toggle","Collapse","id","Nav","maxHeight","navbarScroll","Link","NavDropdown","title","Item","Divider","sm","Card","Header","ListGroup","children","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a81d1a9.chunk.js","sourcesContent":["export declare type VariantType = 'primary' | 'info' | 'secondary' | 'success' | 'warning' | 'danger' | 'light' | 'link';\r\n\r\nexport enum MonthEnum {\r\n    January = 0,\r\n    February,\r\n    March,\r\n    April,\r\n    May,\r\n    June,\r\n    July,\r\n    August,\r\n    September,\r\n    October,\r\n    November,\r\n    December\r\n}\r\n\r\nexport enum DayEnum {\r\n    Sunday = 0,\r\n    Monday,\r\n    Tuesday,\r\n    Wednesday,\r\n    Thursday,\r\n    Friday,\r\n    Saturday\r\n}\r\n\r\nexport enum IkasSarakEnum {\r\n    Liéh = 0,\r\n    Hak,\r\n    Jim,\r\n    Jây,\r\n    Dal,\r\n    Bak,\r\n    Waw,\r\n    JimLuic\r\n}\r\n\r\nexport enum NasakEnum {\r\n    Takuh = 0,\r\n    Kabaw,\r\n    Rimaong,\r\n    Tapay,\r\n    InâGirai,\r\n    UlaAnaih,\r\n    Asaih,\r\n    Pabaiy,\r\n    Kra,\r\n    Manuk,\r\n    Asau,\r\n    Pabuei\r\n}\r\n\r\nexport enum AwalMonthEnum {\r\n    Muharam = 0,\r\n    Syafar,\r\n    Rabiulawal,\r\n    Rabiulakhir,\r\n    Jamadilawal,\r\n    Jamadilakhir,\r\n    Rejab,\r\n    Sykban,\r\n    Ramadan,\r\n    Syawal,\r\n    Julkaejah,\r\n    Julhiijaah\r\n}\r\n\r\nexport enum AhierMonthEnum {\r\n    BilanSa = 0,\r\n    BilanDua,\r\n    BilanKlau,\r\n    BilanPak,\r\n    BilanLima,\r\n    BilanNem,\r\n    BilanTajuh,\r\n    BilanDalipan,\r\n    BilanSalipan,\r\n    BilanSapluh,\r\n    BilanPuis,\r\n    BilanMak,\r\n    BilanBhang\r\n}\r\n\r\nexport enum GuecTypeEnum {\r\n    NoneGuec = -1,\r\n    GuecByNormalRule,\r\n    GuecByHareiButSukRule,\r\n    GuecByRijaNagarRule,\r\n    GuecByKateRamawanRule,\r\n}\r\n\r\nexport function displayMonthName(month: AhierMonthEnum) {\r\n    let result = '';\r\n\r\n    switch (month) {\r\n        case 0:\r\n            result = 'ꨝꨪꨤꩆ ꨧꨩ';\r\n            break;\r\n        case 1:\r\n            result = 'ꨝꨪꨤꩆ ꨕꨶꨩ';\r\n            break;\r\n        case 2:\r\n            result = 'ꨝꨪꨤꩆ ꨆꨵꨮꨭ';\r\n            break;\r\n        case 3:\r\n            result = 'ꨝꨪꨤꩆ ꨛꨩꩀ';\r\n            break;\r\n        case 4:\r\n            result = 'ꨝꨪꨤꩆ ꨤꨪꨟꨩ';\r\n            break;\r\n        case 5:\r\n            result = 'ꨝꨪꨤꩆ ꨘꩌ';\r\n            break;\r\n        case 6:\r\n            result = 'ꨝꨪꨤꩆ ꨓꨎꨭꩍ';\r\n            break;\r\n        case 7:\r\n            result = 'ꨝꨪꨤꩆ ꨕꨤꨪꨚꩆ';\r\n            break;\r\n        case 8:\r\n            result = 'ꨝꨪꨤꩆ ꨧꨤꨪꨚꩆ';\r\n            break;\r\n        case 9:\r\n            result = 'ꨝꨪꨤꩆ ꨧꨚꨵꨭꩍ';\r\n            break;\r\n        case 10:\r\n            result = 'ꨝꨪꨤꩆ ꨚꨶꨪꩋ';\r\n            break;\r\n        case 11:\r\n            result = 'ꨝꨪꨤꩆ ꨠꩀ';\r\n            break;\r\n        case 12:\r\n            result = 'ꨝꨪꨤꩆ ꨞꩃ';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function displayNasakName(nasak: NasakEnum) {\r\n    let result = '';\r\n\r\n    switch (nasak) {\r\n        case 0:\r\n            result = 'ꨓꨆꨭꩍ';\r\n            break;\r\n        case 1:\r\n            result = 'ꨆꨝꨥ';\r\n            break;\r\n        case 2:\r\n            result = 'ꨣꨪꨟꨯꨱꩃ';\r\n            break;\r\n        case 3:\r\n            result = 'ꨓꨛꩈ';\r\n            break;\r\n        case 4:\r\n            result = 'ꨁꨗꨩ ꨈꨪꨣꩈ';\r\n            break;\r\n        case 5:\r\n            result = 'ꨂꨤꨩ ꨗꨰꩍ';\r\n            break;\r\n        case 6:\r\n            result = 'ꨀꨧꨰꩍ';\r\n            break;\r\n        case 7:\r\n            result = 'ꨚꨝꨰꩈ';\r\n            break;\r\n        case 8:\r\n            result = 'ꨆꨴꨩ';\r\n            break;\r\n        case 9:\r\n            result = 'ꨟꨗꨭꩀ';\r\n            break;\r\n        case 10:\r\n            result = 'ꨀꨧꨮꨭ';\r\n            break;\r\n        case 11:\r\n            result = 'ꨚꨝꨶꨬ';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function displayIkasSarakName(ikasSarak: IkasSarakEnum) {\r\n    let result = '';\r\n\r\n    switch (ikasSarak) {\r\n        case 0:\r\n            result = '1';\r\n            break;\r\n        case 1:\r\n            result = '5';\r\n            break;\r\n        case 2:\r\n            result = '3';\r\n            break;\r\n        case 3:\r\n            result = '7';\r\n            break;\r\n        case 4:\r\n            result = '4';\r\n            break;\r\n        case 5:\r\n            result = '2';\r\n            break;\r\n        case 6:\r\n            result = '6';\r\n            break;\r\n        case 7:\r\n            result = '3';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n","import { AwalMonthEnum, IkasSarakEnum } from \"../enums/enum\";\r\n\r\nexport const firstDateOfSakawiAwal_Lieh_1407 = new Date(1986, 8, 5);//05/09/1986\r\nexport const yearNumberOfSakawiAwal_Lieh_1407 = 1407;\r\nexport const firstDateOfSakawiAhier_InaGirai_Lieh_1988 = new Date(1988, 3, 16);//16/04/1988\r\nexport const totalDaysOf8AwalYearCycle = 2835;\r\n\r\nexport const awalYearArray: { no: number; name: IkasSarakEnum; numberOfDays: number }[] = [\r\n    { no: 1, name: IkasSarakEnum.Liéh, numberOfDays: 354 },\r\n    { no: 2, name: IkasSarakEnum.Hak, numberOfDays: 355 },\r\n    { no: 3, name: IkasSarakEnum.Jim, numberOfDays: 354 },\r\n    { no: 4, name: IkasSarakEnum.Jây, numberOfDays: 354 },\r\n    { no: 5, name: IkasSarakEnum.Dal, numberOfDays: 355 },\r\n    { no: 6, name: IkasSarakEnum.Bak, numberOfDays: 354 },\r\n    { no: 7, name: IkasSarakEnum.Waw, numberOfDays: 354 },\r\n    { no: 8, name: IkasSarakEnum.JimLuic, numberOfDays: 355 }\r\n];\r\n\r\nexport const awalMonthArray: { no: number; name: AwalMonthEnum; numberOfDays: number }[] = [\r\n    { no: 1, name: AwalMonthEnum.Muharam, numberOfDays: 30 },\r\n    { no: 2, name: AwalMonthEnum.Syafar, numberOfDays: 29 },\r\n    { no: 3, name: AwalMonthEnum.Rabiulawal, numberOfDays: 30 },\r\n    { no: 4, name: AwalMonthEnum.Rabiulakhir, numberOfDays: 29 },\r\n    { no: 5, name: AwalMonthEnum.Jamadilawal, numberOfDays: 30 },\r\n    { no: 6, name: AwalMonthEnum.Jamadilakhir, numberOfDays: 29 },\r\n    { no: 7, name: AwalMonthEnum.Rejab, numberOfDays: 30 },\r\n    { no: 8, name: AwalMonthEnum.Sykban, numberOfDays: 29 },\r\n    { no: 9, name: AwalMonthEnum.Ramadan, numberOfDays: 30 },\r\n    { no: 10, name: AwalMonthEnum.Syawal, numberOfDays: 29 },\r\n    { no: 11, name: AwalMonthEnum.Julkaejah, numberOfDays: 30 },\r\n    { no: 12, name: AwalMonthEnum.Julhiijaah, numberOfDays: 30 }\r\n]","import sakawiTakaiCiimConfig from '../data/SakawiTakaiCiim.json';\r\nimport { AhierMonthEnum, AwalMonthEnum, GuecTypeEnum, IkasSarakEnum, NasakEnum } from \"../enums/enum\";\r\nimport { AhierDate, AhierMonth, AhierYear } from \"../model/AhierDate\";\r\nimport { AwalDate, AwalMonth, AwalYear } from '../model/AwalDate';\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport { awalMonthArray, awalYearArray, firstDateOfSakawiAhier_InaGirai_Lieh_1988, firstDateOfSakawiAwal_Lieh_1407, totalDaysOf8AwalYearCycle, yearNumberOfSakawiAwal_Lieh_1407 } from './constant';\r\n\r\nexport default class Helper {\r\n    //#region Awal\r\n    static addAwalDays(currentDate: AwalDate, addedDays: number) {\r\n        let numberOfDays = Helper.getDayNumbersOfAwalMonth(currentDate.awalMonth.year, currentDate.awalMonth.month);\r\n        let newDays = currentDate.date + addedDays;\r\n        let newMonth = currentDate.awalMonth.month;\r\n        let newYear = currentDate.awalMonth.year;\r\n\r\n        let result: AwalDate = {\r\n            date: 1,\r\n            awalMonth: {\r\n                month: AwalMonthEnum.Jamadilakhir,\r\n                year: { ikasSarak: IkasSarakEnum.Liéh }\r\n            }\r\n        };\r\n\r\n        if (newDays > numberOfDays) {\r\n            if (currentDate.awalMonth.month < 11) {\r\n                newMonth = currentDate.awalMonth.month + 1;\r\n            } else {\r\n                newMonth = 0;\r\n\r\n                if (currentDate.awalMonth.year.ikasSarak < 7) {\r\n                    newYear.ikasSarak = currentDate.awalMonth.year.ikasSarak + 1;\r\n                } else {\r\n                    newYear.ikasSarak = 0;\r\n                }\r\n            }\r\n\r\n            result = {\r\n                date: newDays - numberOfDays,\r\n                awalMonth: { month: newMonth, year: newYear }\r\n            };\r\n\r\n        } else if (newDays <= 0) {\r\n            if (currentDate.awalMonth.month > 0) {\r\n                newMonth = currentDate.awalMonth.month - 1;\r\n            } else {\r\n                newMonth = 11;\r\n\r\n                if (currentDate.awalMonth.year.ikasSarak > 0) {\r\n                    newYear.ikasSarak = currentDate.awalMonth.year.ikasSarak - 1;\r\n                } else {\r\n                    newYear.ikasSarak = 7;\r\n                }\r\n            }\r\n\r\n            result = {\r\n                date: Helper.getDayNumbersOfAwalMonth(currentDate.awalMonth.year, currentDate.awalMonth.month - 1) + newDays,\r\n                awalMonth: { month: newMonth, year: newYear }\r\n            };\r\n        }\r\n        else {\r\n            result = {\r\n                date: newDays,\r\n                awalMonth: currentDate.awalMonth\r\n            };\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static addAwalMonths(currentMonth: AwalMonth, addedMonths: number) {\r\n        let newMonth = currentMonth.month + addedMonths;\r\n        let quotient = Math.floor(newMonth / 12);\r\n        let remain = Helper.getMod(newMonth, 12);\r\n\r\n        let result: AwalMonth = {\r\n            month: remain,\r\n            year: Helper.addAwalYears(currentMonth.year, quotient)\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static addAwalYears(currentYear: AwalYear, addedYears: number) {\r\n        let newIkasSarak = currentYear.ikasSarak + addedYears;\r\n        let remain = Helper.getMod(newIkasSarak, 8);\r\n        let newYearNumber = (currentYear.yearNumber ?? 0) + addedYears;\r\n\r\n        let result: AwalYear = {\r\n            ikasSarak: remain,\r\n            yearNumber: newYearNumber\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static getDayNumbersOfAwalMonth(year: AwalYear, month: AwalMonthEnum) {\r\n        let numberOfDay = 0;\r\n\r\n        if (month === AwalMonthEnum.Muharam || month === AwalMonthEnum.Rabiulawal || month === AwalMonthEnum.Jamadilawal ||\r\n            month === AwalMonthEnum.Rejab || month === AwalMonthEnum.Ramadan || month === AwalMonthEnum.Julkaejah) {\r\n            // Tháng lẻ: (30 ngày), gồm: 1,3,5,7,9,11.\r\n            numberOfDay = 30;\r\n        } else if (month === AwalMonthEnum.Syafar || month === AwalMonthEnum.Rabiulakhir || month === AwalMonthEnum.Jamadilakhir ||\r\n            month === AwalMonthEnum.Sykban || month === AwalMonthEnum.Syawal) {\r\n            // Tháng chẳn: (29 ngày), gồm: 2,4,6,8,10. \r\n            numberOfDay = 29;\r\n        } else {\r\n            // Riêng tháng 12: \r\n            if (year.ikasSarak === IkasSarakEnum.Hak || year.ikasSarak === IkasSarakEnum.Dal || year.ikasSarak === IkasSarakEnum.JimLuic) {\r\n                // năm nhuận (thun \"Nâh\": Hak, Dal, Jim luic): 30 ngày\r\n                numberOfDay = 30;\r\n            } else {\r\n                // năm thường (thun \"Wak\"): 29 ngày\r\n                numberOfDay = 29;\r\n            }\r\n        }\r\n\r\n        return numberOfDay;\r\n    }\r\n\r\n    static getStartDayByAwalMonth(year: AwalYear, month: AwalMonthEnum) {\r\n        let yearName = IkasSarakEnum[year.ikasSarak];\r\n        let yearItem = sakawiTakaiCiimConfig.filter(x => x.ArabYear === yearName)[0];\r\n        let result = '';\r\n\r\n        switch (month) {\r\n            case 0:\r\n                result = yearItem['Month_01'];\r\n                break;\r\n            case 1:\r\n                result = yearItem['Month_02'];\r\n                break;\r\n            case 2:\r\n                result = yearItem['Month_03'];\r\n                break;\r\n            case 3:\r\n                result = yearItem['Month_04'];\r\n                break;\r\n            case 4:\r\n                result = yearItem['Month_05'];\r\n                break;\r\n            case 5:\r\n                result = yearItem['Month_06'];\r\n                break;\r\n            case 6:\r\n                result = yearItem['Month_07'];\r\n                break;\r\n            case 7:\r\n                result = yearItem['Month_08'];\r\n                break;\r\n            case 8:\r\n                result = yearItem['Month_09'];\r\n                break;\r\n            case 9:\r\n                result = yearItem['Month_10'];\r\n                break;\r\n            case 10:\r\n                result = yearItem['Month_11'];\r\n                break;\r\n            case 11:\r\n                result = yearItem['Month_12'];\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static getAwalDateByGregoryDate(date: Date) {\r\n        let differenceInTime = date.getTime() - firstDateOfSakawiAwal_Lieh_1407.getTime();\r\n        let differenceInDays = differenceInTime / (1000 * 3600 * 24);\r\n        let remain = Helper.getMod(differenceInDays, totalDaysOf8AwalYearCycle);\r\n        let quotient = Math.floor(Math.abs(differenceInDays) / totalDaysOf8AwalYearCycle);\r\n\r\n        let awalYearNumber = yearNumberOfSakawiAwal_Lieh_1407;\r\n        let awalYear = IkasSarakEnum.Liéh;\r\n        let awalMonth = AwalMonthEnum.Muharam;\r\n        let awalDate = 0;\r\n        let totalYears = 0;\r\n        for (let i = 0; i < awalYearArray.length; i++) {\r\n            totalYears += awalYearArray[i].numberOfDays;\r\n            if (remain < totalYears) {\r\n                awalYear = awalYearArray[i].name;\r\n\r\n                if (differenceInDays > 0) {\r\n                    awalYearNumber += (quotient * 8) + i;\r\n                } else {\r\n                    awalYearNumber -= (quotient * 8) + i;\r\n                }\r\n\r\n                let numberDaysOfCurrentYear = remain - (totalYears - awalYearArray[i].numberOfDays);\r\n                let totalMonths = 0;\r\n\r\n                for (let j = 0; j < awalMonthArray.length; j++) {\r\n                    totalMonths += awalMonthArray[j].numberOfDays;\r\n                    if (numberDaysOfCurrentYear < totalMonths) {\r\n                        awalMonth = awalMonthArray[j].name;\r\n                        let numberDaysOfCurrentMonth = numberDaysOfCurrentYear - (totalMonths - awalMonthArray[j].numberOfDays);\r\n                        awalDate = numberDaysOfCurrentMonth + 1;\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        let resultDate: AwalDate = {\r\n            date: awalDate,\r\n            awalMonth: { month: awalMonth, year: { ikasSarak: awalYear, yearNumber: awalYearNumber } }\r\n        }\r\n\r\n        return resultDate;\r\n    }\r\n    //#endregion\r\n\r\n    //#region Ahier\r\n    static addAhierDays(maxtrixCalendar: MatrixCalendarType[], currentDate: AhierDate, addedDays: number) {\r\n        const numberOfDays = Helper.getActualDayNumbersOfAhierMonth(maxtrixCalendar, currentDate.ahierMonth);\r\n        const newDays = currentDate.date + addedDays;\r\n\r\n        let result: AhierDate = {\r\n            date: 1,\r\n            ahierMonth: {\r\n                month: AhierMonthEnum.BilanSa,\r\n                year: { nasak: NasakEnum.Takuh, ikasSarak: IkasSarakEnum.Liéh }\r\n            }\r\n        };\r\n\r\n        if (newDays > numberOfDays) {\r\n            const nextMonth = Helper.addAhierMonths(currentDate.ahierMonth, 1);\r\n            result = {\r\n                date: newDays - numberOfDays,\r\n                ahierMonth: nextMonth\r\n            };\r\n        } else if (newDays <= 0) {\r\n            const previousMonth = Helper.addAhierMonths(currentDate.ahierMonth, -1);\r\n            const dayNumberOfPreviousMonth = Helper.getActualDayNumbersOfAhierMonth(maxtrixCalendar, previousMonth);\r\n            result = {\r\n                date: dayNumberOfPreviousMonth + newDays,\r\n                ahierMonth: previousMonth\r\n            };\r\n        }\r\n        else {\r\n            result = {\r\n                date: newDays,\r\n                ahierMonth: currentDate.ahierMonth\r\n            };\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static addAhierMonths(currentMonth: AhierMonth, addedMonths: number) {\r\n        const numberOfMonths = Helper.getMonthNumbersOfAhierYear(currentMonth.year);\r\n        const newMonth = currentMonth.month + addedMonths;\r\n        let result: AhierMonth = {\r\n            month: currentMonth.month,\r\n            year: currentMonth.year\r\n        }\r\n\r\n        if (newMonth > numberOfMonths - 1) {\r\n            const nextYear = Helper.addAhierYears(currentMonth.year, 1);\r\n            result = {\r\n                month: newMonth - numberOfMonths,\r\n                year: nextYear\r\n            }\r\n        } else if (newMonth < 0) {\r\n            const previousYear = Helper.addAhierYears(currentMonth.year, -1);\r\n            const numberOfMonthsOfPreviousYear = Helper.getMonthNumbersOfAhierYear(previousYear);\r\n\r\n            result = {\r\n                month: numberOfMonthsOfPreviousYear + newMonth,\r\n                year: previousYear\r\n            }\r\n        } else {\r\n            result = {\r\n                month: newMonth,\r\n                year: currentMonth.year\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static addAhierYears(currentYear: AhierYear, addedYears: number) {\r\n        let newNasak = (currentYear.nasak + addedYears) % 12;\r\n        let remainNasak = Helper.getMod(newNasak, 12);\r\n\r\n        let newIkasSarak = (currentYear.ikasSarak + addedYears) % 8;\r\n        let remainIkasSarak = Helper.getMod(newIkasSarak, 8);\r\n\r\n        let newYearNumber = (currentYear.yearNumber ?? 0) + addedYears;\r\n\r\n        let result: AhierYear = {\r\n            nasak: remainNasak,\r\n            ikasSarak: remainIkasSarak,\r\n            yearNumber: newYearNumber\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static getExpectedDayNumbersOfAhierMonth(year: AhierYear, month: AhierMonthEnum) {\r\n        let numberOfDay = 0;\r\n        if (month === AhierMonthEnum.BilanSa || month === AhierMonthEnum.BilanKlau || month === AhierMonthEnum.BilanLima ||\r\n            month === AhierMonthEnum.BilanTajuh || month === AhierMonthEnum.BilanSalipan || month === AhierMonthEnum.BilanPuis) {\r\n            // Tháng lẻ - \"bilan tapak\": (30 ngày), gồm: 1,3,5,7,9,11.\r\n            numberOfDay = 30;\r\n        } else if (month === AhierMonthEnum.BilanDua || month === AhierMonthEnum.BilanPak || month === AhierMonthEnum.BilanNem ||\r\n            month === AhierMonthEnum.BilanDalipan || month === AhierMonthEnum.BilanSapluh) {\r\n            // Tháng chẳn - \"bilan u\" : (29 ngày), gồm: 2,4,6,8,10. \r\n            numberOfDay = 29;\r\n        } else if (month === AhierMonthEnum.BilanMak) {\r\n            // Tháng 12:  \r\n            if (year.ikasSarak === IkasSarakEnum.Hak || year.ikasSarak === IkasSarakEnum.Dal || year.ikasSarak === IkasSarakEnum.JimLuic) {\r\n                // năm nhuận (thun \"Nâh\": Hak, Dal, Jim luic): 30 ngày\r\n                numberOfDay = 30;\r\n            } else {\r\n                // năm thường (thun \"Wak\"): 29 ngày\r\n                numberOfDay = 29;\r\n            }\r\n        } else if (month === AhierMonthEnum.BilanBhang) {\r\n            if (year.ikasSarak === IkasSarakEnum.Hak || year.ikasSarak === IkasSarakEnum.Dal || year.ikasSarak === IkasSarakEnum.JimLuic) {\r\n                // năm nhuận (thun \"Nâh\": Hak, Dal, Jim luic): 29 ngày\r\n                numberOfDay = 29;\r\n            }\r\n        }\r\n\r\n        return numberOfDay;\r\n    }\r\n\r\n    static getActualDayNumbersOfAhierMonth(maxtrixCalendar: MatrixCalendarType[], ahierMonth: AhierMonth) {\r\n        const index = maxtrixCalendar.findIndex(x => JSON.stringify(x.ahierMonth) === JSON.stringify(ahierMonth));\r\n        if (index !== -1) {\r\n            return maxtrixCalendar[index].dayNumbersOfAhierMonth;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    static getMonthNumbersOfAhierYear(year: AhierYear) {\r\n        if (year.ikasSarak === IkasSarakEnum.Hak\r\n            || year.ikasSarak === IkasSarakEnum.Dal\r\n            || year.ikasSarak === IkasSarakEnum.JimLuic) {\r\n            return 13;\r\n        }\r\n        return 12;\r\n    }\r\n    //#endregion\r\n\r\n    //#region Gregory\r\n    static addGregoryDays(date: Date, numberOfDays: number) {\r\n        let newDt = new Date(date);\r\n        newDt.setDate(date.getDate() + numberOfDays);\r\n        return newDt;\r\n    }\r\n    //#endregion\r\n\r\n    static buildMatrixCalendar(toYearAhier: number) {\r\n        let result: MatrixCalendarType[] = [];\r\n\r\n        // Choose thun 1988 as a root\r\n        const startAhierYear: AhierYear = {\r\n            nasak: NasakEnum.InâGirai,\r\n            ikasSarak: IkasSarakEnum.Liéh,\r\n            yearNumber: 1988\r\n        }\r\n\r\n        const numberOfAhierYear = toYearAhier - (startAhierYear.yearNumber ?? 0);\r\n        let newGregoryDate = firstDateOfSakawiAhier_InaGirai_Lieh_1988;\r\n\r\n        for (let y = 0; y < numberOfAhierYear; y++) {\r\n            const ahierYear = Helper.addAhierYears(startAhierYear, y);\r\n            const matrixPerYear = Helper.renderMatrixPerYear(ahierYear, newGregoryDate);\r\n            const validMatrix = Helper.applyGuenGuecRules(matrixPerYear);\r\n\r\n            // Check guen-guec rules\r\n            result.push(...validMatrix);\r\n\r\n            const lastMonthItem = validMatrix[validMatrix.length - 1];\r\n            newGregoryDate = Helper.addGregoryDays(lastMonthItem.dateOfGregoryCalendar, lastMonthItem.dayNumbersOfAhierMonth);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static renderMatrixPerYear(ahierYear: AhierYear, firstGregoryDate: Date) {\r\n        let matrixPerYear: MatrixCalendarType[] = [];\r\n        let newGregoryDate = firstGregoryDate;\r\n        let addedGregoryDays = 0;\r\n        const numberOfAhierMonth = Helper.getMonthNumbersOfAhierYear(ahierYear);\r\n\r\n        for (let m = 0; m < numberOfAhierMonth; m++) {\r\n            const ahierMonth: AhierMonth = { month: m, year: ahierYear };\r\n            const dayNumbersOfAhierMonth = Helper.getExpectedDayNumbersOfAhierMonth(ahierYear, m);\r\n            const firstDayOfAhierMonth = newGregoryDate.getDay();\r\n\r\n            const awalDate = Helper.getAwalDateByGregoryDate(newGregoryDate);\r\n            const awalMonth = Helper.addAwalMonths(awalDate.awalMonth, 1);\r\n            const dayNumbersOfAwalMonth = Helper.getDayNumbersOfAwalMonth(awalMonth.year, awalMonth.month);\r\n            const firstDayOfAwalMonth = Number.parseInt(Helper.getStartDayByAwalMonth(awalMonth.year, awalMonth.month)) - 1; // Sunday is 0 \r\n\r\n            let ahierMonthItem: MatrixCalendarType = {\r\n                ahierMonth: ahierMonth,\r\n                dayNumbersOfAhierMonth: dayNumbersOfAhierMonth,\r\n                firstDayOfAhierMonth: firstDayOfAhierMonth,\r\n                dateOfGregoryCalendar: newGregoryDate,\r\n                awalMonth: awalMonth,\r\n                dayNumbersOfAwalMonth: dayNumbersOfAwalMonth,\r\n                firstDayOfAwalMonth: firstDayOfAwalMonth\r\n            }\r\n\r\n            matrixPerYear.push(ahierMonthItem);\r\n\r\n            addedGregoryDays += dayNumbersOfAhierMonth;\r\n            newGregoryDate = Helper.addGregoryDays(firstGregoryDate, addedGregoryDays);\r\n        }\r\n\r\n        return matrixPerYear;\r\n    }\r\n\r\n    static applyGuenGuecRules(matrixPerYear: MatrixCalendarType[]) {\r\n        let monthGuen = -1;\r\n        let monthGuec = -1;\r\n        let hasGuecRuleInNextYear = GuecTypeEnum.NoneGuec;\r\n        let hasGuenRuleInNextYear = false;\r\n\r\n        // Check validations and fix in current year\r\n        for (let index = 0; index < matrixPerYear.length; index++) {\r\n            const element = matrixPerYear[index];\r\n\r\n            // Guen\r\n            if (monthGuen === -1 && Helper.checkIsGuenToAddDay(element.firstDayOfAhierMonth, element.firstDayOfAwalMonth)) {\r\n                monthGuen = index;\r\n                matrixPerYear[monthGuen - 1].dayNumbersOfAhierMonth += 1;\r\n            }\r\n\r\n            if (monthGuen !== -1 && index >= monthGuen) {\r\n                const newDate = Helper.addGregoryDays(matrixPerYear[index].dateOfGregoryCalendar, 1);\r\n                matrixPerYear[index].dateOfGregoryCalendar = newDate;\r\n                matrixPerYear[index].firstDayOfAhierMonth = newDate.getDay();\r\n            }\r\n\r\n            // Guec\r\n            if (monthGuec === -1 && Helper.checkIsGuecToMinusDay(element.firstDayOfAhierMonth, element.firstDayOfAwalMonth)) {\r\n                monthGuec = index;\r\n                matrixPerYear[monthGuec - 1].dayNumbersOfAhierMonth -= 1;\r\n            }\r\n\r\n            if (monthGuec !== -1 && index >= monthGuec) {\r\n                const newDate = Helper.addGregoryDays(matrixPerYear[index].dateOfGregoryCalendar, -1);\r\n                matrixPerYear[index].dateOfGregoryCalendar = newDate;\r\n                matrixPerYear[index].firstDayOfAhierMonth = newDate.getDay();\r\n            }\r\n        }\r\n\r\n        // Check validations in next year to fix current year\r\n        const lastMonthOfCurrentYear = matrixPerYear[matrixPerYear.length - 1];\r\n        const firstGregoryDateOfNextYear = Helper.addGregoryDays(lastMonthOfCurrentYear.dateOfGregoryCalendar, lastMonthOfCurrentYear.dayNumbersOfAhierMonth);\r\n        hasGuecRuleInNextYear = Helper.checkHasGuecRuleInNextYear(lastMonthOfCurrentYear.ahierMonth.year, firstGregoryDateOfNextYear);\r\n        hasGuenRuleInNextYear = Helper.checkHasGuenRuleInNextYear(lastMonthOfCurrentYear.ahierMonth.year, firstGregoryDateOfNextYear);\r\n\r\n        if (hasGuecRuleInNextYear !== GuecTypeEnum.NoneGuec) {\r\n            // Bilan Mak (12)\r\n            matrixPerYear[11].dayNumbersOfAhierMonth -= 1;\r\n\r\n            // Bilan Bhang (13)\r\n            const newDate = Helper.addGregoryDays(matrixPerYear[12].dateOfGregoryCalendar, -1);\r\n            matrixPerYear[12].dateOfGregoryCalendar = newDate;\r\n            matrixPerYear[12].firstDayOfAhierMonth = newDate.getDay();\r\n        } else if (hasGuenRuleInNextYear) {\r\n            // Bilan (12) or (13)\r\n            if (Helper.getAhierAwalDaysGap(lastMonthOfCurrentYear.firstDayOfAhierMonth, lastMonthOfCurrentYear.firstDayOfAwalMonth) === 2) {\r\n                lastMonthOfCurrentYear.dayNumbersOfAhierMonth += 1;\r\n            }\r\n        }\r\n\r\n        //TODO\r\n        return [...matrixPerYear];\r\n    }\r\n\r\n    static checkIsGuenToAddDay(firstDayOfAhierMonth: number, firstDayOfAwalMonth: number) {\r\n        const daysGap = Helper.getAhierAwalDaysGap(firstDayOfAhierMonth, firstDayOfAwalMonth);\r\n        return daysGap > 2;\r\n    }\r\n\r\n    static checkIsGuecToMinusDay(firstDayOfAhierMonth: number, firstDayOfAwalMonth: number) {\r\n        return firstDayOfAhierMonth === firstDayOfAwalMonth;\r\n    }\r\n\r\n    static checkHasGuecRuleInNextYear(currentYear: AhierYear, firstGregoryDateNextYear: Date) {\r\n        let result = GuecTypeEnum.NoneGuec;\r\n\r\n        const nextAhierYear = Helper.addAhierYears(currentYear, 1);\r\n        const matrixNextYear = Helper.renderMatrixPerYear(nextAhierYear, firstGregoryDateNextYear);\r\n        const firstMonth = matrixNextYear[0];\r\n        const isKateRamawanConflict = matrixNextYear.some(x =>\r\n            x.ahierMonth.month === AhierMonthEnum.BilanTajuh &&\r\n            x.awalMonth.month === AwalMonthEnum.Ramadan &&\r\n            Helper.getAhierAwalDaysGap(x.firstDayOfAhierMonth, x.firstDayOfAwalMonth) === 1);\r\n        const hasNormalGuec = matrixNextYear.some(item => Helper.checkIsGuecToMinusDay(item.firstDayOfAhierMonth, item.firstDayOfAwalMonth));\r\n\r\n        if (hasNormalGuec) {\r\n            result = GuecTypeEnum.GuecByNormalRule;\r\n        } else if (nextAhierYear.ikasSarak === IkasSarakEnum.Liéh) {\r\n            if (firstMonth.firstDayOfAhierMonth === 4 && firstMonth.firstDayOfAwalMonth === 5) {\r\n                result = GuecTypeEnum.GuecByHareiButSukRule;\r\n            } else if (isKateRamawanConflict) {\r\n                result = GuecTypeEnum.GuecByKateRamawanRule;\r\n            }\r\n        } else if (firstMonth.firstDayOfAhierMonth === 5 && firstMonth.firstDayOfAwalMonth === 6) {\r\n            result = GuecTypeEnum.GuecByRijaNagarRule;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static checkHasGuenRuleInNextYear(currentYear: AhierYear, firstGregoryDateNextYear: Date) {\r\n        const nextAhierYear = Helper.addAhierYears(currentYear, 1);\r\n        const matrixNextYear = Helper.renderMatrixPerYear(nextAhierYear, firstGregoryDateNextYear);\r\n\r\n        return matrixNextYear.some(item => Helper.checkIsGuenToAddDay(item.firstDayOfAhierMonth, item.firstDayOfAwalMonth));\r\n    }\r\n\r\n    static getMod(n: number, m: number) {\r\n        const remain = n % m;\r\n        return Math.floor(remain >= 0 ? remain : remain + m);\r\n    };\r\n\r\n    static getAhierAwalDaysGap(firstDayOfAhierMonth: number, firstDayOfAwalMonth: number) {\r\n        let daysGap = 0;\r\n\r\n        if (firstDayOfAhierMonth < firstDayOfAwalMonth) {\r\n            daysGap = firstDayOfAwalMonth - firstDayOfAhierMonth;\r\n        } else if (firstDayOfAhierMonth > firstDayOfAwalMonth) {\r\n            daysGap = firstDayOfAwalMonth + (6 - firstDayOfAhierMonth) + 1; // Sunday is 0\r\n        }\r\n\r\n        return daysGap;\r\n    }\r\n\r\n    static convertToChamDigitUnicode(latinNumber: number) {\r\n        const ChamDigitArr = ['꩐', '꩑', '꩒', '꩓', '꩔', '꩕', '꩖', '꩗', '꩘', '꩙'];\r\n        const EnglishDigits = '0123456789';\r\n        const reg = new RegExp('[' + EnglishDigits + ']', 'g');\r\n\r\n        return latinNumber.toString().replace(reg, function (c) {\r\n            return ChamDigitArr[EnglishDigits.indexOf(c)]\r\n        });\r\n    }\r\n}","import { useEffect, useState } from \"react\";\r\nimport { ProgressBar } from \"react-bootstrap\";\r\nimport { VariantType } from \"../enums/enum\";\r\n\r\nexport interface CountDownBarProps {\r\n    dateName: string;\r\n    variantType: VariantType;\r\n    toDate: Date;\r\n}\r\n\r\nexport const CountDownBar = (props: CountDownBarProps) => {\r\n    const [percent, setPercent] = useState(100);\r\n    const [days, setDays] = useState(0);\r\n    const [hours, setHours] = useState(0);\r\n    const [minutes, setMinutes] = useState(0);\r\n    const [seconds, setSeconds] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            init();\r\n        }, 1000);\r\n    });\r\n\r\n    function init() {\r\n        if (!props.toDate) {\r\n            return;\r\n        }\r\n\r\n        const now = new Date().getTime();\r\n        const distance = props.toDate.getTime() - now;\r\n        const timeOfYear = 365 * 24 * 60 * 60 * 1000;\r\n        const percent = distance / timeOfYear * 100;\r\n        setPercent(percent);\r\n\r\n        // Time calculations for days, hours, minutes and seconds\r\n        const days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n        const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n        const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n        const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n        setDays(days);\r\n        setHours(hours);\r\n        setMinutes(minutes);\r\n        setSeconds(seconds);\r\n    }\r\n\r\n    return (\r\n        <ProgressBar variant={props.variantType.toString()} now={percent}\r\n            label={`${props.dateName}: còn ${days} ngày - ${(\"0\" + hours).slice(-2)}h${(\"0\" + minutes).slice(-2)}'${(\"0\" + seconds).slice(-2)}\"`} />\r\n    );\r\n}","import { AhierDate } from \"../model/AhierDate\";\r\nimport { AwalDate } from \"../model/AwalDate\";\r\n\r\ninterface DayProps {\r\n    date: Date;\r\n    dateAwal?: AwalDate;\r\n    dateAhier?: AhierDate;\r\n}\r\n\r\nconst divStyle: React.CSSProperties = {\r\n    display: \"flex\",\r\n    flexDirection: \"row-reverse\",\r\n    fontSize: \"0.8rem\"\r\n}\r\n\r\nexport const Day = (props: DayProps) => {\r\n    return (\r\n        <td>\r\n            <div style={divStyle}>\r\n                {props.date.getDate()}.{props.date.getMonth() + 1}\r\n            </div>\r\n            <div>\r\n\r\n            </div>\r\n        </td>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { Button, ButtonGroup, ButtonToolbar, Col, Container, Row, Table } from \"react-bootstrap\";\r\nimport { MonthEnum } from \"../enums/enum\";\r\nimport Helper from '../utility/helper';\r\nimport { Day } from \"./day\";\r\n\r\ninterface MonthProps {\r\n    year: number;\r\n    month: number;\r\n}\r\n\r\nexport const Month = (props: MonthProps) => {\r\n    const [year, setYear] = useState(props.year);\r\n    const [month, setMonth] = useState(props.month);\r\n    const [firstDateOfMonth, setFirstDateOfMonth] = useState(new Date());\r\n    const [firstDayOfMonth, setFirstDayOfMonth] = useState(0);\r\n\r\n    React.useEffect(() => {\r\n        function init() {\r\n            const firstDate = new Date(year, month, 1);\r\n            setFirstDateOfMonth(firstDate);\r\n            setFirstDayOfMonth(firstDate.getDay());\r\n        }\r\n\r\n        init();\r\n    }, [year, month]);\r\n\r\n    /*function addGregoryDays(date: Date, numberOfDays: number) {\r\n        let newDt = new Date(date);\r\n        newDt.setDate(date.getDate() + numberOfDays);\r\n        return newDt;\r\n    }*/\r\n\r\n    function handleGoToToday() {\r\n        const nowDate = new Date();\r\n        setMonth(nowDate.getMonth());\r\n        setYear(nowDate.getFullYear());\r\n    }\r\n\r\n    function handleGoToPreviousMonth() {\r\n        if (month > 0) {\r\n            setMonth(month - 1);\r\n        } else {\r\n            setMonth(11);\r\n            setYear(year - 1);\r\n        }\r\n    }\r\n\r\n    function handleGoToNextMonth() {\r\n        if (month + 1 < 11) {\r\n            setMonth(month + 1);\r\n        } else {\r\n            setMonth(0);\r\n            setYear(year + 1);\r\n        }\r\n    }\r\n\r\n    // draw Calendar Table\r\n    let count = 0;\r\n    let rows = [];\r\n\r\n    for (let weeks = 0; weeks < 6; weeks++) {\r\n        let cells = []\r\n        for (let days = 0; days < 7; days++) {\r\n            let cellDate = Helper.addGregoryDays(firstDateOfMonth, (count - firstDayOfMonth));\r\n            cells.push(<Day key={`cell${weeks}-${days}`} date={cellDate}></Day>);\r\n            count++\r\n        }\r\n\r\n        rows.push(<tr key={weeks}>{cells}</tr>)\r\n    }\r\n\r\n    const dayNames = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    const tableStyle: React.CSSProperties = {\r\n        height: \"400px\",\r\n        tableLayout: \"fixed\"\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col md={4} style={{ textAlign: \"left\" }}>\r\n                    <ButtonToolbar aria-label=\"Toolbar with button groups\">\r\n                        <ButtonGroup aria-label=\"Basic example\">\r\n                            <Button variant=\"secondary\" className=\"fa fa-chevron-left\" onClick={handleGoToPreviousMonth} />\r\n                            <Button variant=\"secondary\" className=\"fa fa-chevron-right\" onClick={handleGoToNextMonth} />\r\n                        </ButtonGroup>\r\n                        <ButtonGroup aria-label=\"Third group\" style={{ marginLeft: \".75em\" }}>\r\n                            <Button variant=\"secondary\" onClick={handleGoToToday}>Today</Button>\r\n                        </ButtonGroup>\r\n                    </ButtonToolbar>\r\n                </Col>\r\n                <Col md={4} style={{ textAlign: \"center\" }}>\r\n                    <h2>{MonthEnum[month]} {year}</h2>\r\n                </Col>\r\n                <Col md={4}></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Table striped bordered hover style={tableStyle}>\r\n                        <thead>\r\n                            <tr>\r\n                                {dayNames.map((d, index) =>\r\n                                    <th style={{ padding: \"2px\", textAlign: \"center\" }} key={index}>{d}</th>\r\n                                )}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {rows}\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n","import { Col, Row } from \"react-bootstrap\";\r\nimport { displayIkasSarakName } from \"../enums/enum\";\r\nimport { AhierDate, AhierMonth } from \"../model/AhierDate\";\r\nimport { AwalDate } from \"../model/AwalDate\";\r\nimport Helper from \"../utility/helper\";\r\n\r\ninterface DayAhierProps {\r\n    dateGregory: Date;\r\n    dateAwal: AwalDate;\r\n    dateAhier: AhierDate;\r\n    currentAhierMonth: AhierMonth;\r\n    dayNumbersOfCurrentAhierMonth: number;\r\n    dayNumbersOfCurrentAwalMonth: number;\r\n}\r\n\r\nexport const DayAhier = (props: DayAhierProps) => {\r\n    const tdStyle: React.CSSProperties = {\r\n        opacity: (props.dateAhier.ahierMonth !== props.currentAhierMonth) ? 0.3 : 1\r\n    }\r\n\r\n    const GregoryDateStyle: React.CSSProperties = {\r\n        fontSize: \"0.8rem\",\r\n        color: \"black\",\r\n        paddingTop: \"0.1rem\",\r\n        paddingBottom: \"0.1rem\",\r\n        textAlign: \"right\"\r\n    }\r\n\r\n    const ahierDateStyle: React.CSSProperties = {\r\n        fontSize: \"1.5rem\",\r\n        color: \"orange\",\r\n        paddingTop: \"2rem\",\r\n        paddingBottom: \"0.1rem\",\r\n        textAlign: \"right\"\r\n    }\r\n\r\n    const awalDateStyle: React.CSSProperties = {\r\n        flexDirection: \"row\",\r\n        fontSize: \"0.8rem\",\r\n        color: \"green\",\r\n        paddingTop: \"2rem\",\r\n        paddingBottom: \"0.3rem\",\r\n        alignSelf: \"end\"\r\n    }\r\n\r\n    function displayGregoryDate(dateGregory: Date) {\r\n        const monthGregogy = dateGregory.getMonth() + 1;\r\n\r\n        if (dateGregory.getDate() === 1) {\r\n            return dateGregory.getDate() + \".\" + monthGregogy + \".\" + dateGregory.getFullYear();\r\n        } else {\r\n            return dateGregory.getDate();\r\n        }\r\n    }\r\n\r\n    function displayAhierDate(dateAhier: AhierDate) {\r\n        const bingun = 'ꩃ';\r\n        const klem = 'ꩌ';\r\n\r\n        if (props.dayNumbersOfCurrentAhierMonth === 30) {\r\n            if (dateAhier.date <= 15) {\r\n                return Helper.convertToChamDigitUnicode(dateAhier.date) + bingun;\r\n            } else {\r\n                return Helper.convertToChamDigitUnicode(dateAhier.date - 15) + klem;\r\n            }\r\n        } else {\r\n            if (dateAhier.date <= 14) {\r\n                if (dateAhier.date <= 5) {\r\n                    return Helper.convertToChamDigitUnicode(dateAhier.date) + bingun;\r\n                } else {\r\n                    return Helper.convertToChamDigitUnicode(dateAhier.date + 1) + bingun;\r\n                }\r\n            } else {\r\n                return Helper.convertToChamDigitUnicode(dateAhier.date - 14) + klem;\r\n            }\r\n        }\r\n    };\r\n\r\n    function displayAwalDate(dateAwal: AwalDate) {\r\n        const monthAwal = dateAwal.awalMonth.month + 1;\r\n        const bingun = 'ꩃ';\r\n        const klem = 'ꩌ';\r\n\r\n        if (dateAwal.date === 1) {\r\n            return (\r\n                <>\r\n                    <label style={{ margin: 0 }} >{Helper.convertToChamDigitUnicode(dateAwal.date) + bingun + \".\" + Helper.convertToChamDigitUnicode(monthAwal) + \".\"}</label>\r\n                    <label style={{ margin: 0 }} className='ikasSarak-month-cell'>{displayIkasSarakName(dateAwal.awalMonth.year.ikasSarak)}</label>\r\n                </>\r\n            )\r\n        } else {\r\n            if (props.dayNumbersOfCurrentAwalMonth === 30) {\r\n                if (dateAwal.date <= 15) {\r\n                    return Helper.convertToChamDigitUnicode(dateAwal.date) + bingun;\r\n                } else {\r\n                    return Helper.convertToChamDigitUnicode(dateAwal.date - 15) + klem;\r\n                }\r\n            } else {\r\n                if (dateAwal.date <= 14) {\r\n                    return Helper.convertToChamDigitUnicode(dateAwal.date) + bingun;\r\n                } else {\r\n                    return Helper.convertToChamDigitUnicode(dateAwal.date - 14) + klem;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <td style={tdStyle}>\r\n            <Row>\r\n                <Col md={6}></Col>\r\n                <Col style={GregoryDateStyle} md={6}>\r\n                    {displayGregoryDate(props.dateGregory)}\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={6}></Col>\r\n                <Col md={6}></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col style={awalDateStyle} md={6}>\r\n                    {/* {props.dateAwal.date}.{props.dateAwal.awalMonth.month + 1}-{IkasSarakEnum[props.dateAwal.awalMonth.year.ikasSarak]} */}\r\n                    {displayAwalDate(props.dateAwal)}\r\n                </Col>\r\n                <Col style={ahierDateStyle} md={6}>\r\n                    {/* {props.dateAhier.date}.{props.dateAhier.ahierMonth.month + 1}.{NasakEnum[props.dateAhier.ahierMonth.year.nasak]}.{IkasSarakEnum[props.dateAhier.ahierMonth.year.ikasSarak]} */}\r\n                    {displayAhierDate(props.dateAhier)}\r\n                </Col>\r\n            </Row>\r\n        </td>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { Button, ButtonGroup, ButtonToolbar, Col, Container, Row, Table } from \"react-bootstrap\";\r\nimport { AhierMonthEnum, displayIkasSarakName, displayMonthName, displayNasakName, IkasSarakEnum, NasakEnum } from \"../enums/enum\";\r\nimport { AhierDate, AhierMonth } from \"../model/AhierDate\";\r\nimport { AwalDate, AwalMonth } from \"../model/AwalDate\";\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport Helper from \"../utility/helper\";\r\nimport { DayAhier } from \"./dayAhier\";\r\n\r\ninterface MonthAhierProps {\r\n    matrixSakawi: MatrixCalendarType[],\r\n    currentAhierMonthMatrix: MatrixCalendarType\r\n}\r\n\r\nexport const MonthAhier = (props: MonthAhierProps) => {\r\n    const initialAhierMonth: AhierMonth = { month: AhierMonthEnum.BilanSa, year: { nasak: NasakEnum.Pabuei, ikasSarak: IkasSarakEnum.JimLuic, yearNumber: 2019 } };\r\n    const initialAwalMonth: AwalMonth = { month: 0, year: { ikasSarak: 0, yearNumber: 1400 } };\r\n    const initialAhierDate: AhierDate = { date: 1, ahierMonth: initialAhierMonth };\r\n    const initialAwalDate: AwalDate = { date: 1, awalMonth: initialAwalMonth };\r\n    const initialGregoryDate: Date = new Date();\r\n\r\n    const [currentAhierMonthMatrix, setCurrentAhierMonthMatrix] = useState(props.currentAhierMonthMatrix);\r\n\r\n    const [firstDateOfAhierMonth, setFirstDateOfAhierMonth] = useState<AhierDate>(initialAhierDate);\r\n    const [firstDayOfAhierMonth, setFirstDayOfAhierMonth] = useState(0);\r\n\r\n    const [firstDateOfAwalMonth, setFirstDateOfAwalMonth] = useState<AwalDate>(initialAwalDate);\r\n    const [firstDayOfAwalMonth, setFirstDayOfAwalMonth] = useState(0);\r\n\r\n    const [firstDateOfGregoryMonth, setFirstDateOfGregoryMonth] = useState<Date>(initialGregoryDate);\r\n    const [firstDayOfGregoryMonth, setFirstDayOfGregoryMonth] = useState(0);\r\n\r\n    React.useEffect(() => {\r\n        function init() {\r\n            // Ahier Date\r\n            const firstAhierDate: AhierDate = { date: 1, ahierMonth: currentAhierMonthMatrix.ahierMonth };\r\n            setFirstDateOfAhierMonth(firstAhierDate);\r\n            setFirstDayOfAhierMonth(currentAhierMonthMatrix.firstDayOfAhierMonth);\r\n\r\n            // Awal Date\r\n            const firstAwalDate: AwalDate = { date: 1, awalMonth: currentAhierMonthMatrix.awalMonth };\r\n            setFirstDateOfAwalMonth(firstAwalDate);\r\n            setFirstDayOfAwalMonth(currentAhierMonthMatrix.firstDayOfAwalMonth);\r\n\r\n            // Gregory Date\r\n            setFirstDateOfGregoryMonth(currentAhierMonthMatrix.dateOfGregoryCalendar);\r\n            setFirstDayOfGregoryMonth(currentAhierMonthMatrix.dateOfGregoryCalendar.getDay());\r\n        }\r\n\r\n        init();\r\n    }, [currentAhierMonthMatrix, props.currentAhierMonthMatrix]);\r\n\r\n    function handleGoToToday() {\r\n        setCurrentAhierMonthMatrix(props.currentAhierMonthMatrix);\r\n    }\r\n\r\n    function handleGoToPreviousMonth() {\r\n        const index = props.matrixSakawi.findIndex(x => x === currentAhierMonthMatrix);\r\n        setCurrentAhierMonthMatrix(props.matrixSakawi[index - 1]);\r\n    }\r\n\r\n    function handleGoToNextMonth() {\r\n        const index = props.matrixSakawi.findIndex(x => x === currentAhierMonthMatrix);\r\n        setCurrentAhierMonthMatrix(props.matrixSakawi[index + 1]);\r\n    }\r\n\r\n    // draw Calendar Table\r\n    let count = 0;\r\n    let rows = [];\r\n\r\n    for (let weeks = 0; weeks < 6; weeks++) {\r\n        let cells = []\r\n        for (let days = 0; days < 7; days++) {\r\n            const cellAhierDate = Helper.addAhierDays(props.matrixSakawi, firstDateOfAhierMonth, (count - firstDayOfAhierMonth));\r\n            const dateAhier: AhierDate = {\r\n                date: cellAhierDate.date,\r\n                ahierMonth: cellAhierDate.ahierMonth\r\n            }\r\n\r\n            let week = 0;\r\n            if (firstDayOfAwalMonth < firstDayOfAhierMonth) {\r\n                week = 7;\r\n            }\r\n\r\n            const cellAwalDate = Helper.addAwalDays(firstDateOfAwalMonth, (count - firstDayOfAwalMonth - week));\r\n            const dateAwal: AwalDate = {\r\n                date: cellAwalDate.date,\r\n                awalMonth: cellAwalDate.awalMonth\r\n            }\r\n\r\n            const GregoryDate = Helper.addGregoryDays(firstDateOfGregoryMonth, (count - firstDayOfGregoryMonth));\r\n            const dayNumbersOfCurrentAhierMonth = Helper.getActualDayNumbersOfAhierMonth(props.matrixSakawi, cellAhierDate.ahierMonth);\r\n            const dayNumbersOfCurrentAwalMonth = Helper.getDayNumbersOfAwalMonth(dateAwal.awalMonth.year, dateAwal.awalMonth.month);\r\n\r\n            cells.push(\r\n                <DayAhier\r\n                    key={`cell${weeks}-${days}`}\r\n                    dateAhier={dateAhier}\r\n                    dateAwal={dateAwal}\r\n                    dateGregory={GregoryDate}\r\n                    currentAhierMonth={currentAhierMonthMatrix.ahierMonth}\r\n                    dayNumbersOfCurrentAhierMonth={dayNumbersOfCurrentAhierMonth}\r\n                    dayNumbersOfCurrentAwalMonth={dayNumbersOfCurrentAwalMonth}\r\n                />\r\n            );\r\n            count++;\r\n        }\r\n\r\n        rows.push(<tr key={weeks}>{cells}</tr>)\r\n    }\r\n\r\n    const dayNames = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    const tableStyle: React.CSSProperties = {\r\n        height: \"400px\",\r\n        tableLayout: \"fixed\"\r\n    }\r\n\r\n    const currentAhierMonth = currentAhierMonthMatrix.ahierMonth;\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col md={4} style={{ textAlign: \"left\" }}>\r\n                    <ButtonToolbar aria-label=\"Toolbar with button groups\">\r\n                        <ButtonGroup aria-label=\"Basic example\">\r\n                            <Button variant=\"secondary\" className=\"fa fa-chevron-left\" onClick={handleGoToPreviousMonth} />\r\n                            <Button variant=\"secondary\" className=\"fa fa-chevron-right\" onClick={handleGoToNextMonth} />\r\n                        </ButtonGroup>\r\n                        <ButtonGroup aria-label=\"Third group\" style={{ marginLeft: \".75em\" }}>\r\n                            <Button variant=\"secondary\" onClick={handleGoToToday}>Today</Button>\r\n                        </ButtonGroup>\r\n                    </ButtonToolbar>\r\n                </Col>\r\n                <Col md={6} style={{ textAlign: \"center\" }}>\r\n                    <div>\r\n                        <label className='bilan-title'>{displayMonthName(currentAhierMonth.month)}</label>\r\n                        {' - '}<label className='bilan-title'>{displayNasakName(currentAhierMonth.year.nasak)}</label>\r\n                        {'   '}<label className='ikasSarak-title'>{displayIkasSarakName(currentAhierMonth.year.ikasSarak)}</label>\r\n                        {' - '}<label className='bilan-title'>{Helper.convertToChamDigitUnicode(currentAhierMonth.year.yearNumber ?? 0)}</label>\r\n                    </div>\r\n                    <h5>{AhierMonthEnum[currentAhierMonth.month]} {`(${(currentAhierMonth.month + 1)})`} - {NasakEnum[currentAhierMonth.year.nasak]} {IkasSarakEnum[currentAhierMonth.year.ikasSarak]} - {currentAhierMonth.year.yearNumber}</h5>\r\n                </Col>\r\n                <Col md={2}></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Table bordered hover style={tableStyle}>\r\n                        <thead>\r\n                            <tr>\r\n                                {dayNames.map((d, index) =>\r\n                                    <th style={{ padding: \"2px\", textAlign: \"center\" }} key={index}>{d}</th>\r\n                                )}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {rows}\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n","import { Col, Row } from \"react-bootstrap\";\r\nimport { IkasSarakEnum } from \"../enums/enum\";\r\nimport { AhierDate } from \"../model/AhierDate\";\r\nimport { AwalDate } from \"../model/AwalDate\";\r\n\r\ninterface DayAwalProps {\r\n    date?: Date;\r\n    dateAwal: AwalDate;\r\n    dateAhier?: AhierDate;\r\n}\r\n\r\nconst divStyle: React.CSSProperties = {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    fontSize: \"0.8rem\",\r\n    color: \"green\",\r\n    paddingTop: \"2rem\",\r\n    paddingBottom: \"0.1rem\",\r\n}\r\n\r\nexport const DayAwal = (props: DayAwalProps) => {\r\n    return (\r\n        <td>\r\n            <Row>\r\n                <Col md={4}></Col>\r\n                <Col md={4}></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={4}></Col>\r\n                <Col md={4}></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col style={divStyle} md={4}>\r\n                    {props.dateAwal.date}.{props.dateAwal.awalMonth.month + 1}.{IkasSarakEnum[props.dateAwal.awalMonth.year.ikasSarak]}\r\n                </Col>\r\n                <Col md={4}></Col>\r\n            </Row>\r\n        </td>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { Button, ButtonGroup, ButtonToolbar, Col, Container, Row, Table } from \"react-bootstrap\";\r\nimport { AwalMonthEnum, IkasSarakEnum } from \"../enums/enum\";\r\nimport { AwalDate, AwalMonth } from \"../model/AwalDate\";\r\nimport Helper from '../utility/helper';\r\nimport { DayAwal } from \"./dayAwal\";\r\n\r\ninterface MonthAwalProps {\r\n    awalMonth: AwalMonth;\r\n}\r\n\r\nexport const MonthAwal = (props: MonthAwalProps) => {\r\n    const [awalMonth, setAwalMonth] = useState(props.awalMonth);\r\n    let firstDate: AwalDate = { date: 1, awalMonth: props.awalMonth };\r\n    const [firstDateOfMonth, setFirstDateOfMonth] = useState<AwalDate>(firstDate);\r\n    const [firstDayOfMonth, setFirstDayOfMonth] = useState(0);\r\n\r\n    React.useEffect(() => {\r\n        function init() {\r\n            // Read Sakawi Takai Ciim\r\n            let startDay = Number.parseInt(Helper.getStartDayByAwalMonth(awalMonth.year, awalMonth.month));\r\n            //setFirstDayOfMonth(startDay);\r\n\r\n            let firstDate: AwalDate = { date: 1, awalMonth: awalMonth };\r\n            //setFirstDateOfMonth(firstDate);\r\n        }\r\n\r\n        init();\r\n    }, [awalMonth]);\r\n\r\n    function handleGoToToday() {\r\n        /*let result = Helper.getAwalDateByGregoryDate(new Date(2016, 9, 2));\r\n        console.log('2016, 9, 2 => ', JSON.stringify(result));*/\r\n\r\n        /*let startAhierYear: AhierYear = {\r\n            nasak: Nasak.Pabuei,\r\n            ikasSarak: IkasSarak.Jim,\r\n            yearNumber: 2019\r\n        }\r\n\r\n        let newYear = addAhierYears(startAhierYear, -1);\r\n        console.log('new year: ' + JSON.stringify(newYear))*/\r\n\r\n        let matrix = Helper.buildMatrixCalendar(2020);\r\n        console.log('matrix: ' + JSON.stringify(matrix))\r\n\r\n        /*const awalMonth: AwalMonth = { month: 0, year: { ikasSarak: IkasSarakEnum.Liéh, yearNumber: 2020 } };\r\n        let newMonth = addAwalMonths(awalMonth, -13);\r\n        console.log('addAwalMonths : ' + JSON.stringify(newMonth))*/\r\n\r\n        setAwalMonth({ month: 0, year: { ikasSarak: IkasSarakEnum.Liéh } });\r\n    }\r\n\r\n    function handleGoToPreviousMonth() {\r\n        setAwalMonth(Helper.addAwalMonths(awalMonth, -1));\r\n    }\r\n\r\n    function handleGoToNextMonth() {\r\n        setAwalMonth(Helper.addAwalMonths(awalMonth, 1));\r\n    }\r\n\r\n    // draw Calendar Table\r\n    let count = 0;\r\n    let rows = [];\r\n\r\n    for (let weeks = 0; weeks < 6; weeks++) {\r\n        let cells = []\r\n        for (let days = 0; days < 7; days++) {\r\n            let cellDate = Helper.addAwalDays(firstDateOfMonth, (count - firstDayOfMonth + 1));\r\n            let dateAwal: AwalDate = {\r\n                date: cellDate.date,\r\n                awalMonth: cellDate.awalMonth,\r\n            }\r\n\r\n            cells.push(<DayAwal key={`cell${weeks}-${days}`} dateAwal={dateAwal}></DayAwal>);\r\n            count++\r\n        }\r\n\r\n        rows.push(<tr key={weeks}>{cells}</tr>)\r\n    }\r\n\r\n    const dayNames = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    const tableStyle: React.CSSProperties = {\r\n        height: \"400px\",\r\n        tableLayout: \"fixed\"\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col md={4} style={{ textAlign: \"left\" }}>\r\n                    <ButtonToolbar aria-label=\"Toolbar with button groups\">\r\n                        <ButtonGroup aria-label=\"Basic example\">\r\n                            <Button variant=\"secondary\" className=\"fa fa-chevron-left\" onClick={handleGoToPreviousMonth} />\r\n                            <Button variant=\"secondary\" className=\"fa fa-chevron-right\" onClick={handleGoToNextMonth} />\r\n                        </ButtonGroup>\r\n                        <ButtonGroup aria-label=\"Third group\" style={{ marginLeft: \".75em\" }}>\r\n                            <Button variant=\"secondary\" onClick={handleGoToToday}>Today</Button>\r\n                        </ButtonGroup>\r\n                    </ButtonToolbar>\r\n                </Col>\r\n                <Col md={5} style={{ textAlign: \"center\" }}>\r\n                    <h2>{AwalMonthEnum[awalMonth.month]} {`(${(awalMonth.month + 1)})`} - {IkasSarakEnum[awalMonth.year.ikasSarak]}</h2>\r\n                </Col>\r\n                <Col md={3}></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Table striped bordered hover style={tableStyle}>\r\n                        <thead>\r\n                            <tr>\r\n                                {dayNames.map((d, index) =>\r\n                                    <th style={{ padding: \"2px\", textAlign: \"center\" }} key={index}>{d}</th>\r\n                                )}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {rows}\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { AhierMonthEnum, IkasSarakEnum, NasakEnum } from \"../enums/enum\";\r\nimport { AhierMonth } from \"../model/AhierDate\";\r\nimport { AwalMonth } from \"../model/AwalDate\";\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport Helper from \"../utility/helper\";\r\nimport { CountDownBar } from \"./countDownBar\";\r\nimport { Month } from \"./month\";\r\nimport { MonthAhier } from \"./monthAhier\";\r\nimport { MonthAwal } from \"./monthAwal\";\r\n\r\nexport declare type SakawiType = 'sakawiAwal' | 'sakawiAhier' | 'solarCalendar';\r\n\r\nexport const Calendar = () => {\r\n    const initialAhierMonth: AhierMonth = { month: AhierMonthEnum.BilanSa, year: { nasak: NasakEnum.Pabuei, ikasSarak: IkasSarakEnum.JimLuic, yearNumber: 2019 } };\r\n    const initialAwalMonth: AwalMonth = { month: 0, year: { ikasSarak: 0, yearNumber: 1400 } };\r\n    const initialGregoryDate: Date = new Date();\r\n\r\n    const initialMatrixCalendarType: MatrixCalendarType = {\r\n        ahierMonth: initialAhierMonth,\r\n        dayNumbersOfAhierMonth: 0,\r\n        firstDayOfAhierMonth: 0,\r\n        dateOfGregoryCalendar: initialGregoryDate,\r\n        awalMonth: initialAwalMonth,\r\n        dayNumbersOfAwalMonth: 0,\r\n        firstDayOfAwalMonth: 0\r\n    }\r\n\r\n    const [matrixSakawi, setMatrixSakawi] = useState<MatrixCalendarType[]>([]);\r\n    const [currentAhierMonth, setCurrentAhierMonth] = useState<MatrixCalendarType>(initialMatrixCalendarType);\r\n    const [year] = useState(new Date().getFullYear());\r\n    const [month] = useState(new Date().getMonth());\r\n    const [sakawiType] = useState<SakawiType>('sakawiAhier');\r\n\r\n    // Sakawi Awal\r\n    let awalMonth: AwalMonth = { month: 0, year: { ikasSarak: IkasSarakEnum.Hak } };\r\n    const [monthAwal] = useState(awalMonth);\r\n\r\n    React.useEffect(() => {\r\n        function init() {\r\n            // Build matrix Calendar\r\n            let matrix = Helper.buildMatrixCalendar(2044);\r\n            setMatrixSakawi(matrix);\r\n            //console.log('matrix', JSON.stringify(matrix));\r\n\r\n            // Current matrix item \r\n            const currentAhierMonth = matrix.filter(m =>\r\n                Helper.addGregoryDays(m.dateOfGregoryCalendar, m.dayNumbersOfAhierMonth) > new Date())[0];\r\n\r\n            if (currentAhierMonth) {\r\n                setCurrentAhierMonth(currentAhierMonth);\r\n            }\r\n        }\r\n\r\n        init();\r\n    }, []);\r\n    \r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <CountDownBar dateName={\"Rija Nagar\"} variantType='success' toDate={new Date(2022, 4, 28)} />\r\n                    <CountDownBar dateName={\"Katé\"} variantType='info' toDate={new Date(2021, 9, 5)} />\r\n                    <CountDownBar dateName={\"Ramawan\"} variantType='warning' toDate={new Date(2022, 4, 2)} />\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n            {matrixSakawi.length > 0 &&\r\n                <Row>\r\n                    {sakawiType === 'solarCalendar' && <Month year={year} month={month} />}\r\n                    {sakawiType === 'sakawiAwal' && <MonthAwal awalMonth={monthAwal} />}\r\n                    {sakawiType === 'sakawiAhier' && <MonthAhier matrixSakawi={matrixSakawi} currentAhierMonthMatrix={currentAhierMonth} />}\r\n                </Row>}\r\n        </>\r\n    );\r\n}","import { Card, Col, Container, Row, ListGroup, Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\n\r\ninterface LayoutProps {\r\n    children: JSX.Element;\r\n}\r\n\r\nconst footerStyle: React.CSSProperties = {\r\n    background: \"#20232a\",\r\n    color: \"white\",\r\n    padding: \"15px\",\r\n    textAlign: \"center\",\r\n    justifyContent: \"center\"\r\n}\r\n\r\nexport const Layout = (props: LayoutProps) => {\r\n    return (\r\n        <Container fluid>\r\n            {/* Header */}\r\n            <Row>\r\n            <Col>\r\n                <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"#home\">SAKAWI CHAM</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto my-2 my-lg-0\"\r\n                        style={{ maxHeight: '100px' }}\r\n                        navbarScroll>\r\n                            <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                            <Nav.Link href=\"#link\">Link</Nav.Link>\r\n                            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                                <NavDropdown.Divider />\r\n                                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                </Col>\r\n            </Row>\r\n            <br/>\r\n            {/* Body */}\r\n            <Row>\r\n                <Col sm={2}>\r\n                    <Card>\r\n                        <Card.Header>Featured</Card.Header>\r\n                        <ListGroup>\r\n                            <ListGroup.Item>Cras justo odio</ListGroup.Item>\r\n                            <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\r\n                            <ListGroup.Item>Vestibulum at eros</ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n                <Col sm={10}>\r\n                    {props.children}\r\n                </Col>\r\n            </Row>\r\n            {/* Fotter */}\r\n            <Row>\r\n                <Col>\r\n                    <p style={footerStyle}>{`© ${new Date().getFullYear()} Sakawi Cham`}</p>\r\n                </Col> \r\n            </Row>\r\n        </Container>\r\n    );\r\n}","import React from 'react';\r\n//import logo from './logo.svg';\r\nimport './App.css';\r\nimport { Calendar } from './components/calendar';\r\nimport { Layout } from './Layout';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Layout>\r\n        <Calendar/>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}