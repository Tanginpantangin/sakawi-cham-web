{"version":3,"sources":["enums/enum.ts","utility/constant.ts","utility/helper.ts","components/countDownBar.tsx","components/dayDetails.tsx","components/monthNavigation.tsx","components/monthAhier.tsx","components/monthAwal.tsx","components/monthGregory.tsx","components/calendar.tsx","Layout.tsx","App.tsx","index.tsx"],"names":["MonthEnum","DayEnum","IkasSarakEnum","NasakEnum","AwalMonthEnum","AhierMonthEnum","GuecTypeEnum","GuenTypeEnum","displayMonthName","month","result","displayNasakName","nasak","displayIkasSarakName","ikasSarak","firstDateOfSakawiAwal_Lieh_1407","Date","awalYearArray","no","name","Liéh","numberOfDays","Hak","Jim","Jây","Dal","Bak","Waw","JimLuic","awalMonthArray","Muharam","Syafar","Rabiulawal","Rabiulakhir","Jamadilawal","Jamadilakhir","Rejab","Sykban","Ramadan","Syawal","Julkaejah","Julhiijaah","Helper","currentDate","addedDays","getDayNumbersOfAwalMonth","awalMonth","year","newDays","date","newMonth","newYear","currentMonth","addedMonths","quotient","Math","floor","getMod","addAwalYears","currentYear","addedYears","newIkasSarak","yearNumber","yearName","yearItem","sakawiTakaiCiimConfig","filter","x","ArabYear","differenceInDays","getTime","remain","abs","awalYearNumber","awalYear","awalDate","totalYears","i","length","numberDaysOfCurrentYear","totalMonths","j","maxtrixCalendar","getActualDayNumbersOfAhierMonth","ahierMonth","BilanSa","Takuh","addAhierMonths","previousMonth","numberOfMonths","getMonthNumbersOfAhierYear","addAhierYears","previousYear","newNasak","remainNasak","numberOfDay","BilanKlau","BilanLima","BilanTajuh","BilanSalipan","BilanPuis","BilanDua","BilanPak","BilanNem","BilanDalipan","BilanSapluh","BilanMak","BilanBhang","index","findIndex","JSON","stringify","dayNumbersOfAhierMonth","newDt","setDate","getDate","toYearAhier","matrixCalendar","fullCalendar","startAhierYear","Rimaong","numberOfAhierYear","newGregoryDate","y","ahierYear","matrixPerYear","renderMatrixPerYear","validMatrix","applyGuenGuecRules","calendarDetails","renderCalendarDetails","push","lastMonthItem","addGregoryDays","dateOfGregoryCalendar","firstGregoryDate","addedGregoryDays","numberOfAhierMonth","m","getExpectedDayNumbersOfAhierMonth","firstDayOfAhierMonth","getDay","getAwalDateByGregoryDate","addAwalMonths","dayNumbersOfAwalMonth","firstDayOfAwalMonth","Number","parseInt","getStartDayByAwalMonth","ahierMonthItem","hasGuen","typeOfGuen","NoGuen","hasGuec","typeOfGuec","NoGuec","hasGuenRuleInNextYear","monthGuen","monthGuec","guecTypeInNextYear","element","checkIsGuenToAddDay","GuenByNormalRule","newDate","checkIsGuecToMinusDay","GuecByNormalRule","lastMonthOfCurrentYear","firstGregoryDateOfNextYear","checkHasGuecRuleInNextYear","checkHasGuenRuleInNextYear","getAhierAwalDaysGap","firstDateOfAhierMonth","firstDateOfAwalMonth","firstDateOfGregoryMonth","daysGap","days","addedAhierDate","addAhierDays","dateAhier","addedAwalDate","addAwalDays","monthDetailsCalendar","dateAwal","dateGregory","undefined","firstGregoryDateNextYear","nextAhierYear","matrixNextYear","firstMonth","isKateRamawanConflict","some","item","GuecByHareiButSukRule","GuecByKateRamawanRule","GuecByRijaNagarRule","n","latinNumber","ChamDigitArr","EnglishDigits","reg","RegExp","toString","replace","c","indexOf","CountDownBar","props","useState","percent","setPercent","setDays","hours","setHours","minutes","setMinutes","seconds","setSeconds","useEffect","setTimeout","eventDate","now","distance","init","variantType","dd","mm","getMonth","dateStr","getFullYear","eventType","Row","Col","md","style","marginBottom","fontWeight","slice","ProgressBar","height","variant","DayDetails","opacityValue","sakawiType","currentAhierMonth","currentAwalMonth","currentGregoryMonth","tdStyle","opacity","backgroundColor","toLocaleDateString","GregoryDateStyle","fontSize","color","paddingTop","paddingBottom","textAlign","ahierDateStyle","awalDateStyle","flexDirection","paddingRight","alignSelf","eventStyle","display","paddingLeft","monthGregogy","displayGregoryDate","minHeight","maxHeight","dayNumbersOfCurrentAhierMonth","getEvents","map","monthAwal","margin","convertToChamDigitUnicode","className","dayNumbersOfCurrentAwalMonth","displayAwalDate","MonthNavigation","ButtonToolbar","justifyContent","ButtonGroup","Button","onClick","onSelectSakawiType","marginRight","onClickToday","onClickPreviousMonth","onClickNextMonth","MonthAhier","initialAhierDate","Pabuei","initialAwalDate","initialGregoryDate","currentAhierMonthMatrix","setCurrentAhierMonthMatrix","setFirstDateOfAhierMonth","setFirstDayOfAhierMonth","setFirstDateOfAwalMonth","setFirstDayOfAwalMonth","setFirstDateOfGregoryMonth","firstDayOfGregoryMonth","setFirstDayOfGregoryMonth","React","firstAhierDate","firstAwalDate","count","rows","weeks","cells","week","cellAhierDate","matrixSakawi","cellAwalDate","GregoryDate","Container","type","Table","bordered","hover","tableLayout","d","padding","MonthAwal","currentAwalMonthMatrix","setCurrentAwalMonthMatrix","MonthGregory","currentGregoryMonthMatrix","setCurrentGregoryMonthMatrix","Calendar","initialAhierMonth","initialMatrixCalendarType","showWarning","setShowWarning","setMatrixSakawi","setCurrentAhierMonth","setCurrentAwalMonth","setCurrentGregoryMonth","setSakawiType","matrix","buildMatrixCalendar","console","log","Alert","onClose","dismissible","Heading","footerStyle","background","Layout","fluid","Navbar","bg","expand","Brand","href","Toggle","Collapse","id","Nav","navbarScroll","Link","sm","Card","ListGroup","Item","children","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd04195f.chunk.js","sourcesContent":["export declare type VariantType = 'primary' | 'info' | 'secondary' | 'success' | 'warning' | 'danger' | 'light' | 'link';\r\nexport declare type EventType = 'Akaok thun' | 'Rija Nagar' | 'Katé palei Hamu Tanran' | 'Katé angaok bimong' | 'Ca-mbur' | 'Tamâ ricaow Ramâwan' | 'Talaih aek Ramâwan' | 'Muk trun' | 'Ong trun' | 'Ikak Waha' | 'Talaih Waha' | 'Yuer Yang';\r\n\r\nexport enum MonthEnum {\r\n    January = 0,\r\n    February,\r\n    March,\r\n    April,\r\n    May,\r\n    June,\r\n    July,\r\n    August,\r\n    September,\r\n    October,\r\n    November,\r\n    December\r\n}\r\n\r\nexport enum DayEnum {\r\n    Sunday = 0,\r\n    Monday,\r\n    Tuesday,\r\n    Wednesday,\r\n    Thursday,\r\n    Friday,\r\n    Saturday\r\n}\r\n\r\nexport enum IkasSarakEnum {\r\n    Liéh = 0,\r\n    Hak,\r\n    Jim,\r\n    Jây,\r\n    Dal,\r\n    Bak,\r\n    Waw,\r\n    JimLuic\r\n}\r\n\r\nexport enum NasakEnum {\r\n    Takuh = 0,\r\n    Kabaw,\r\n    Rimaong,\r\n    Tapay,\r\n    InâGirai,\r\n    UlaAnaih,\r\n    Asaih,\r\n    Pabaiy,\r\n    Kra,\r\n    Manuk,\r\n    Asau,\r\n    Pabuei\r\n}\r\n\r\nexport enum AwalMonthEnum {\r\n    Muharam = 0,\r\n    Syafar,\r\n    Rabiulawal,\r\n    Rabiulakhir,\r\n    Jamadilawal,\r\n    Jamadilakhir,\r\n    Rejab,\r\n    Sykban,\r\n    Ramadan,\r\n    Syawal,\r\n    Julkaejah,\r\n    Julhiijaah\r\n}\r\n\r\nexport enum AhierMonthEnum {\r\n    BilanSa = 0,\r\n    BilanDua,\r\n    BilanKlau,\r\n    BilanPak,\r\n    BilanLima,\r\n    BilanNem,\r\n    BilanTajuh,\r\n    BilanDalipan,\r\n    BilanSalipan,\r\n    BilanSapluh,\r\n    BilanPuis,\r\n    BilanMak,\r\n    BilanBhang\r\n}\r\n\r\nexport enum GuecTypeEnum {\r\n    NoGuec = -1,\r\n    GuecByNormalRule,\r\n    GuecByHareiButSukRule,\r\n    GuecByRijaNagarRule,\r\n    GuecByKateRamawanRule,\r\n}\r\n\r\nexport enum GuenTypeEnum {\r\n    NoGuen = -1,\r\n    GuenByNormalRule\r\n}\r\n\r\nexport function displayMonthName(month: AhierMonthEnum) {\r\n    let result = '';\r\n\r\n    switch (month) {\r\n        case 0:\r\n            result = 'ꨝꨪꨤꩆ ꨧꨩ';\r\n            break;\r\n        case 1:\r\n            result = 'ꨝꨪꨤꩆ ꨕꨶꨩ';\r\n            break;\r\n        case 2:\r\n            result = 'ꨝꨪꨤꩆ ꨆꨵꨮꨭ';\r\n            break;\r\n        case 3:\r\n            result = 'ꨝꨪꨤꩆ ꨛꨩꩀ';\r\n            break;\r\n        case 4:\r\n            result = 'ꨝꨪꨤꩆ ꨤꨪꨟꨩ';\r\n            break;\r\n        case 5:\r\n            result = 'ꨝꨪꨤꩆ ꨘꩌ';\r\n            break;\r\n        case 6:\r\n            result = 'ꨝꨪꨤꩆ ꨓꨎꨭꩍ';\r\n            break;\r\n        case 7:\r\n            result = 'ꨝꨪꨤꩆ ꨕꨤꨪꨚꩆ';\r\n            break;\r\n        case 8:\r\n            result = 'ꨝꨪꨤꩆ ꨧꨤꨪꨚꩆ';\r\n            break;\r\n        case 9:\r\n            result = 'ꨝꨪꨤꩆ ꨧꨚꨵꨭꩍ';\r\n            break;\r\n        case 10:\r\n            result = 'ꨝꨪꨤꩆ ꨚꨶꨪꩋ';\r\n            break;\r\n        case 11:\r\n            result = 'ꨝꨪꨤꩆ ꨠꩀ';\r\n            break;\r\n        case 12:\r\n            result = 'ꨝꨪꨤꩆ ꨞꩃ';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function displayNasakName(nasak: NasakEnum) {\r\n    let result = '';\r\n\r\n    switch (nasak) {\r\n        case 0:\r\n            result = 'ꨓꨆꨭꩍ';\r\n            break;\r\n        case 1:\r\n            result = 'ꨆꨝꨥ';\r\n            break;\r\n        case 2:\r\n            result = 'ꨣꨪꨟꨯꨱꩃ';\r\n            break;\r\n        case 3:\r\n            result = 'ꨓꨛꩈ';\r\n            break;\r\n        case 4:\r\n            result = 'ꨁꨗꨩ ꨈꨪꨣꩈ';\r\n            break;\r\n        case 5:\r\n            result = 'ꨂꨤꨩ ꨗꨰꩍ';\r\n            break;\r\n        case 6:\r\n            result = 'ꨀꨧꨰꩍ';\r\n            break;\r\n        case 7:\r\n            result = 'ꨚꨝꨰꩈ';\r\n            break;\r\n        case 8:\r\n            result = 'ꨆꨴꨩ';\r\n            break;\r\n        case 9:\r\n            result = 'ꨟꨗꨭꩀ';\r\n            break;\r\n        case 10:\r\n            result = 'ꨀꨧꨮꨭ';\r\n            break;\r\n        case 11:\r\n            result = 'ꨚꨝꨶꨬ';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function displayIkasSarakName(ikasSarak: IkasSarakEnum) {\r\n    let result = '';\r\n\r\n    switch (ikasSarak) {\r\n        case 0:\r\n            result = '1';\r\n            break;\r\n        case 1:\r\n            result = '5';\r\n            break;\r\n        case 2:\r\n            result = '3';\r\n            break;\r\n        case 3:\r\n            result = '7';\r\n            break;\r\n        case 4:\r\n            result = '4';\r\n            break;\r\n        case 5:\r\n            result = '2';\r\n            break;\r\n        case 6:\r\n            result = '6';\r\n            break;\r\n        case 7:\r\n            result = '3';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n","import { AwalMonthEnum, IkasSarakEnum } from \"../enums/enum\";\r\n\r\nexport const firstDateOfSakawiAwal_Lieh_1407 = new Date(1986, 8, 5);//05/09/1986\r\nexport const yearNumberOfSakawiAwal_Lieh_1407 = 1407;\r\nexport const firstDateOfSakawiAhier_InaGirai_Lieh_1988 = new Date(1988, 3, 16);//16/04/1988\r\nexport const totalDaysOf8AwalYearCycle = 2835;\r\n\r\nexport const awalYearArray: { no: number; name: IkasSarakEnum; numberOfDays: number }[] = [\r\n    { no: 1, name: IkasSarakEnum.Liéh, numberOfDays: 354 },\r\n    { no: 2, name: IkasSarakEnum.Hak, numberOfDays: 355 },\r\n    { no: 3, name: IkasSarakEnum.Jim, numberOfDays: 354 },\r\n    { no: 4, name: IkasSarakEnum.Jây, numberOfDays: 354 },\r\n    { no: 5, name: IkasSarakEnum.Dal, numberOfDays: 355 },\r\n    { no: 6, name: IkasSarakEnum.Bak, numberOfDays: 354 },\r\n    { no: 7, name: IkasSarakEnum.Waw, numberOfDays: 354 },\r\n    { no: 8, name: IkasSarakEnum.JimLuic, numberOfDays: 355 }\r\n];\r\n\r\nexport const awalMonthArray: { no: number; name: AwalMonthEnum; numberOfDays: number }[] = [\r\n    { no: 1, name: AwalMonthEnum.Muharam, numberOfDays: 30 },\r\n    { no: 2, name: AwalMonthEnum.Syafar, numberOfDays: 29 },\r\n    { no: 3, name: AwalMonthEnum.Rabiulawal, numberOfDays: 30 },\r\n    { no: 4, name: AwalMonthEnum.Rabiulakhir, numberOfDays: 29 },\r\n    { no: 5, name: AwalMonthEnum.Jamadilawal, numberOfDays: 30 },\r\n    { no: 6, name: AwalMonthEnum.Jamadilakhir, numberOfDays: 29 },\r\n    { no: 7, name: AwalMonthEnum.Rejab, numberOfDays: 30 },\r\n    { no: 8, name: AwalMonthEnum.Sykban, numberOfDays: 29 },\r\n    { no: 9, name: AwalMonthEnum.Ramadan, numberOfDays: 30 },\r\n    { no: 10, name: AwalMonthEnum.Syawal, numberOfDays: 29 },\r\n    { no: 11, name: AwalMonthEnum.Julkaejah, numberOfDays: 30 },\r\n    { no: 12, name: AwalMonthEnum.Julhiijaah, numberOfDays: 30 }\r\n]","import sakawiTakaiCiimConfig from '../data/SakawiTakaiCiim.json';\r\nimport { AhierMonthEnum, AwalMonthEnum, GuecTypeEnum, GuenTypeEnum, IkasSarakEnum, NasakEnum } from \"../enums/enum\";\r\nimport { AhierDate, AhierMonth, AhierYear } from \"../model/AhierDate\";\r\nimport { AwalDate, AwalMonth, AwalYear } from '../model/AwalDate';\r\nimport { FullCalendarType } from '../model/FullCalendarType';\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport { awalMonthArray, awalYearArray, firstDateOfSakawiAwal_Lieh_1407, totalDaysOf8AwalYearCycle, yearNumberOfSakawiAwal_Lieh_1407 } from './constant';\r\n\r\nexport default class Helper {\r\n    //#region Awal\r\n    static addAwalDays(currentDate: AwalDate, addedDays: number) {\r\n        let numberOfDays = Helper.getDayNumbersOfAwalMonth(currentDate.awalMonth.year, currentDate.awalMonth.month);\r\n        let newDays = currentDate.date + addedDays;\r\n        let newMonth = currentDate.awalMonth.month;\r\n        let newYear = currentDate.awalMonth.year;\r\n\r\n        let result: AwalDate = {\r\n            date: 1,\r\n            awalMonth: {\r\n                month: AwalMonthEnum.Jamadilakhir,\r\n                year: { ikasSarak: IkasSarakEnum.Liéh }\r\n            }\r\n        };\r\n\r\n        if (newDays > numberOfDays) {\r\n            if (currentDate.awalMonth.month < 11) {\r\n                newMonth = currentDate.awalMonth.month + 1;\r\n            } else {\r\n                newMonth = 0;\r\n\r\n                if (currentDate.awalMonth.year.ikasSarak < 7) {\r\n                    newYear.ikasSarak = currentDate.awalMonth.year.ikasSarak + 1;\r\n                } else {\r\n                    newYear.ikasSarak = 0;\r\n                }\r\n            }\r\n\r\n            result = {\r\n                date: newDays - numberOfDays,\r\n                awalMonth: { month: newMonth, year: newYear }\r\n            };\r\n\r\n        } else if (newDays <= 0) {\r\n            if (currentDate.awalMonth.month > 0) {\r\n                newMonth = currentDate.awalMonth.month - 1;\r\n            } else {\r\n                newMonth = 11;\r\n\r\n                if (currentDate.awalMonth.year.ikasSarak > 0) {\r\n                    newYear.ikasSarak = currentDate.awalMonth.year.ikasSarak - 1;\r\n                } else {\r\n                    newYear.ikasSarak = 7;\r\n                }\r\n            }\r\n\r\n            result = {\r\n                date: Helper.getDayNumbersOfAwalMonth(currentDate.awalMonth.year, currentDate.awalMonth.month - 1) + newDays,\r\n                awalMonth: { month: newMonth, year: newYear }\r\n            };\r\n        }\r\n        else {\r\n            result = {\r\n                date: newDays,\r\n                awalMonth: currentDate.awalMonth\r\n            };\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static addAwalMonths(currentMonth: AwalMonth, addedMonths: number) {\r\n        let newMonth = currentMonth.month + addedMonths;\r\n        let quotient = Math.floor(newMonth / 12);\r\n        let remain = Helper.getMod(newMonth, 12);\r\n\r\n        let result: AwalMonth = {\r\n            month: remain,\r\n            year: Helper.addAwalYears(currentMonth.year, quotient)\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static addAwalYears(currentYear: AwalYear, addedYears: number) {\r\n        let newIkasSarak = currentYear.ikasSarak + addedYears;\r\n        let remain = Helper.getMod(newIkasSarak, 8);\r\n        let newYearNumber = (currentYear.yearNumber ?? 0) + addedYears;\r\n\r\n        let result: AwalYear = {\r\n            ikasSarak: remain,\r\n            yearNumber: newYearNumber\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static getDayNumbersOfAwalMonth(year: AwalYear, month: AwalMonthEnum) {\r\n        let numberOfDay = 0;\r\n\r\n        if (month === AwalMonthEnum.Muharam || month === AwalMonthEnum.Rabiulawal || month === AwalMonthEnum.Jamadilawal ||\r\n            month === AwalMonthEnum.Rejab || month === AwalMonthEnum.Ramadan || month === AwalMonthEnum.Julkaejah) {\r\n            // Tháng lẻ: (30 ngày), gồm: 1,3,5,7,9,11.\r\n            numberOfDay = 30;\r\n        } else if (month === AwalMonthEnum.Syafar || month === AwalMonthEnum.Rabiulakhir || month === AwalMonthEnum.Jamadilakhir ||\r\n            month === AwalMonthEnum.Sykban || month === AwalMonthEnum.Syawal) {\r\n            // Tháng chẳn: (29 ngày), gồm: 2,4,6,8,10. \r\n            numberOfDay = 29;\r\n        } else {\r\n            // Riêng tháng 12: \r\n            if (year.ikasSarak === IkasSarakEnum.Hak || year.ikasSarak === IkasSarakEnum.Dal || year.ikasSarak === IkasSarakEnum.JimLuic) {\r\n                // năm nhuận (thun \"Nâh\": Hak, Dal, Jim luic): 30 ngày\r\n                numberOfDay = 30;\r\n            } else {\r\n                // năm thường (thun \"Wak\"): 29 ngày\r\n                numberOfDay = 29;\r\n            }\r\n        }\r\n\r\n        return numberOfDay;\r\n    }\r\n\r\n    static getStartDayByAwalMonth(year: AwalYear, month: AwalMonthEnum) {\r\n        let yearName = IkasSarakEnum[year.ikasSarak];\r\n        let yearItem = sakawiTakaiCiimConfig.filter(x => x.ArabYear === yearName)[0];\r\n        let result = '';\r\n\r\n        switch (month) {\r\n            case 0:\r\n                result = yearItem['Month_01'];\r\n                break;\r\n            case 1:\r\n                result = yearItem['Month_02'];\r\n                break;\r\n            case 2:\r\n                result = yearItem['Month_03'];\r\n                break;\r\n            case 3:\r\n                result = yearItem['Month_04'];\r\n                break;\r\n            case 4:\r\n                result = yearItem['Month_05'];\r\n                break;\r\n            case 5:\r\n                result = yearItem['Month_06'];\r\n                break;\r\n            case 6:\r\n                result = yearItem['Month_07'];\r\n                break;\r\n            case 7:\r\n                result = yearItem['Month_08'];\r\n                break;\r\n            case 8:\r\n                result = yearItem['Month_09'];\r\n                break;\r\n            case 9:\r\n                result = yearItem['Month_10'];\r\n                break;\r\n            case 10:\r\n                result = yearItem['Month_11'];\r\n                break;\r\n            case 11:\r\n                result = yearItem['Month_12'];\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static getAwalDateByGregoryDate(date: Date) {\r\n        let differenceInTime = date.getTime() - firstDateOfSakawiAwal_Lieh_1407.getTime();\r\n        let differenceInDays = differenceInTime / (1000 * 3600 * 24);\r\n        let remain = Helper.getMod(differenceInDays, totalDaysOf8AwalYearCycle);\r\n        let quotient = Math.floor(Math.abs(differenceInDays) / totalDaysOf8AwalYearCycle);\r\n\r\n        let awalYearNumber = yearNumberOfSakawiAwal_Lieh_1407;\r\n        let awalYear = IkasSarakEnum.Liéh;\r\n        let awalMonth = AwalMonthEnum.Muharam;\r\n        let awalDate = 0;\r\n        let totalYears = 0;\r\n        for (let i = 0; i < awalYearArray.length; i++) {\r\n            totalYears += awalYearArray[i].numberOfDays;\r\n            if (remain < totalYears) {\r\n                awalYear = awalYearArray[i].name;\r\n\r\n                if (differenceInDays > 0) {\r\n                    awalYearNumber += (quotient * 8) + i;\r\n                } else {\r\n                    awalYearNumber -= (quotient * 8) + i;\r\n                }\r\n\r\n                let numberDaysOfCurrentYear = remain - (totalYears - awalYearArray[i].numberOfDays);\r\n                let totalMonths = 0;\r\n\r\n                for (let j = 0; j < awalMonthArray.length; j++) {\r\n                    totalMonths += awalMonthArray[j].numberOfDays;\r\n                    if (numberDaysOfCurrentYear < totalMonths) {\r\n                        awalMonth = awalMonthArray[j].name;\r\n                        let numberDaysOfCurrentMonth = numberDaysOfCurrentYear - (totalMonths - awalMonthArray[j].numberOfDays);\r\n                        awalDate = numberDaysOfCurrentMonth + 1;\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        let resultDate: AwalDate = {\r\n            date: awalDate,\r\n            awalMonth: { month: awalMonth, year: { ikasSarak: awalYear, yearNumber: awalYearNumber } }\r\n        }\r\n\r\n        return resultDate;\r\n    }\r\n    //#endregion\r\n\r\n    //#region Ahier\r\n    static addAhierDays(maxtrixCalendar: MatrixCalendarType[], currentDate: AhierDate, addedDays: number) {\r\n        const numberOfDays = Helper.getActualDayNumbersOfAhierMonth(maxtrixCalendar, currentDate.ahierMonth);\r\n        const newDays = currentDate.date + addedDays;\r\n\r\n        let result: AhierDate = {\r\n            date: 1,\r\n            ahierMonth: {\r\n                month: AhierMonthEnum.BilanSa,\r\n                year: { nasak: NasakEnum.Takuh, ikasSarak: IkasSarakEnum.Liéh }\r\n            }\r\n        };\r\n\r\n        if (newDays > numberOfDays) {\r\n            const nextMonth = Helper.addAhierMonths(currentDate.ahierMonth, 1);\r\n            result = {\r\n                date: newDays - numberOfDays,\r\n                ahierMonth: nextMonth\r\n            };\r\n        } else if (newDays <= 0) {\r\n            const previousMonth = Helper.addAhierMonths(currentDate.ahierMonth, -1);\r\n            const dayNumberOfPreviousMonth = Helper.getActualDayNumbersOfAhierMonth(maxtrixCalendar, previousMonth);\r\n            result = {\r\n                date: dayNumberOfPreviousMonth + newDays,\r\n                ahierMonth: previousMonth\r\n            };\r\n        }\r\n        else {\r\n            result = {\r\n                date: newDays,\r\n                ahierMonth: currentDate.ahierMonth\r\n            };\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static addAhierMonths(currentMonth: AhierMonth, addedMonths: number) {\r\n        const numberOfMonths = Helper.getMonthNumbersOfAhierYear(currentMonth.year);\r\n        const newMonth = currentMonth.month + addedMonths;\r\n        let result: AhierMonth = {\r\n            month: currentMonth.month,\r\n            year: currentMonth.year\r\n        }\r\n\r\n        if (newMonth > numberOfMonths - 1) {\r\n            const nextYear = Helper.addAhierYears(currentMonth.year, 1);\r\n            result = {\r\n                month: newMonth - numberOfMonths,\r\n                year: nextYear\r\n            }\r\n        } else if (newMonth < 0) {\r\n            const previousYear = Helper.addAhierYears(currentMonth.year, -1);\r\n            const numberOfMonthsOfPreviousYear = Helper.getMonthNumbersOfAhierYear(previousYear);\r\n\r\n            result = {\r\n                month: numberOfMonthsOfPreviousYear + newMonth,\r\n                year: previousYear\r\n            }\r\n        } else {\r\n            result = {\r\n                month: newMonth,\r\n                year: currentMonth.year\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static addAhierYears(currentYear: AhierYear, addedYears: number) {\r\n        let newNasak = (currentYear.nasak + addedYears) % 12;\r\n        let remainNasak = Helper.getMod(newNasak, 12);\r\n\r\n        let newIkasSarak = (currentYear.ikasSarak + addedYears) % 8;\r\n        let remainIkasSarak = Helper.getMod(newIkasSarak, 8);\r\n\r\n        let newYearNumber = (currentYear.yearNumber ?? 0) + addedYears;\r\n\r\n        let result: AhierYear = {\r\n            nasak: remainNasak,\r\n            ikasSarak: remainIkasSarak,\r\n            yearNumber: newYearNumber\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static getExpectedDayNumbersOfAhierMonth(year: AhierYear, month: AhierMonthEnum) {\r\n        let numberOfDay = 0;\r\n        if (month === AhierMonthEnum.BilanSa || month === AhierMonthEnum.BilanKlau || month === AhierMonthEnum.BilanLima ||\r\n            month === AhierMonthEnum.BilanTajuh || month === AhierMonthEnum.BilanSalipan || month === AhierMonthEnum.BilanPuis) {\r\n            // Tháng lẻ - \"bilan tapak\": (30 ngày), gồm: 1,3,5,7,9,11.\r\n            numberOfDay = 30;\r\n        } else if (month === AhierMonthEnum.BilanDua || month === AhierMonthEnum.BilanPak || month === AhierMonthEnum.BilanNem ||\r\n            month === AhierMonthEnum.BilanDalipan || month === AhierMonthEnum.BilanSapluh) {\r\n            // Tháng chẳn - \"bilan u\" : (29 ngày), gồm: 2,4,6,8,10. \r\n            numberOfDay = 29;\r\n        } else if (month === AhierMonthEnum.BilanMak) {\r\n            // Tháng 12:  \r\n            if (year.ikasSarak === IkasSarakEnum.Hak || year.ikasSarak === IkasSarakEnum.Dal || year.ikasSarak === IkasSarakEnum.JimLuic) {\r\n                // năm nhuận (thun \"Nâh\": Hak, Dal, Jim luic): 30 ngày\r\n                numberOfDay = 30;\r\n            } else {\r\n                // năm thường (thun \"Wak\"): 29 ngày\r\n                numberOfDay = 29;\r\n            }\r\n        } else if (month === AhierMonthEnum.BilanBhang) {\r\n            if (year.ikasSarak === IkasSarakEnum.Hak || year.ikasSarak === IkasSarakEnum.Dal || year.ikasSarak === IkasSarakEnum.JimLuic) {\r\n                // năm nhuận (thun \"Nâh\": Hak, Dal, Jim luic): 29 ngày\r\n                numberOfDay = 29;\r\n            }\r\n        }\r\n\r\n        return numberOfDay;\r\n    }\r\n\r\n    static getActualDayNumbersOfAhierMonth(maxtrixCalendar: MatrixCalendarType[], ahierMonth: AhierMonth) {\r\n        const index = maxtrixCalendar.findIndex(x => JSON.stringify(x.ahierMonth) === JSON.stringify(ahierMonth));\r\n        if (index !== -1) {\r\n            return maxtrixCalendar[index].dayNumbersOfAhierMonth;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    static getMonthNumbersOfAhierYear(year: AhierYear) {\r\n        if (year.ikasSarak === IkasSarakEnum.Hak\r\n            || year.ikasSarak === IkasSarakEnum.Dal\r\n            || year.ikasSarak === IkasSarakEnum.JimLuic) {\r\n            return 13;\r\n        }\r\n        return 12;\r\n    }\r\n    //#endregion\r\n\r\n    //#region Gregory\r\n    static addGregoryDays(date: Date, numberOfDays: number) {\r\n        let newDt = new Date(date);\r\n        newDt.setDate(date.getDate() + numberOfDays);\r\n        return newDt;\r\n    }\r\n    //#endregion\r\n\r\n    static buildMatrixCalendar(toYearAhier: number) {\r\n        let matrixCalendar: MatrixCalendarType[] = [];\r\n        let fullCalendar: FullCalendarType[] = [];\r\n\r\n        // Choose thun 1988 as a root\r\n        // const startAhierYear: AhierYear = {\r\n        //     nasak: NasakEnum.InâGirai,\r\n        //     ikasSarak: IkasSarakEnum.Liéh,\r\n        //     yearNumber: 1988\r\n        // }\r\n\r\n        const startAhierYear: AhierYear = {\r\n            nasak: NasakEnum.Rimaong,\r\n            ikasSarak: IkasSarakEnum.Jim,\r\n            yearNumber: 2022\r\n        }\r\n\r\n        const numberOfAhierYear = toYearAhier - (startAhierYear.yearNumber ?? 0);\r\n        //let newGregoryDate = firstDateOfSakawiAhier_InaGirai_Lieh_1988;\r\n        let newGregoryDate = new Date(2022, 3, 30);//16/04/1988\r\n\r\n        for (let y = 0; y < numberOfAhierYear; y++) {\r\n            const ahierYear = Helper.addAhierYears(startAhierYear, y);\r\n            const matrixPerYear = Helper.renderMatrixPerYear(ahierYear, newGregoryDate);\r\n            const validMatrix = Helper.applyGuenGuecRules(matrixPerYear);\r\n            //TODO: render details date from matrix elements\r\n            const calendarDetails = Helper.renderCalendarDetails(validMatrix);\r\n\r\n            matrixCalendar.push(...validMatrix);\r\n            fullCalendar.push(...calendarDetails);\r\n\r\n            const lastMonthItem = validMatrix[validMatrix.length - 1];\r\n            newGregoryDate = Helper.addGregoryDays(lastMonthItem.dateOfGregoryCalendar, lastMonthItem.dayNumbersOfAhierMonth);\r\n        }\r\n\r\n        return {\r\n            matrixCalendar,\r\n            fullCalendar\r\n        };\r\n    }\r\n\r\n    static renderMatrixPerYear(ahierYear: AhierYear, firstGregoryDate: Date) {\r\n        let matrixPerYear: MatrixCalendarType[] = [];\r\n        let newGregoryDate = firstGregoryDate;\r\n        let addedGregoryDays = 0;\r\n        const numberOfAhierMonth = Helper.getMonthNumbersOfAhierYear(ahierYear);\r\n\r\n        for (let m = 0; m < numberOfAhierMonth; m++) {\r\n            const ahierMonth: AhierMonth = { month: m, year: ahierYear };\r\n            const dayNumbersOfAhierMonth = Helper.getExpectedDayNumbersOfAhierMonth(ahierYear, m);\r\n            const firstDayOfAhierMonth = newGregoryDate.getDay();\r\n\r\n            const awalDate = Helper.getAwalDateByGregoryDate(newGregoryDate);\r\n            const awalMonth = Helper.addAwalMonths(awalDate.awalMonth, 1);\r\n            const dayNumbersOfAwalMonth = Helper.getDayNumbersOfAwalMonth(awalMonth.year, awalMonth.month);\r\n            const firstDayOfAwalMonth = Number.parseInt(Helper.getStartDayByAwalMonth(awalMonth.year, awalMonth.month)) - 1; // Sunday is 0 \r\n\r\n            let ahierMonthItem: MatrixCalendarType = {\r\n                ahierMonth: ahierMonth,\r\n                dayNumbersOfAhierMonth: dayNumbersOfAhierMonth,\r\n                hasGuen: false,\r\n                typeOfGuen: GuenTypeEnum.NoGuen,\r\n                hasGuec: false,\r\n                typeOfGuec: GuecTypeEnum.NoGuec,\r\n                firstDayOfAhierMonth: firstDayOfAhierMonth,\r\n                dateOfGregoryCalendar: newGregoryDate,\r\n                awalMonth: awalMonth,\r\n                dayNumbersOfAwalMonth: dayNumbersOfAwalMonth,\r\n                firstDayOfAwalMonth: firstDayOfAwalMonth\r\n            }\r\n\r\n            matrixPerYear.push(ahierMonthItem);\r\n\r\n            addedGregoryDays += dayNumbersOfAhierMonth;\r\n            newGregoryDate = Helper.addGregoryDays(firstGregoryDate, addedGregoryDays);\r\n        }\r\n\r\n        return matrixPerYear;\r\n    }\r\n\r\n    static applyGuenGuecRules(matrixPerYear: MatrixCalendarType[]) {\r\n        let monthGuen = -1;\r\n        let monthGuec = -1;\r\n        let guecTypeInNextYear = GuecTypeEnum.NoGuec;\r\n        let hasGuenRuleInNextYear = false;\r\n\r\n        // Check validations and fix in current year\r\n        for (let index = 0; index < matrixPerYear.length; index++) {\r\n            const element = matrixPerYear[index];\r\n\r\n            // Guen\r\n            if (monthGuen === -1 && Helper.checkIsGuenToAddDay(element.firstDayOfAhierMonth, element.firstDayOfAwalMonth)) {\r\n                monthGuen = index;\r\n                matrixPerYear[monthGuen - 1].dayNumbersOfAhierMonth += 1;\r\n                matrixPerYear[monthGuen - 1].hasGuen = true;\r\n                matrixPerYear[monthGuen - 1].typeOfGuen = GuenTypeEnum.GuenByNormalRule;\r\n            }\r\n\r\n            if (monthGuen !== -1 && index >= monthGuen) {\r\n                const newDate = Helper.addGregoryDays(matrixPerYear[index].dateOfGregoryCalendar, 1);\r\n                matrixPerYear[index].dateOfGregoryCalendar = newDate;\r\n                matrixPerYear[index].firstDayOfAhierMonth = newDate.getDay();\r\n            }\r\n\r\n            // Guec\r\n            if (monthGuec === -1 && Helper.checkIsGuecToMinusDay(element.firstDayOfAhierMonth, element.firstDayOfAwalMonth)) {\r\n                monthGuec = index;\r\n                matrixPerYear[monthGuec - 1].dayNumbersOfAhierMonth -= 1;\r\n                matrixPerYear[monthGuec - 1].hasGuec = true;\r\n                matrixPerYear[monthGuec - 1].typeOfGuec = GuecTypeEnum.GuecByNormalRule;\r\n            }\r\n\r\n            if (monthGuec !== -1 && index >= monthGuec) {\r\n                const newDate = Helper.addGregoryDays(matrixPerYear[index].dateOfGregoryCalendar, -1);\r\n                matrixPerYear[index].dateOfGregoryCalendar = newDate;\r\n                matrixPerYear[index].firstDayOfAhierMonth = newDate.getDay();\r\n            }\r\n        }\r\n\r\n        // Check validations in next year to fix current year\r\n        const lastMonthOfCurrentYear = matrixPerYear[matrixPerYear.length - 1];\r\n        const firstGregoryDateOfNextYear = Helper.addGregoryDays(lastMonthOfCurrentYear.dateOfGregoryCalendar, lastMonthOfCurrentYear.dayNumbersOfAhierMonth);\r\n        guecTypeInNextYear = Helper.checkHasGuecRuleInNextYear(lastMonthOfCurrentYear.ahierMonth.year, firstGregoryDateOfNextYear);\r\n        hasGuenRuleInNextYear = Helper.checkHasGuenRuleInNextYear(lastMonthOfCurrentYear.ahierMonth.year, firstGregoryDateOfNextYear);\r\n\r\n        if (guecTypeInNextYear !== GuecTypeEnum.NoGuec) {\r\n            // Bilan Mak (12)\r\n            matrixPerYear[11].dayNumbersOfAhierMonth -= 1;\r\n            matrixPerYear[11].hasGuec = true;\r\n            matrixPerYear[11].typeOfGuec = guecTypeInNextYear;\r\n\r\n            // Bilan Bhang (13)\r\n            const newDate = Helper.addGregoryDays(matrixPerYear[12].dateOfGregoryCalendar, -1);\r\n            matrixPerYear[12].dateOfGregoryCalendar = newDate;\r\n            matrixPerYear[12].firstDayOfAhierMonth = newDate.getDay();\r\n        } else if (hasGuenRuleInNextYear) {\r\n            // Bilan (12) or (13)\r\n            if (Helper.getAhierAwalDaysGap(lastMonthOfCurrentYear.firstDayOfAhierMonth, lastMonthOfCurrentYear.firstDayOfAwalMonth) === 2) {\r\n                lastMonthOfCurrentYear.dayNumbersOfAhierMonth += 1;\r\n                lastMonthOfCurrentYear.hasGuen = true;\r\n                lastMonthOfCurrentYear.typeOfGuen = GuenTypeEnum.GuenByNormalRule;\r\n            }\r\n        }\r\n\r\n        return [...matrixPerYear];\r\n    }\r\n\r\n    static renderCalendarDetails(matrixPerYear: MatrixCalendarType[]) {\r\n        let fullCalendar: FullCalendarType[] = [];\r\n\r\n        for (let index = 0; index < matrixPerYear.length; index++) {\r\n            const element = matrixPerYear[index];\r\n            const firstDateOfAhierMonth: AhierDate = { date: 1, ahierMonth: element.ahierMonth };\r\n            const firstDateOfAwalMonth: AwalDate = { date: 1, awalMonth: element.awalMonth };\r\n            const firstDateOfGregoryMonth = element.dateOfGregoryCalendar;\r\n            const daysGap = Helper.getAhierAwalDaysGap(element.firstDayOfAhierMonth, element.firstDayOfAwalMonth);\r\n\r\n            for (let days = 0; days < element.dayNumbersOfAhierMonth; days++) {\r\n                const addedAhierDate = Helper.addAhierDays(matrixPerYear, firstDateOfAhierMonth, days);\r\n                const dateAhier: AhierDate = {\r\n                    date: addedAhierDate.date,\r\n                    ahierMonth: addedAhierDate.ahierMonth\r\n                }\r\n\r\n                const addedAwalDate = Helper.addAwalDays(firstDateOfAwalMonth, days - daysGap);\r\n                const dateAwal: AwalDate = {\r\n                    date: addedAwalDate.date,\r\n                    awalMonth: addedAwalDate.awalMonth\r\n                }\r\n\r\n                const dateGregory = Helper.addGregoryDays(firstDateOfGregoryMonth, days);\r\n\r\n                let monthDetailsCalendar: FullCalendarType = {\r\n                    dateAhier: dateAhier,\r\n                    dateAwal: dateAwal,\r\n                    dateGregory: dateGregory,\r\n                    typeOfGuen: days === element.dayNumbersOfAhierMonth - 1 ? element.typeOfGuen : undefined,\r\n                    typeOfGuec: days === element.dayNumbersOfAhierMonth - 1 ? element.typeOfGuec : undefined,\r\n                    hasGuen: days === element.dayNumbersOfAhierMonth - 1 ? element.hasGuen : undefined,\r\n                    hasGuec: days === element.dayNumbersOfAhierMonth - 1 ? element.hasGuec : undefined\r\n                }\r\n\r\n                fullCalendar.push(monthDetailsCalendar);\r\n            }\r\n        }\r\n\r\n        return fullCalendar;\r\n    }\r\n\r\n    static checkIsGuenToAddDay(firstDayOfAhierMonth: number, firstDayOfAwalMonth: number) {\r\n        const daysGap = Helper.getAhierAwalDaysGap(firstDayOfAhierMonth, firstDayOfAwalMonth);\r\n        return daysGap > 2;\r\n    }\r\n\r\n    static checkIsGuecToMinusDay(firstDayOfAhierMonth: number, firstDayOfAwalMonth: number) {\r\n        return firstDayOfAhierMonth === firstDayOfAwalMonth;\r\n    }\r\n\r\n    static checkHasGuecRuleInNextYear(currentYear: AhierYear, firstGregoryDateNextYear: Date) {\r\n        let result = GuecTypeEnum.NoGuec;\r\n\r\n        const nextAhierYear = Helper.addAhierYears(currentYear, 1);\r\n        const matrixNextYear = Helper.renderMatrixPerYear(nextAhierYear, firstGregoryDateNextYear);\r\n        const firstMonth = matrixNextYear[0];\r\n        const isKateRamawanConflict = matrixNextYear.some(x =>\r\n            x.ahierMonth.month === AhierMonthEnum.BilanTajuh &&\r\n            x.awalMonth.month === AwalMonthEnum.Ramadan &&\r\n            Helper.getAhierAwalDaysGap(x.firstDayOfAhierMonth, x.firstDayOfAwalMonth) === 1);\r\n        const hasNormalGuec = matrixNextYear.some(item => Helper.checkIsGuecToMinusDay(item.firstDayOfAhierMonth, item.firstDayOfAwalMonth));\r\n\r\n        if (hasNormalGuec) {\r\n            result = GuecTypeEnum.GuecByNormalRule;\r\n        } else if (nextAhierYear.ikasSarak === IkasSarakEnum.Liéh) {\r\n            if (firstMonth.firstDayOfAhierMonth === 4 && firstMonth.firstDayOfAwalMonth === 5) {\r\n                result = GuecTypeEnum.GuecByHareiButSukRule;\r\n            } else if (isKateRamawanConflict) {\r\n                result = GuecTypeEnum.GuecByKateRamawanRule;\r\n            }\r\n        } else if (firstMonth.firstDayOfAhierMonth === 5 && firstMonth.firstDayOfAwalMonth === 6) {\r\n            result = GuecTypeEnum.GuecByRijaNagarRule;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static checkHasGuenRuleInNextYear(currentYear: AhierYear, firstGregoryDateNextYear: Date) {\r\n        const nextAhierYear = Helper.addAhierYears(currentYear, 1);\r\n        const matrixNextYear = Helper.renderMatrixPerYear(nextAhierYear, firstGregoryDateNextYear);\r\n\r\n        return matrixNextYear.some(item => Helper.checkIsGuenToAddDay(item.firstDayOfAhierMonth, item.firstDayOfAwalMonth));\r\n    }\r\n\r\n    static getMod(n: number, m: number) {\r\n        const remain = n % m;\r\n        return Math.floor(remain >= 0 ? remain : remain + m);\r\n    };\r\n\r\n    static getAhierAwalDaysGap(firstDayOfAhierMonth: number, firstDayOfAwalMonth: number) {\r\n        let daysGap = 0;\r\n\r\n        if (firstDayOfAhierMonth < firstDayOfAwalMonth) {\r\n            daysGap = firstDayOfAwalMonth - firstDayOfAhierMonth;\r\n        } else if (firstDayOfAhierMonth > firstDayOfAwalMonth) {\r\n            daysGap = firstDayOfAwalMonth + (6 - firstDayOfAhierMonth) + 1; // Sunday is 0\r\n        }\r\n\r\n        return daysGap;\r\n    }\r\n\r\n    static convertToChamDigitUnicode(latinNumber: number) {\r\n        const ChamDigitArr = ['꩐', '꩑', '꩒', '꩓', '꩔', '꩕', '꩖', '꩗', '꩘', '꩙'];\r\n        const EnglishDigits = '0123456789';\r\n        const reg = new RegExp('[' + EnglishDigits + ']', 'g');\r\n\r\n        return latinNumber.toString().replace(reg, function (c) {\r\n            return ChamDigitArr[EnglishDigits.indexOf(c)]\r\n        });\r\n    }\r\n}","import { useEffect, useState } from \"react\";\r\nimport { Col, ProgressBar, Row } from \"react-bootstrap\";\r\nimport { EventType, VariantType } from \"../enums/enum\";\r\n\r\nexport interface CountDownBarProps {\r\n    eventType: EventType;\r\n    eventDate: Date;\r\n}\r\n\r\nexport const CountDownBar = (props: CountDownBarProps) => {\r\n    const [percent, setPercent] = useState(100);\r\n    const [days, setDays] = useState(0);\r\n    const [hours, setHours] = useState(0);\r\n    const [minutes, setMinutes] = useState(0);\r\n    const [seconds, setSeconds] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            init();\r\n        }, 1000);\r\n    });\r\n\r\n    function init() {\r\n        if (!props.eventDate) {\r\n            return;\r\n        }\r\n\r\n        const now = new Date().getTime();\r\n        const distance = props.eventDate.getTime() - now;\r\n        const timeOfYear = 365 * 24 * 60 * 60 * 1000;\r\n        const percent = distance / timeOfYear * 100;\r\n        setPercent(percent);\r\n\r\n        // Time calculations for days, hours, minutes and seconds\r\n        const days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n        const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n        const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n        const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n        setDays(days);\r\n        setHours(hours);\r\n        setMinutes(minutes);\r\n        setSeconds(seconds);\r\n    }\r\n\r\n    let dd = props.eventDate.getDate();\r\n    let mm = props.eventDate.getMonth() + 1;\r\n    const yyyy = props.eventDate.getFullYear();\r\n    const ddStr = dd < 10 ? '0' + dd : dd;\r\n    const mmStr = mm < 10 ? '0' + mm : mm;\r\n    const dateStr = ddStr + '/' + mmStr + '/' + yyyy;\r\n\r\n    let variantType: VariantType;\r\n    switch (props.eventType) {\r\n        case \"Rija Nagar\":\r\n            variantType = 'success';\r\n            break;\r\n        case \"Katé angaok bimong\":\r\n            variantType = 'info';\r\n            break;\r\n        case \"Tamâ ricaow Ramâwan\":\r\n            variantType = 'warning';\r\n            break;\r\n\r\n        default:\r\n            variantType = 'warning';\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n                <div style={{ marginBottom: \"0.1rem\" }}>\r\n                    <span style={{ fontWeight: \"bold\" }}>{`${props.eventType}:`}</span>\r\n                    <span>{` ${dateStr}`}</span>\r\n                    <span>{` - Còn: ${days} ngày ${(\"0\" + hours).slice(-2)}h${(\"0\" + minutes).slice(-2)}'${(\"0\" + seconds).slice(-2)}\"`}</span>\r\n                </div>\r\n                <ProgressBar style={{ height: \"0.5rem\", marginBottom: \"5px\" }} variant={variantType.toString()} now={percent} />\r\n            </Col>\r\n        </Row>\r\n    );\r\n}","import { Col, Row } from \"react-bootstrap\";\r\nimport { AwalMonthEnum, displayIkasSarakName } from \"../enums/enum\";\r\nimport { AhierDate, AhierMonth } from \"../model/AhierDate\";\r\nimport { AwalDate, AwalMonth } from \"../model/AwalDate\";\r\nimport Helper from \"../utility/helper\";\r\nimport { SakawiType } from \"./calendar\";\r\n\r\ninterface DayDetailsProps {\r\n    sakawiType: SakawiType;\r\n    dateGregory: Date;\r\n    dateAwal: AwalDate;\r\n    dateAhier: AhierDate;\r\n    currentAhierMonth?: AhierMonth;\r\n    currentAwalMonth?: AwalMonth;\r\n    currentGregoryMonth?: number;\r\n    dayNumbersOfCurrentAhierMonth: number;\r\n    dayNumbersOfCurrentAwalMonth: number;\r\n}\r\n\r\nexport const DayDetails = (props: DayDetailsProps) => {\r\n    let opacityValue = 1;\r\n    if (props.sakawiType === \"sakawiAhier\") {\r\n        if (props.dateAhier.ahierMonth !== props.currentAhierMonth) {\r\n            opacityValue = 0.3;\r\n        }\r\n    } else if (props.sakawiType === \"sakawiAwal\") {\r\n        if (props.dateAwal.awalMonth !== props.currentAwalMonth) {\r\n            opacityValue = 0.3;\r\n        }\r\n    } else if (props.sakawiType === \"sakawiGregory\") {\r\n        if (props.dateGregory.getMonth() !== props.currentGregoryMonth) {\r\n            opacityValue = 0.3;\r\n        }\r\n    } else {\r\n        //TODO: sakawiGregory\r\n        opacityValue = 1;\r\n    }\r\n\r\n    const tdStyle: React.CSSProperties = {\r\n        opacity: opacityValue,\r\n        backgroundColor: (props.dateGregory.toLocaleDateString() === new Date().toLocaleDateString()) ? '#FFEFBF' : ''\r\n    }\r\n\r\n    const GregoryDateStyle: React.CSSProperties = {\r\n        fontSize: props.sakawiType === \"sakawiGregory\" ? \"1.3rem\" : \"0.8rem\",\r\n        color: \"black\",\r\n        paddingTop: \"0.1rem\",\r\n        paddingBottom: \"0.1rem\",\r\n        textAlign: \"right\"\r\n    }\r\n\r\n    const ahierDateStyle: React.CSSProperties = {\r\n        fontSize: props.sakawiType === \"sakawiAhier\" ? \"1.5rem\" : \"1rem\",\r\n        color: \"#F15A25\",\r\n        paddingTop: \"2rem\",\r\n        paddingBottom: \"0.1rem\",\r\n        textAlign: \"right\"\r\n    }\r\n\r\n    const awalDateStyle: React.CSSProperties = {\r\n        flexDirection: \"row\",\r\n        fontSize: props.sakawiType === \"sakawiAwal\" ? \"1.5rem\" : \"1rem\",\r\n        color: \"#007A3D\",\r\n        paddingTop: \"2rem\",\r\n        paddingBottom: \"0.3rem\",\r\n        paddingRight: \"0.3rem\",\r\n        alignSelf: \"end\"\r\n    }\r\n\r\n    const eventStyle: React.CSSProperties = {\r\n        display: \"block\",\r\n        fontSize: \"0.8rem\",\r\n        color: \"white\",\r\n        backgroundColor: \"#3788d8\",\r\n        paddingLeft: \"0.3rem\",\r\n        textAlign: \"left\",\r\n        marginBottom: \"0.1rem\",\r\n    }\r\n\r\n    function displayGregoryDate(sakawiType: SakawiType, dateAhier: AhierDate, dateAwal: AwalDate, dateGregory: Date) {\r\n        const monthGregogy = dateGregory.getMonth() + 1;\r\n\r\n        if (dateGregory.getDate() === 1 ||\r\n            (sakawiType === \"sakawiAwal\" && dateAwal.date === 1) ||\r\n            (sakawiType === \"sakawiAhier\" && dateAhier.date === 1)) {\r\n            return dateGregory.getDate() + \".\" + monthGregogy + \".\" + dateGregory.getFullYear();\r\n        } else {\r\n            return dateGregory.getDate();\r\n        }\r\n    }\r\n\r\n    function displayAhierDate(dateAhier: AhierDate) {\r\n        const bingun = 'ꩃ';\r\n        const klem = 'ꩌ';\r\n\r\n        if (props.dayNumbersOfCurrentAhierMonth === 30) {\r\n            if (dateAhier.date <= 15) {\r\n                return Helper.convertToChamDigitUnicode(dateAhier.date) + bingun;\r\n            } else {\r\n                return Helper.convertToChamDigitUnicode(dateAhier.date - 15) + klem;\r\n            }\r\n        } else {\r\n            if (dateAhier.date <= 14) {\r\n                if (dateAhier.date <= 5) {\r\n                    return Helper.convertToChamDigitUnicode(dateAhier.date) + bingun;\r\n                } else {\r\n                    return Helper.convertToChamDigitUnicode(dateAhier.date + 1) + bingun;\r\n                }\r\n            } else {\r\n                return Helper.convertToChamDigitUnicode(dateAhier.date - 14) + klem;\r\n            }\r\n        }\r\n    };\r\n\r\n    function displayAwalDate(dateAwal: AwalDate) {\r\n        const monthAwal = dateAwal.awalMonth.month + 1;\r\n        const bingun = 'ꩃ';\r\n        const klem = 'ꩌ';\r\n\r\n        if (dateAwal.date === 1) {\r\n            return (\r\n                <>\r\n                    <label style={{ margin: 0 }} >{Helper.convertToChamDigitUnicode(dateAwal.date) + bingun + \".\" + Helper.convertToChamDigitUnicode(monthAwal) + \".\"}</label>\r\n                    <label style={{ margin: 0 }} className='ikasSarak-month-cell'>{displayIkasSarakName(dateAwal.awalMonth.year.ikasSarak)}</label>\r\n                </>\r\n            )\r\n        } else {\r\n            if (props.dayNumbersOfCurrentAwalMonth === 30) {\r\n                if (dateAwal.date <= 15) {\r\n                    return Helper.convertToChamDigitUnicode(dateAwal.date) + bingun;\r\n                } else {\r\n                    return Helper.convertToChamDigitUnicode(dateAwal.date - 15) + klem;\r\n                }\r\n            } else {\r\n                if (dateAwal.date <= 14) {\r\n                    return Helper.convertToChamDigitUnicode(dateAwal.date) + bingun;\r\n                } else {\r\n                    return Helper.convertToChamDigitUnicode(dateAwal.date - 14) + klem;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function getEvents() {\r\n        let result: string[] = [];\r\n\r\n        if (props.dateAhier.ahierMonth.month === 0 && props.dateAhier.date === 1) {\r\n            result.push('Akaok thun');\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month !== AwalMonthEnum.Ramadan) {\r\n            if (props.dateAhier.ahierMonth.month === 0 && props.dateGregory.getDay() === 4 && props.dateAhier.date < 7) {\r\n                result.push('Rija Nagar');\r\n            }\r\n        } else {\r\n            if (props.dateAhier.ahierMonth.month === 0 && props.dateGregory.getDay() === 4 && props.dateAhier.date > 14 && props.dateAhier.date < 21) {\r\n                result.push('Rija Nagar');\r\n            }\r\n        }\r\n\r\n        if (props.dateAhier.ahierMonth.month === 5 && props.dateAhier.date === 29) {\r\n            result.push('Katé palei Hamu Tanran');\r\n        }\r\n\r\n        if (props.dateAhier.ahierMonth.month === 6 && props.dateAhier.date === 1) {\r\n            result.push('Katé angaok bimong');\r\n        }\r\n\r\n        if (props.dayNumbersOfCurrentAhierMonth === 30) {\r\n            if (props.dateAhier.ahierMonth.month === 8 && props.dateAhier.date === 16) {\r\n                result.push('Ca-mbur');\r\n            }\r\n        } else {\r\n            if (props.dateAhier.ahierMonth.month === 8 && props.dateAhier.date === 15) {\r\n                result.push('Ca-mbur');\r\n            }\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month === 8 && props.dateAwal.date === 1) {\r\n            result.push('Tamâ ricaow Ramâwan');\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month === 8 && props.dateAwal.date === 16) {\r\n            result.push('Muk trun');\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month === 8 && props.dateAwal.date === 21) {\r\n            result.push('Ong trun');\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month === 9 && props.dateAwal.date === 2) {\r\n            result.push('Talaih aek Ramâwan');\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month === 11 && props.dateAwal.date === 1) {\r\n            result.push('Ikak Waha');\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month === 11 && props.dateAwal.date === 11) {\r\n            result.push('Talaih Waha');\r\n        }\r\n\r\n        if (props.dateAhier.ahierMonth.month === 3 && props.dateGregory.getDay() === 0 && props.dateAhier.date < 7) {\r\n            result.push('Yuer Yang');\r\n        }\r\n\r\n        // TODO: \r\n        // if (props.dateAhier.ahierMonth.month === 10 && props.dateGregory.getDay() === 2 && props.dateAhier.date <= 15) {\r\n        //     result.push('Peh ba-mbeng Yang');\r\n        // }\r\n\r\n        if ((props.dateAhier.ahierMonth.month === 2\r\n            || props.dateAhier.ahierMonth.month === 5\r\n            || props.dateAhier.ahierMonth.month === 7\r\n            || props.dateAhier.ahierMonth.month === 9\r\n            || props.dateAhier.ahierMonth.month === 10) && props.dateGregory.getDay() === 3) {\r\n\r\n            if (props.dayNumbersOfCurrentAhierMonth === 30) {\r\n                if (props.dateAhier.date > 15 && (props.dateAhier.date - 15) % 2 === 0) {\r\n                    result.push('♥️ Lakhah');\r\n                }\r\n            } else {\r\n                if (props.dateAhier.date > 14 && (props.dateAhier.date - 14) % 2 === 0) {\r\n                    result.push('♥️ Lakhah');\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    return (\r\n        <td style={tdStyle}>\r\n            <Row>\r\n                <Col md={6}></Col>\r\n                <Col style={GregoryDateStyle} md={6}>\r\n                    {displayGregoryDate(props.sakawiType, props.dateAhier, props.dateAwal, props.dateGregory)}\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={12} style={{ minHeight: \"10px\", maxHeight: \"25px\" }}>\r\n                    {getEvents().map((item, index) => { return <p key={index} style={eventStyle}>{item}</p> })}\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col style={awalDateStyle} md={6}>\r\n                    {/* {props.dateAwal.date}.{props.dateAwal.awalMonth.month + 1}-{IkasSarakEnum[props.dateAwal.awalMonth.year.ikasSarak]} */}\r\n                    {displayAwalDate(props.dateAwal)}\r\n                </Col>\r\n                <Col style={ahierDateStyle} md={6}>\r\n                    {/* {props.dateAhier.date}.{props.dateAhier.ahierMonth.month + 1}.{NasakEnum[props.dateAhier.ahierMonth.year.nasak]}.{IkasSarakEnum[props.dateAhier.ahierMonth.year.ikasSarak]} */}\r\n                    {displayAhierDate(props.dateAhier)}\r\n                </Col>\r\n            </Row>\r\n        </td>\r\n    );\r\n}","import { Button, ButtonGroup, ButtonToolbar, Col } from \"react-bootstrap\";\r\nimport { AhierMonthEnum, AwalMonthEnum, displayIkasSarakName, displayMonthName, displayNasakName, IkasSarakEnum, NasakEnum } from \"../enums/enum\";\r\nimport { AhierMonth } from \"../model/AhierDate\";\r\nimport { AwalMonth } from \"../model/AwalDate\";\r\nimport Helper from \"../utility/helper\";\r\nimport { SakawiType } from \"./calendar\";\r\n\r\ninterface MonthNavigationProps {\r\n    sakawiType: SakawiType;\r\n    currentAhierMonth?: AhierMonth;\r\n    currentAwalMonth?: AwalMonth;\r\n    currentGregoryMonth?: number;\r\n    onSelectSakawiType: (type: SakawiType) => void\r\n    onClickToday: () => void;\r\n    onClickPreviousMonth: () => void;\r\n    onClickNextMonth: () => void;\r\n}\r\n\r\nexport const MonthNavigation = (props: MonthNavigationProps) => {\r\n    // const [radioValue, setRadioValue] = useState('sakawiAhier');\r\n    // const radioButtons = [\r\n    //     { name: 'Lịch Chăm', value: 'sakawiAhier' },\r\n    //     { name: 'Lịch Awal', value: 'sakawiAwal' },\r\n    //     { name: 'Dương lịch', value: 'sakawiGregory' },\r\n    // ];\r\n\r\n    return (\r\n        <>\r\n            <Col md={4}>\r\n                <ButtonToolbar aria-label=\"Toolbar with button groups\" style={{ justifyContent: \"flex-start\" }}>\r\n                    {/* <ButtonGroup>\r\n                        {radioButtons.map((radio, idx) => (\r\n                            <ToggleButton\r\n                                key={idx}\r\n                                id={`radio-${idx}`}\r\n                                type=\"radio\"\r\n                                variant=\"secondary\"\r\n                                //variant={idx % 2 ? 'outline-success' : 'outline-danger'}\r\n                                name=\"radio\"\r\n                                value={radio.value}\r\n                                checked={radioValue === radio.value}\r\n                                onChange={(e) => {\r\n                                    props.onSelectSakawiType(e.currentTarget.value as SakawiType);\r\n                                    setRadioValue(e.currentTarget.value);\r\n                                }}\r\n                            >\r\n                                {radio.name}\r\n                            </ToggleButton>\r\n                        ))}\r\n                    </ButtonGroup> */}\r\n                    <ButtonGroup aria-label=\"Type of calendar\">\r\n                        <Button variant=\"secondary\" onClick={() => props.onSelectSakawiType('sakawiAhier')}>Lịch Chăm</Button>\r\n                        <Button variant=\"secondary\" onClick={() => props.onSelectSakawiType('sakawiAwal')}>Lịch Awal</Button>\r\n                        <Button variant=\"secondary\" onClick={() => props.onSelectSakawiType('sakawiGregory')}>Dương lịch</Button>\r\n                    </ButtonGroup>\r\n                </ButtonToolbar>\r\n            </Col>\r\n            <Col md={5} style={{ textAlign: \"center\" }}>\r\n                {props.sakawiType === 'sakawiAhier' && props.currentAhierMonth &&\r\n                    <>\r\n                        <div>\r\n                            <label className='bilan-title'>{displayMonthName(props.currentAhierMonth.month)}</label>\r\n                            {' - '}<label className='bilan-title'>{displayNasakName(props.currentAhierMonth.year.nasak)}</label>\r\n                            {' - '}<label className='ikasSarak-title'>{displayIkasSarakName(props.currentAhierMonth.year.ikasSarak)}</label>\r\n                            {' - '}<label className='bilan-title'>{Helper.convertToChamDigitUnicode(props.currentAhierMonth.year.yearNumber ?? 0)}</label>\r\n                        </div>\r\n                        <h5>\r\n                            {AhierMonthEnum[props.currentAhierMonth.month]} {`(${(props.currentAhierMonth.month + 1)})`}\r\n                            {' - '}{NasakEnum[props.currentAhierMonth.year.nasak]} {IkasSarakEnum[props.currentAhierMonth.year.ikasSarak]}\r\n                            {' - '}{props.currentAhierMonth.year.yearNumber}\r\n                        </h5>\r\n                    </>\r\n                }\r\n                {props.sakawiType === 'sakawiAwal' && props.currentAwalMonth &&\r\n                    <>\r\n                        <h2>\r\n                            {AwalMonthEnum[props.currentAwalMonth.month]} {`(${(props.currentAwalMonth.month + 1)})`}\r\n                            {' - '}{IkasSarakEnum[props.currentAwalMonth.year.ikasSarak]}\r\n                            {' - '}{props.currentAwalMonth.year.yearNumber}\r\n                        </h2>\r\n                    </>\r\n                }\r\n            </Col>\r\n            <Col md={3}>\r\n                <ButtonToolbar aria-label=\"Toolbar with button groups\" style={{ justifyContent: \"flex-end\" }}>\r\n                    <ButtonGroup aria-label=\"Third group\" style={{ marginRight: \".75em\" }}>\r\n                        <Button variant=\"secondary\" onClick={props.onClickToday}>Hôm nay</Button>\r\n                    </ButtonGroup>\r\n                    <ButtonGroup aria-label=\"Navigate months\">\r\n                        <Button variant=\"secondary\" className=\"fa fa-chevron-left\" onClick={props.onClickPreviousMonth} />\r\n                        <Button variant=\"secondary\" className=\"fa fa-chevron-right\" onClick={props.onClickNextMonth} />\r\n                    </ButtonGroup>\r\n                </ButtonToolbar>\r\n            </Col>\r\n        </>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { Col, Container, Row, Table } from \"react-bootstrap\";\r\nimport { AhierMonthEnum, IkasSarakEnum, NasakEnum } from \"../enums/enum\";\r\nimport { AhierDate, AhierMonth } from \"../model/AhierDate\";\r\nimport { AwalDate, AwalMonth } from \"../model/AwalDate\";\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport Helper from \"../utility/helper\";\r\nimport { SakawiType } from \"./calendar\";\r\nimport { DayDetails } from \"./dayDetails\";\r\nimport { MonthNavigation } from \"./monthNavigation\";\r\n\r\ninterface MonthAhierProps {\r\n    matrixSakawi: MatrixCalendarType[],\r\n    currentAhierMonthMatrix: MatrixCalendarType,\r\n    onSelectSakawiType: (type: SakawiType) => void\r\n}\r\n\r\nexport const MonthAhier = (props: MonthAhierProps) => {\r\n    const initialAhierMonth: AhierMonth = { month: AhierMonthEnum.BilanSa, year: { nasak: NasakEnum.Pabuei, ikasSarak: IkasSarakEnum.JimLuic, yearNumber: 2019 } };\r\n    const initialAwalMonth: AwalMonth = { month: 0, year: { ikasSarak: 0, yearNumber: 1400 } };\r\n    const initialAhierDate: AhierDate = { date: 1, ahierMonth: initialAhierMonth };\r\n    const initialAwalDate: AwalDate = { date: 1, awalMonth: initialAwalMonth };\r\n    const initialGregoryDate: Date = new Date();\r\n\r\n    const [currentAhierMonthMatrix, setCurrentAhierMonthMatrix] = useState(props.currentAhierMonthMatrix);\r\n\r\n    const [firstDateOfAhierMonth, setFirstDateOfAhierMonth] = useState<AhierDate>(initialAhierDate);\r\n    const [firstDayOfAhierMonth, setFirstDayOfAhierMonth] = useState(0);\r\n\r\n    const [firstDateOfAwalMonth, setFirstDateOfAwalMonth] = useState<AwalDate>(initialAwalDate);\r\n    const [firstDayOfAwalMonth, setFirstDayOfAwalMonth] = useState(0);\r\n\r\n    const [firstDateOfGregoryMonth, setFirstDateOfGregoryMonth] = useState<Date>(initialGregoryDate);\r\n    const [firstDayOfGregoryMonth, setFirstDayOfGregoryMonth] = useState(0);\r\n\r\n    React.useEffect(() => {\r\n        function init() {\r\n            // Ahier Date\r\n            const firstAhierDate: AhierDate = { date: 1, ahierMonth: currentAhierMonthMatrix.ahierMonth };\r\n            setFirstDateOfAhierMonth(firstAhierDate);\r\n            setFirstDayOfAhierMonth(currentAhierMonthMatrix.firstDayOfAhierMonth);\r\n\r\n            // Awal Date\r\n            const firstAwalDate: AwalDate = { date: 1, awalMonth: currentAhierMonthMatrix.awalMonth };\r\n            setFirstDateOfAwalMonth(firstAwalDate);\r\n            setFirstDayOfAwalMonth(currentAhierMonthMatrix.firstDayOfAwalMonth);\r\n\r\n            // Gregory Date\r\n            setFirstDateOfGregoryMonth(currentAhierMonthMatrix.dateOfGregoryCalendar);\r\n            setFirstDayOfGregoryMonth(currentAhierMonthMatrix.dateOfGregoryCalendar.getDay());\r\n        }\r\n\r\n        init();\r\n    }, [currentAhierMonthMatrix, props.currentAhierMonthMatrix]);\r\n\r\n    function handleGoToToday() {\r\n        setCurrentAhierMonthMatrix(props.currentAhierMonthMatrix);\r\n    }\r\n\r\n    function handleGoToPreviousMonth() {\r\n        const index = props.matrixSakawi.findIndex(x => x === currentAhierMonthMatrix);\r\n        setCurrentAhierMonthMatrix(props.matrixSakawi[index - 1]);\r\n    }\r\n\r\n    function handleGoToNextMonth() {\r\n        const index = props.matrixSakawi.findIndex(x => x === currentAhierMonthMatrix);\r\n        setCurrentAhierMonthMatrix(props.matrixSakawi[index + 1]);\r\n    }\r\n\r\n    // draw Calendar Table\r\n    let count = 0;\r\n    let rows = [];\r\n\r\n    for (let weeks = 0; weeks < 6; weeks++) {\r\n        let cells = []\r\n        for (let days = 0; days < 7; days++) {\r\n            let week = 0;\r\n            if (firstDayOfAwalMonth < firstDayOfAhierMonth) {\r\n                week = 7;\r\n            }\r\n\r\n            const cellAhierDate = Helper.addAhierDays(props.matrixSakawi, firstDateOfAhierMonth, count - firstDayOfAhierMonth);\r\n            const dateAhier: AhierDate = {\r\n                date: cellAhierDate.date,\r\n                ahierMonth: cellAhierDate.ahierMonth\r\n            }\r\n\r\n            const cellAwalDate = Helper.addAwalDays(firstDateOfAwalMonth, count - firstDayOfAwalMonth - week);\r\n            const dateAwal: AwalDate = {\r\n                date: cellAwalDate.date,\r\n                awalMonth: cellAwalDate.awalMonth\r\n            }\r\n\r\n            const GregoryDate = Helper.addGregoryDays(firstDateOfGregoryMonth, count - firstDayOfGregoryMonth);\r\n            const dayNumbersOfCurrentAhierMonth = Helper.getActualDayNumbersOfAhierMonth(props.matrixSakawi, cellAhierDate.ahierMonth);\r\n            const dayNumbersOfCurrentAwalMonth = Helper.getDayNumbersOfAwalMonth(dateAwal.awalMonth.year, dateAwal.awalMonth.month);\r\n\r\n            cells.push(\r\n                <DayDetails\r\n                    sakawiType=\"sakawiAhier\"\r\n                    key={`sakawiAhier-cell-${weeks}-${days}`}\r\n                    dateAhier={dateAhier}\r\n                    dateAwal={dateAwal}\r\n                    dateGregory={GregoryDate}\r\n                    currentAhierMonth={currentAhierMonthMatrix.ahierMonth}\r\n                    dayNumbersOfCurrentAhierMonth={dayNumbersOfCurrentAhierMonth}\r\n                    dayNumbersOfCurrentAwalMonth={dayNumbersOfCurrentAwalMonth}\r\n                />\r\n            );\r\n            count++;\r\n        }\r\n\r\n        rows.push(<tr key={`sakawiAhier-row-${weeks}`}>{cells}</tr>)\r\n    }\r\n\r\n    const dayNames = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n    const tableStyle: React.CSSProperties = {\r\n        height: \"400px\",\r\n        tableLayout: \"fixed\"\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <MonthNavigation\r\n                    sakawiType=\"sakawiAhier\"\r\n                    currentAhierMonth={currentAhierMonthMatrix.ahierMonth}\r\n                    onClickToday={handleGoToToday}\r\n                    onClickPreviousMonth={handleGoToPreviousMonth}\r\n                    onClickNextMonth={handleGoToNextMonth}\r\n                    onSelectSakawiType={type => props.onSelectSakawiType(type)}\r\n                />\r\n            </Row>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Table bordered hover style={tableStyle}>\r\n                        <thead>\r\n                            <tr>\r\n                                {dayNames.map((d, index) =>\r\n                                    <th style={{ padding: \"2px\", textAlign: \"center\" }} key={index}>{d}</th>\r\n                                )}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {rows}\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Col, Container, Row, Table } from \"react-bootstrap\";\r\nimport { AhierMonthEnum, IkasSarakEnum, NasakEnum } from \"../enums/enum\";\r\nimport { AhierDate, AhierMonth } from \"../model/AhierDate\";\r\nimport { AwalDate, AwalMonth } from \"../model/AwalDate\";\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport Helper from '../utility/helper';\r\nimport { SakawiType } from \"./calendar\";\r\nimport { DayDetails } from \"./dayDetails\";\r\nimport { MonthNavigation } from \"./monthNavigation\";\r\n\r\ninterface MonthAwalProps {\r\n    matrixSakawi: MatrixCalendarType[],\r\n    currentAwalMonthMatrix: MatrixCalendarType,\r\n    onSelectSakawiType: (type: SakawiType) => void\r\n}\r\n\r\nexport const MonthAwal = (props: MonthAwalProps) => {\r\n    const initialAhierMonth: AhierMonth = { month: AhierMonthEnum.BilanSa, year: { nasak: NasakEnum.Pabuei, ikasSarak: IkasSarakEnum.JimLuic, yearNumber: 2019 } };\r\n    const initialAwalMonth: AwalMonth = { month: 0, year: { ikasSarak: 0, yearNumber: 1400 } };\r\n    const initialAhierDate: AhierDate = { date: 1, ahierMonth: initialAhierMonth };\r\n    const initialAwalDate: AwalDate = { date: 1, awalMonth: initialAwalMonth };\r\n    const initialGregoryDate: Date = new Date();\r\n\r\n    const [currentAwalMonthMatrix, setCurrentAwalMonthMatrix] = useState(props.currentAwalMonthMatrix);\r\n\r\n    const [firstDateOfAhierMonth, setFirstDateOfAhierMonth] = useState<AhierDate>(initialAhierDate);\r\n    const [firstDayOfAhierMonth, setFirstDayOfAhierMonth] = useState(0);\r\n\r\n    const [firstDateOfAwalMonth, setFirstDateOfAwalMonth] = useState<AwalDate>(initialAwalDate);\r\n    const [firstDayOfAwalMonth, setFirstDayOfAwalMonth] = useState(0);\r\n\r\n    const [firstDateOfGregoryMonth, setFirstDateOfGregoryMonth] = useState<Date>(initialGregoryDate);\r\n    const [firstDayOfGregoryMonth, setFirstDayOfGregoryMonth] = useState(0);\r\n\r\n    React.useEffect(() => {\r\n        function init() {\r\n            //console.log('props.currentAwalMonthMatrix', JSON.stringify(props.currentAwalMonthMatrix));\r\n\r\n            // Ahier Date\r\n            const firstAhierDate: AhierDate = { date: 1, ahierMonth: currentAwalMonthMatrix.ahierMonth };\r\n            setFirstDateOfAhierMonth(firstAhierDate);\r\n            setFirstDayOfAhierMonth(currentAwalMonthMatrix.firstDayOfAhierMonth);\r\n\r\n            // Awal Date\r\n            const firstAwalDate: AwalDate = { date: 1, awalMonth: currentAwalMonthMatrix.awalMonth };\r\n            setFirstDateOfAwalMonth(firstAwalDate);\r\n            setFirstDayOfAwalMonth(currentAwalMonthMatrix.firstDayOfAwalMonth);\r\n\r\n            // Gregory Date\r\n            setFirstDateOfGregoryMonth(currentAwalMonthMatrix.dateOfGregoryCalendar);\r\n            setFirstDayOfGregoryMonth(currentAwalMonthMatrix.dateOfGregoryCalendar.getDay());\r\n        }\r\n\r\n        init();\r\n    }, [currentAwalMonthMatrix, props.currentAwalMonthMatrix]);\r\n\r\n\r\n    function handleGoToToday() {\r\n        setCurrentAwalMonthMatrix(props.currentAwalMonthMatrix);\r\n    }\r\n\r\n    function handleGoToPreviousMonth() {\r\n        const index = props.matrixSakawi.findIndex(x => x === currentAwalMonthMatrix);\r\n        setCurrentAwalMonthMatrix(props.matrixSakawi[index - 1]);\r\n    }\r\n\r\n    function handleGoToNextMonth() {\r\n        const index = props.matrixSakawi.findIndex(x => x === currentAwalMonthMatrix);\r\n        setCurrentAwalMonthMatrix(props.matrixSakawi[index + 1]);\r\n    }\r\n\r\n    // draw Calendar Table\r\n    let count = 0;\r\n    let rows = [];\r\n\r\n    for (let weeks = 0; weeks < 6; weeks++) {\r\n        let cells = []\r\n        for (let days = 0; days < 7; days++) {\r\n            let week = 0;\r\n            if (firstDayOfAwalMonth < firstDayOfAhierMonth) {\r\n                week = 7;\r\n            }\r\n\r\n            const cellAwalDate = Helper.addAwalDays(firstDateOfAwalMonth, count - firstDayOfAwalMonth);\r\n            const dateAwal: AwalDate = {\r\n                date: cellAwalDate.date,\r\n                awalMonth: cellAwalDate.awalMonth\r\n            }\r\n\r\n            const cellAhierDate = Helper.addAhierDays(props.matrixSakawi, firstDateOfAhierMonth, count - firstDayOfAhierMonth + week);\r\n            const dateAhier: AhierDate = {\r\n                date: cellAhierDate.date,\r\n                ahierMonth: cellAhierDate.ahierMonth\r\n            }\r\n\r\n            const GregoryDate = Helper.addGregoryDays(firstDateOfGregoryMonth, count - firstDayOfGregoryMonth + week);\r\n            const dayNumbersOfCurrentAhierMonth = Helper.getActualDayNumbersOfAhierMonth(props.matrixSakawi, cellAhierDate.ahierMonth);\r\n            const dayNumbersOfCurrentAwalMonth = Helper.getDayNumbersOfAwalMonth(dateAwal.awalMonth.year, dateAwal.awalMonth.month);\r\n\r\n            cells.push(\r\n                <DayDetails\r\n                    sakawiType=\"sakawiAwal\"\r\n                    key={`sakawiAwal-cell-${weeks}-${days}`}\r\n                    dateAhier={dateAhier}\r\n                    dateAwal={dateAwal}\r\n                    dateGregory={GregoryDate}\r\n                    currentAhierMonth={currentAwalMonthMatrix.ahierMonth}\r\n                    currentAwalMonth={currentAwalMonthMatrix.awalMonth}\r\n                    dayNumbersOfCurrentAhierMonth={dayNumbersOfCurrentAhierMonth}\r\n                    dayNumbersOfCurrentAwalMonth={dayNumbersOfCurrentAwalMonth}\r\n                />\r\n            );\r\n            count++;\r\n        }\r\n\r\n        rows.push(<tr key={`sakawiAwal-row-${weeks}`}>{cells}</tr>)\r\n    }\r\n\r\n    const dayNames = [\"Adit\", \"Thom\", \"Angar\", \"But\", \"Jip\", \"Suk\", \"Sanacar\"];\r\n    const tableStyle: React.CSSProperties = {\r\n        height: \"400px\",\r\n        tableLayout: \"fixed\"\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <MonthNavigation\r\n                    sakawiType=\"sakawiAwal\"\r\n                    currentAwalMonth={currentAwalMonthMatrix.awalMonth}\r\n                    onClickToday={handleGoToToday}\r\n                    onClickPreviousMonth={handleGoToPreviousMonth}\r\n                    onClickNextMonth={handleGoToNextMonth}\r\n                    onSelectSakawiType={type => props.onSelectSakawiType(type)}\r\n                />\r\n            </Row>\r\n            {/* <Row>\r\n                <Col md={4}>\r\n                    <ButtonToolbar aria-label=\"Toolbar with button groups\" style={{ justifyContent: \"flex-start\" }}>\r\n                        <ButtonGroup aria-label=\"Type of calendar\">\r\n                            <Button variant=\"secondary\" onClick={() => props.onSelectSakawiType('sakawiAhier')}>Lịch Chăm</Button>\r\n                            <Button variant=\"secondary\">Lịch Awal</Button>\r\n                            <Button variant=\"secondary\" onClick={() => props.onSelectSakawiType('sakawiGregory')}>Dương lịch</Button>\r\n                        </ButtonGroup>\r\n                    </ButtonToolbar>\r\n                </Col>\r\n                <Col md={5} style={{ textAlign: \"center\" }}>\r\n                    <h2>{AwalMonthEnum[currentAwalMonth.month]} {`(${(currentAwalMonth.month + 1)})`} - {IkasSarakEnum[currentAwalMonth.year.ikasSarak]} - {currentAwalMonth.year.yearNumber}</h2>\r\n                </Col>\r\n                <Col md={3} style={{ textAlign: \"left\" }}>\r\n                    <ButtonToolbar aria-label=\"Toolbar with button groups\" style={{ justifyContent: \"flex-end\" }}>\r\n                        <ButtonGroup aria-label=\"Third group\" style={{ marginRight: \".75em\" }}>\r\n                            <Button variant=\"secondary\" onClick={handleGoToToday}>Hôm nay</Button>\r\n                        </ButtonGroup>\r\n                        <ButtonGroup aria-label=\"Basic example\">\r\n                            <Button variant=\"secondary\" className=\"fa fa-chevron-left\" onClick={handleGoToPreviousMonth} />\r\n                            <Button variant=\"secondary\" className=\"fa fa-chevron-right\" onClick={handleGoToNextMonth} />\r\n                        </ButtonGroup>\r\n                    </ButtonToolbar>\r\n                </Col>\r\n            </Row> */}\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Table bordered hover style={tableStyle}>\r\n                        <thead>\r\n                            <tr>\r\n                                {dayNames.map((d, index) =>\r\n                                    <th style={{ padding: \"2px\", textAlign: \"center\" }} key={index}>{d}</th>\r\n                                )}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {rows}\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Col, Container, Row, Table } from \"react-bootstrap\";\r\nimport { AhierMonthEnum, IkasSarakEnum, NasakEnum } from \"../enums/enum\";\r\nimport { AhierDate, AhierMonth } from \"../model/AhierDate\";\r\nimport { AwalDate, AwalMonth } from \"../model/AwalDate\";\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport Helper from '../utility/helper';\r\nimport { SakawiType } from \"./calendar\";\r\nimport { DayDetails } from \"./dayDetails\";\r\nimport { MonthNavigation } from \"./monthNavigation\";\r\n\r\ninterface MonthGregoryProps {\r\n    matrixSakawi: MatrixCalendarType[],\r\n    currentGregoryMonthMatrix: MatrixCalendarType,\r\n    onSelectSakawiType: (type: SakawiType) => void\r\n}\r\n\r\nexport const MonthGregory = (props: MonthGregoryProps) => {\r\n    const initialAhierMonth: AhierMonth = { month: AhierMonthEnum.BilanSa, year: { nasak: NasakEnum.Pabuei, ikasSarak: IkasSarakEnum.JimLuic, yearNumber: 2019 } };\r\n    const initialAwalMonth: AwalMonth = { month: 0, year: { ikasSarak: 0, yearNumber: 1400 } };\r\n    const initialAhierDate: AhierDate = { date: 1, ahierMonth: initialAhierMonth };\r\n    const initialAwalDate: AwalDate = { date: 1, awalMonth: initialAwalMonth };\r\n    const initialGregoryDate: Date = new Date();\r\n\r\n    const [currentGregoryMonthMatrix, setCurrentGregoryMonthMatrix] = useState(props.currentGregoryMonthMatrix);\r\n\r\n    const [firstDateOfAhierMonth, setFirstDateOfAhierMonth] = useState<AhierDate>(initialAhierDate);\r\n    const [firstDayOfAhierMonth, setFirstDayOfAhierMonth] = useState(0);\r\n\r\n    const [firstDateOfAwalMonth, setFirstDateOfAwalMonth] = useState<AwalDate>(initialAwalDate);\r\n    const [firstDayOfAwalMonth, setFirstDayOfAwalMonth] = useState(0);\r\n\r\n    const [firstDateOfGregoryMonth, setFirstDateOfGregoryMonth] = useState<Date>(initialGregoryDate);\r\n    const [firstDayOfGregoryMonth, setFirstDayOfGregoryMonth] = useState(0);\r\n\r\n    React.useEffect(() => {\r\n        function init() {\r\n            // Gregory Date\r\n            const firstGregoryDate = new Date(currentGregoryMonthMatrix.dateOfGregoryCalendar.getFullYear(), currentGregoryMonthMatrix.dateOfGregoryCalendar.getMonth(), 1);\r\n            setFirstDateOfGregoryMonth(firstGregoryDate);\r\n            setFirstDayOfGregoryMonth(firstGregoryDate.getDay());\r\n\r\n            // Ahier Date\r\n            const firstAhierDate: AhierDate = { date: 1, ahierMonth: currentGregoryMonthMatrix.ahierMonth };\r\n            setFirstDateOfAhierMonth(firstAhierDate);\r\n            setFirstDayOfAhierMonth(currentGregoryMonthMatrix.firstDayOfAhierMonth);\r\n\r\n            // Awal Date\r\n            const firstAwalDate: AwalDate = { date: 1, awalMonth: currentGregoryMonthMatrix.awalMonth };\r\n            setFirstDateOfAwalMonth(firstAwalDate);\r\n            setFirstDayOfAwalMonth(currentGregoryMonthMatrix.firstDayOfAwalMonth);\r\n        }\r\n\r\n        init();\r\n    }, [currentGregoryMonthMatrix, props.currentGregoryMonthMatrix]);\r\n\r\n    function handleGoToToday() {\r\n        setCurrentGregoryMonthMatrix(props.currentGregoryMonthMatrix);\r\n    }\r\n\r\n    function handleGoToPreviousMonth() {\r\n        const index = props.matrixSakawi.findIndex(x => x === currentGregoryMonthMatrix);\r\n        setCurrentGregoryMonthMatrix(props.matrixSakawi[index - 1]);\r\n    }\r\n\r\n    function handleGoToNextMonth() {\r\n        const index = props.matrixSakawi.findIndex(x => x === currentGregoryMonthMatrix);\r\n        setCurrentGregoryMonthMatrix(props.matrixSakawi[index + 1]);\r\n    }\r\n\r\n    // draw Calendar Table\r\n    let count = 0;\r\n    let rows = [];\r\n\r\n    for (let weeks = 0; weeks < 6; weeks++) {\r\n        let cells = []\r\n        for (let days = 0; days < 7; days++) {\r\n            let week = 0;\r\n            if (firstDayOfAwalMonth < firstDayOfAhierMonth) {\r\n                week = 7;\r\n            }\r\n\r\n            const cellAwalDate = Helper.addAwalDays(firstDateOfAwalMonth, (count - firstDayOfAwalMonth));\r\n            const dateAwal: AwalDate = {\r\n                date: cellAwalDate.date,\r\n                awalMonth: cellAwalDate.awalMonth\r\n            }\r\n\r\n            const cellAhierDate = Helper.addAhierDays(props.matrixSakawi, firstDateOfAhierMonth, count - firstDayOfAhierMonth + week);\r\n            const dateAhier: AhierDate = {\r\n                date: cellAhierDate.date,\r\n                ahierMonth: cellAhierDate.ahierMonth\r\n            }\r\n\r\n            const GregoryDate = Helper.addGregoryDays(firstDateOfGregoryMonth, count - firstDayOfGregoryMonth);\r\n            const dayNumbersOfCurrentAhierMonth = Helper.getActualDayNumbersOfAhierMonth(props.matrixSakawi, cellAhierDate.ahierMonth);\r\n            const dayNumbersOfCurrentAwalMonth = Helper.getDayNumbersOfAwalMonth(dateAwal.awalMonth.year, dateAwal.awalMonth.month);\r\n\r\n            cells.push(\r\n                <DayDetails\r\n                    sakawiType=\"sakawiGregory\"\r\n                    key={`sakawiGregory-cell-${weeks}-${days}`}\r\n                    dateAhier={dateAhier}\r\n                    dateAwal={dateAwal}\r\n                    dateGregory={GregoryDate}\r\n                    currentAhierMonth={currentGregoryMonthMatrix.ahierMonth}\r\n                    currentAwalMonth={currentGregoryMonthMatrix.awalMonth}\r\n                    currentGregoryMonth={currentGregoryMonthMatrix.dateOfGregoryCalendar.getMonth()}\r\n                    dayNumbersOfCurrentAhierMonth={dayNumbersOfCurrentAhierMonth}\r\n                    dayNumbersOfCurrentAwalMonth={dayNumbersOfCurrentAwalMonth}\r\n                />\r\n            );\r\n            count++;\r\n        }\r\n\r\n        rows.push(<tr key={`sakawiGregory-row-${weeks}`}>{cells}</tr>)\r\n    }\r\n\r\n    const dayNames = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    const tableStyle: React.CSSProperties = {\r\n        height: \"400px\",\r\n        tableLayout: \"fixed\"\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <MonthNavigation\r\n                    sakawiType=\"sakawiGregory\"\r\n                    onClickToday={handleGoToToday}\r\n                    onClickPreviousMonth={handleGoToPreviousMonth}\r\n                    onClickNextMonth={handleGoToNextMonth}\r\n                    onSelectSakawiType={type => props.onSelectSakawiType(type)}\r\n                />\r\n            </Row>\r\n            {/* <Row>\r\n                <Col md={4}>\r\n                    <ButtonToolbar aria-label=\"Toolbar with button groups\">\r\n                        <ButtonGroup aria-label=\"Type of calendar\">\r\n                            <Button variant=\"secondary\" onClick={() => props.onSelectSakawiType('sakawiAhier')}>Lịch Chăm</Button>\r\n                            <Button variant=\"secondary\" onClick={() => props.onSelectSakawiType('sakawiAwal')}>Lịch Awal</Button>\r\n                            <Button variant=\"secondary\">Dương lịch</Button>\r\n                        </ButtonGroup>\r\n                    </ButtonToolbar>\r\n                </Col>\r\n                <Col md={5} style={{ textAlign: \"center\" }}>\r\n                    <h2>{currentGregoryMonthMatrix.dateOfGregoryCalendar.getMonth} {currentGregoryMonthMatrix.dateOfGregoryCalendar.setFullYear}</h2>\r\n                </Col>\r\n                <Col md={3} style={{ textAlign: \"left\" }}>\r\n                    <ButtonToolbar aria-label=\"Toolbar with button groups\" style={{ justifyContent: \"flex-end\" }}>\r\n                        <ButtonGroup aria-label=\"Third group\" style={{ marginRight: \".75em\" }}>\r\n                            <Button variant=\"secondary\" onClick={handleGoToToday}>Hôm nay</Button>\r\n                        </ButtonGroup>\r\n                        <ButtonGroup aria-label=\"Basic example\">\r\n                            <Button variant=\"secondary\" className=\"fa fa-chevron-left\" onClick={handleGoToPreviousMonth} />\r\n                            <Button variant=\"secondary\" className=\"fa fa-chevron-right\" onClick={handleGoToNextMonth} />\r\n                        </ButtonGroup>\r\n                    </ButtonToolbar>\r\n                </Col>\r\n            </Row> */}\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Table bordered hover style={tableStyle}>\r\n                        <thead>\r\n                            <tr>\r\n                                {dayNames.map((d, index) =>\r\n                                    <th style={{ padding: \"2px\", textAlign: \"center\" }} key={index}>{d}</th>\r\n                                )}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {rows}\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Alert, Col, Row } from \"react-bootstrap\";\r\nimport { AhierMonthEnum, GuecTypeEnum, GuenTypeEnum, IkasSarakEnum, NasakEnum } from \"../enums/enum\";\r\nimport { AhierMonth } from \"../model/AhierDate\";\r\nimport { AwalMonth } from \"../model/AwalDate\";\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport Helper from \"../utility/helper\";\r\nimport { CountDownBar } from \"./countDownBar\";\r\nimport { MonthAhier } from \"./monthAhier\";\r\nimport { MonthAwal } from \"./monthAwal\";\r\nimport { MonthGregory } from \"./monthGregory\";\r\n\r\nexport declare type SakawiType = 'sakawiAwal' | 'sakawiAhier' | 'sakawiGregory';\r\n\r\nexport const Calendar = () => {\r\n    const initialAhierMonth: AhierMonth = { month: AhierMonthEnum.BilanSa, year: { nasak: NasakEnum.Pabuei, ikasSarak: IkasSarakEnum.JimLuic, yearNumber: 2019 } };\r\n    const initialAwalMonth: AwalMonth = { month: 0, year: { ikasSarak: 0, yearNumber: 1400 } };\r\n    const initialGregoryDate: Date = new Date();\r\n\r\n    const initialMatrixCalendarType: MatrixCalendarType = {\r\n        ahierMonth: initialAhierMonth,\r\n        dayNumbersOfAhierMonth: 0,\r\n        firstDayOfAhierMonth: 0,\r\n        hasGuen: false,\r\n        typeOfGuen: GuenTypeEnum.NoGuen,\r\n        hasGuec: false,\r\n        typeOfGuec: GuecTypeEnum.NoGuec,\r\n        dateOfGregoryCalendar: initialGregoryDate,\r\n        awalMonth: initialAwalMonth,\r\n        dayNumbersOfAwalMonth: 0,\r\n        firstDayOfAwalMonth: 0\r\n    }\r\n\r\n    const [showWarning, setShowWarning] = useState(true);\r\n    const [matrixSakawi, setMatrixSakawi] = useState<MatrixCalendarType[]>([]);\r\n    const [currentAhierMonth, setCurrentAhierMonth] = useState<MatrixCalendarType>(initialMatrixCalendarType);\r\n    const [currentAwalMonth, setCurrentAwalMonth] = useState<MatrixCalendarType>(initialMatrixCalendarType);\r\n    const [currentGregoryMonth, setCurrentGregoryMonth] = useState<MatrixCalendarType>(initialMatrixCalendarType);\r\n    // const [year] = useState(new Date().getFullYear());\r\n    // const [month] = useState(new Date().getMonth());\r\n    const [sakawiType, setSakawiType] = useState<SakawiType>('sakawiAhier');\r\n\r\n    React.useEffect(() => {\r\n        function init() {\r\n            // Build matrix Calendar\r\n            //let matrix = Helper.buildMatrixCalendar(2046);\r\n            let matrix = Helper.buildMatrixCalendar(2023);\r\n            setMatrixSakawi(matrix.matrixCalendar);\r\n            //console.log('matrixCalendar', JSON.stringify(matrix.matrixCalendar));\r\n            console.log('fullCalendar', JSON.stringify(matrix.fullCalendar));\r\n\r\n            // Set current matrix item \r\n            const currentAhierMonth = matrix.matrixCalendar.filter(m =>\r\n                Helper.addGregoryDays(m.dateOfGregoryCalendar, m.dayNumbersOfAhierMonth) > new Date())[0];\r\n            if (currentAhierMonth) {\r\n                setCurrentAhierMonth(currentAhierMonth);\r\n            }\r\n\r\n            const currentAwalMonth = matrix.matrixCalendar.filter(m =>\r\n                Helper.addGregoryDays(m.dateOfGregoryCalendar, m.dayNumbersOfAwalMonth) > new Date())[0];\r\n            if (currentAwalMonth) {\r\n                setCurrentAwalMonth(currentAwalMonth);\r\n            }\r\n\r\n            const currentGregoryMonth = matrix.matrixCalendar.filter(m =>\r\n                Helper.addGregoryDays(m.dateOfGregoryCalendar, m.dayNumbersOfAwalMonth) > new Date())[0];//TODO\r\n            if (currentGregoryMonth) {\r\n                setCurrentGregoryMonth(currentGregoryMonth);\r\n            }\r\n        }\r\n\r\n        init();\r\n    }, [sakawiType]);\r\n\r\n    function onSelectSakawiType(type: SakawiType) {\r\n        setSakawiType(type);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {showWarning &&\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <Alert variant='info' onClose={() => setShowWarning(false)} dismissible>\r\n                            <Alert.Heading>Lưu ý!</Alert.Heading>\r\n                            - Ứng dụng đang trong quá trình phát triển, rất mong nhận được góp ý từ người dùng để sản phẩm được hoàn thiện hơn.\r\n                            <br />- Sakawi năm hiện tại được tính theo Sakawi của Hội đồng Chức sắc phát hành.\r\n                            Sakawi các năm tiếp theo chỉ mang tính chất tham khảo.\r\n                        </Alert>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            <Row>\r\n                <Col md={12}>\r\n                    <CountDownBar eventType=\"Rija Nagar\" eventDate={new Date(2022, 4, 5)} />\r\n                    <CountDownBar eventType=\"Katé angaok bimong\" eventDate={new Date(2022, 9, 24)} />\r\n                    <CountDownBar eventType=\"Tamâ ricaow Ramâwan\" eventDate={new Date(2022, 3, 2)} />\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n            {\r\n                matrixSakawi.length > 0 &&\r\n                <Row>\r\n                    {sakawiType === 'sakawiGregory' &&\r\n                        <MonthGregory\r\n                            matrixSakawi={matrixSakawi}\r\n                            currentGregoryMonthMatrix={currentGregoryMonth}\r\n                            onSelectSakawiType={onSelectSakawiType}\r\n                        />\r\n                    }\r\n                    {sakawiType === 'sakawiAwal' &&\r\n                        <MonthAwal\r\n                            matrixSakawi={matrixSakawi}\r\n                            currentAwalMonthMatrix={currentAwalMonth}\r\n                            onSelectSakawiType={onSelectSakawiType}\r\n                        />\r\n                    }\r\n                    {sakawiType === 'sakawiAhier' &&\r\n                        <MonthAhier\r\n                            matrixSakawi={matrixSakawi}\r\n                            currentAhierMonthMatrix={currentAhierMonth}\r\n                            onSelectSakawiType={onSelectSakawiType}\r\n                        />\r\n                    }\r\n                </Row>\r\n            }\r\n        </>\r\n    );\r\n}","import { Card, Col, Container, ListGroup, Nav, Navbar, Row } from \"react-bootstrap\";\r\n\r\ninterface LayoutProps {\r\n    children: JSX.Element;\r\n}\r\n\r\nconst footerStyle: React.CSSProperties = {\r\n    background: \"#20232a\",\r\n    color: \"white\",\r\n    padding: \"15px\",\r\n    textAlign: \"center\",\r\n    justifyContent: \"center\"\r\n}\r\n\r\nexport const Layout = (props: LayoutProps) => {\r\n    return (\r\n        <Container fluid>\r\n            {/* Header */}\r\n            <Row>\r\n                <Col style={{ paddingRight: 0, paddingLeft: 0 }}>\r\n                    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n                        <Navbar.Brand href=\"#home\"><label className=\"logo\">꩜</label><label className=\"branding-text\">SAKAWI CHAM</label></Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                            <Nav className=\"mr-auto my-2 my-lg-0\"\r\n                                style={{ maxHeight: '100px' }}\r\n                                navbarScroll>\r\n                                <Nav.Link href=\"#\">Trang chủ</Nav.Link>\r\n                                <Nav.Link href=\"#\">Tiện ích</Nav.Link>\r\n                                <Nav.Link href=\"#\">Tài liệu</Nav.Link>\r\n                                <Nav.Link href=\"#\">Blog</Nav.Link>\r\n                                <Nav.Link href=\"#\">Hướng dẫn</Nav.Link>\r\n                                <Nav.Link href=\"#\">Chúng tôi</Nav.Link>\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Navbar>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n            {/* Body */}\r\n            <Row>\r\n                <Col sm={2}>\r\n                    <Card>\r\n                        <ListGroup>\r\n                            <ListGroup.Item>Lịch tháng</ListGroup.Item>\r\n                            <ListGroup.Item>Lịch năm</ListGroup.Item>\r\n                            <ListGroup.Item>Sự kiện trong năm</ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n                <Col sm={10}>\r\n                    {props.children}\r\n                </Col>\r\n            </Row>\r\n            {/* Fotter */}\r\n            <Row>\r\n                <Col style={{ paddingRight: 0, paddingLeft: 0 }}>\r\n                    <p style={footerStyle}>{`© ${new Date().getFullYear()} Sakawi Cham`}</p>\r\n                </Col>\r\n            </Row>\r\n        </Container >\r\n    );\r\n}","import React from 'react';\r\n//import logo from './logo.svg';\r\nimport './App.css';\r\nimport { Calendar } from './components/calendar';\r\nimport { Layout } from './Layout';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Layout>\r\n        <Calendar/>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}