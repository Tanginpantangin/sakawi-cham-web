{"version":3,"sources":["enums/enum.ts","utility/constant.ts","utility/helper.ts","components/countDownBar.tsx","components/dayDetails.tsx","components/monthNavigation.tsx","components/monthAhier.tsx","components/monthAwal.tsx","components/monthGregory.tsx","components/calendar.tsx","Layout.tsx","App.tsx","index.tsx"],"names":["MonthEnum","DayEnum","IkasSarakEnum","NasakEnum","AwalMonthEnum","AhierMonthEnum","GuecTypeEnum","GuenTypeEnum","displayMonthName","month","result","displayNasakName","nasak","displayIkasSarakName","ikasSarak","firstDateOfSakawiAwal_Lieh_1407","Date","firstDateOfSakawiAhier_InaGirai_Lieh_1988","awalYearArray","no","name","Liéh","numberOfDays","Hak","Jim","Jây","Dal","Bak","Waw","JimLuic","awalMonthArray","Muharam","Syafar","Rabiulawal","Rabiulakhir","Jamadilawal","Jamadilakhir","Rejab","Sykban","Ramadan","Syawal","Julkaejah","Julhiijaah","Helper","currentDate","addedDays","getDayNumbersOfAwalMonth","awalMonth","year","newDays","date","addAwalMonths","previousMonth","currentMonth","addedMonths","newMonth","quotient","Math","floor","getMod","addAwalYears","currentYear","addedYears","newIkasSarak","yearNumber","yearName","yearItem","sakawiTakaiCiimConfig","filter","x","ArabYear","differenceInDays","getTime","remain","abs","awalYearNumber","awalYear","awalDate","totalYears","i","length","numberDaysOfCurrentYear","totalMonths","j","maxtrixCalendar","getActualDayNumbersOfAhierMonth","ahierMonth","BilanSa","Takuh","addAhierMonths","numberOfMonths","getMonthNumbersOfAhierYear","addAhierYears","previousYear","newNasak","remainNasak","numberOfDay","BilanKlau","BilanLima","BilanTajuh","BilanSalipan","BilanPuis","BilanDua","BilanPak","BilanNem","BilanDalipan","BilanSapluh","BilanMak","BilanBhang","index","findIndex","JSON","stringify","dayNumbersOfAhierMonth","newDt","setDate","getDate","toYearAhier","matrixCalendar","fullCalendar","startAhierYear","InâGirai","numberOfAhierYear","newGregoryDate","y","ahierYear","matrixPerYear","renderMatrixPerYear","validMatrix","applyGuenGuecRules","push","calendarDetails","renderCalendarDetails","lastMonthItem","addGregoryDays","dateOfGregoryCalendar","firstGregoryDate","addedGregoryDays","numberOfAhierMonth","m","getExpectedDayNumbersOfAhierMonth","firstDayOfAhierMonth","getDay","getAwalDateByGregoryDate","dayNumbersOfAwalMonth","firstDayOfAwalMonth","Number","parseInt","getStartDayByAwalMonth","ahierMonthItem","hasGuen","typeOfGuen","None","hasGuec","typeOfGuec","hasGuenRuleInNextYear","monthGuen","monthGuec","guecTypeInNextYear","element","checkIsGuenToAddDay","GuenByNormalRule","newDate","checkIsGuecToMinusDay","GuecByNormalRule","lastMonthOfCurrentYear","firstGregoryDateOfNextYear","checkHasGuecRuleInNextYear","checkHasGuenRuleInNextYear","getAhierAwalDaysGap","firstDateOfAhierMonth","firstDateOfAwalMonth","firstDateOfGregoryMonth","daysGap","days","addedAhierDate","addAhierDays","dateAhier","addedAwalDate","addAwalDays","monthDetailsCalendar","dateAwal","dateGregory","undefined","firstGregoryDateNextYear","nextAhierYear","matrixNextYear","firstMonth","isKateRamawanConflict","some","item","GuecByHareiButSukRule","GuecByKateRamawanRule","GuecByRijaNagarRule","n","latinNumber","ChamDigitArr","EnglishDigits","reg","RegExp","toString","replace","c","indexOf","addedAkaokThun","addedRijaNagar","addedKate","addedRamawan","forEach","eventType","eventDate","CountDownBar","props","useState","percent","setPercent","setDays","hours","setHours","minutes","setMinutes","seconds","setSeconds","useEffect","setTimeout","now","distance","init","variantType","dd","mm","getMonth","dateStr","getFullYear","displayEventName","Row","Col","md","style","marginBottom","fontWeight","slice","ProgressBar","height","variant","DayDetails","opacityValue","sakawiType","currentAhierMonth","currentAwalMonth","currentGregoryMonth","currentGregoryYear","tdStyle","opacity","backgroundColor","toLocaleDateString","GregoryDateStyle","fontSize","color","paddingTop","paddingBottom","textAlign","ahierDateStyle","awalDateStyle","flexDirection","paddingRight","alignSelf","eventStyle","display","paddingLeft","monthGregogy","displayGregoryDate","minHeight","maxHeight","dayNumbersOfCurrentAhierMonth","getEvents","map","monthAwal","margin","convertToChamDigitUnicode","className","dayNumbersOfCurrentAwalMonth","displayAwalDate","MonthNavigation","ButtonToolbar","justifyContent","ButtonGroup","Button","onClick","onSelectSakawiType","marginRight","onClickToday","onClickPreviousMonth","onClickNextMonth","MonthAhier","datesOfCurrentMonth","setDatesOfCurrentMonth","currentAhierMonthMatrix","setCurrentAhierMonthMatrix","React","firstIndex","fullSakawi","lastIndex","cells","rows","matrixSakawi","Container","type","Table","bordered","hover","tableLayout","d","padding","MonthAwal","currentAwalMonthMatrix","setCurrentAwalMonthMatrix","MonthGregory","setCurrentGregoryMonth","setCurrentGregoryYear","Calendar","initialAhierMonth","Pabuei","initialGregoryDate","initialMatrixCalendarType","showWarning","setShowWarning","setMatrixSakawi","setFullSakawi","setCurrentAhierMonth","setCurrentAwalMonth","setSakawiType","nextEvents","setNextEvents","matrix","buildMatrixCalendar","getNextEvents","Alert","onClose","dismissible","Heading","footerStyle","background","Layout","fluid","Navbar","bg","expand","Brand","href","Toggle","Collapse","id","Nav","navbarScroll","Link","sm","Card","ListGroup","Item","children","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99e0d0c2.chunk.js","sourcesContent":["export declare type VariantType = 'primary' | 'info' | 'secondary' | 'success' | 'warning' | 'danger' | 'light' | 'link';\r\nexport declare type EventType = 'Akaok thun' | 'Rija Nagar' | 'Katé palei Hamu Tanran' | 'Katé angaok bimong' | 'Ca-mbur' | 'Tamâ ricaow Ramâwan' | 'Talaih aek Ramâwan' | 'Muk trun' | 'Ong trun' | 'Ikak Waha' | 'Talaih Waha' | 'Yuer Yang';\r\n\r\nexport enum MonthEnum {\r\n    January = 0,\r\n    February,\r\n    March,\r\n    April,\r\n    May,\r\n    June,\r\n    July,\r\n    August,\r\n    September,\r\n    October,\r\n    November,\r\n    December\r\n}\r\n\r\nexport enum DayEnum {\r\n    Sunday = 0,\r\n    Monday,\r\n    Tuesday,\r\n    Wednesday,\r\n    Thursday,\r\n    Friday,\r\n    Saturday\r\n}\r\n\r\nexport enum IkasSarakEnum {\r\n    Liéh = 0,\r\n    Hak,\r\n    Jim,\r\n    Jây,\r\n    Dal,\r\n    Bak,\r\n    Waw,\r\n    JimLuic\r\n}\r\n\r\nexport enum NasakEnum {\r\n    Takuh = 0,\r\n    Kabaw,\r\n    Rimaong,\r\n    Tapay,\r\n    InâGirai,\r\n    UlaAnaih,\r\n    Asaih,\r\n    Pabaiy,\r\n    Kra,\r\n    Manuk,\r\n    Asau,\r\n    Pabuei\r\n}\r\n\r\nexport enum AwalMonthEnum {\r\n    Muharam = 0,\r\n    Syafar,\r\n    Rabiulawal,\r\n    Rabiulakhir,\r\n    Jamadilawal,\r\n    Jamadilakhir,\r\n    Rejab,\r\n    Sykban,\r\n    Ramadan,\r\n    Syawal,\r\n    Julkaejah,\r\n    Julhiijaah\r\n}\r\n\r\nexport enum AhierMonthEnum {\r\n    BilanSa = 0,\r\n    BilanDua,\r\n    BilanKlau,\r\n    BilanPak,\r\n    BilanLima,\r\n    BilanNem,\r\n    BilanTajuh,\r\n    BilanDalipan,\r\n    BilanSalipan,\r\n    BilanSapluh,\r\n    BilanPuis,\r\n    BilanMak,\r\n    BilanBhang\r\n}\r\n\r\nexport enum GuecTypeEnum {\r\n    None = -1,\r\n    GuecByNormalRule,\r\n    GuecByHareiButSukRule,\r\n    GuecByRijaNagarRule,\r\n    GuecByKateRamawanRule,\r\n}\r\n\r\nexport enum GuenTypeEnum {\r\n    None = -1,\r\n    GuenByNormalRule\r\n}\r\n\r\nexport function displayMonthName(month: AhierMonthEnum) {\r\n    let result = '';\r\n\r\n    switch (month) {\r\n        case 0:\r\n            result = 'ꨝꨪꨤꩆ ꨧꨩ';\r\n            break;\r\n        case 1:\r\n            result = 'ꨝꨪꨤꩆ ꨕꨶꨩ';\r\n            break;\r\n        case 2:\r\n            result = 'ꨝꨪꨤꩆ ꨆꨵꨮꨭ';\r\n            break;\r\n        case 3:\r\n            result = 'ꨝꨪꨤꩆ ꨛꨩꩀ';\r\n            break;\r\n        case 4:\r\n            result = 'ꨝꨪꨤꩆ ꨤꨪꨟꨩ';\r\n            break;\r\n        case 5:\r\n            result = 'ꨝꨪꨤꩆ ꨘꩌ';\r\n            break;\r\n        case 6:\r\n            result = 'ꨝꨪꨤꩆ ꨓꨎꨭꩍ';\r\n            break;\r\n        case 7:\r\n            result = 'ꨝꨪꨤꩆ ꨕꨤꨪꨚꩆ';\r\n            break;\r\n        case 8:\r\n            result = 'ꨝꨪꨤꩆ ꨧꨤꨪꨚꩆ';\r\n            break;\r\n        case 9:\r\n            result = 'ꨝꨪꨤꩆ ꨧꨚꨵꨭꩍ';\r\n            break;\r\n        case 10:\r\n            result = 'ꨝꨪꨤꩆ ꨚꨶꨪꩋ';\r\n            break;\r\n        case 11:\r\n            result = 'ꨝꨪꨤꩆ ꨠꩀ';\r\n            break;\r\n        case 12:\r\n            result = 'ꨝꨪꨤꩆ ꨞꩃ';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function displayNasakName(nasak: NasakEnum) {\r\n    let result = '';\r\n\r\n    switch (nasak) {\r\n        case 0:\r\n            result = 'ꨓꨆꨭꩍ';\r\n            break;\r\n        case 1:\r\n            result = 'ꨆꨝꨥ';\r\n            break;\r\n        case 2:\r\n            result = 'ꨣꨪꨟꨯꨱꩃ';\r\n            break;\r\n        case 3:\r\n            result = 'ꨓꨛꩈ';\r\n            break;\r\n        case 4:\r\n            result = 'ꨁꨗꨩ ꨈꨪꨣꩈ';\r\n            break;\r\n        case 5:\r\n            result = 'ꨂꨤꨩ ꨗꨰꩍ';\r\n            break;\r\n        case 6:\r\n            result = 'ꨀꨧꨰꩍ';\r\n            break;\r\n        case 7:\r\n            result = 'ꨚꨝꨰꩈ';\r\n            break;\r\n        case 8:\r\n            result = 'ꨆꨴꨩ';\r\n            break;\r\n        case 9:\r\n            result = 'ꨟꨗꨭꩀ';\r\n            break;\r\n        case 10:\r\n            result = 'ꨀꨧꨮꨭ';\r\n            break;\r\n        case 11:\r\n            result = 'ꨚꨝꨶꨬ';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function displayIkasSarakName(ikasSarak: IkasSarakEnum) {\r\n    let result = '';\r\n\r\n    switch (ikasSarak) {\r\n        case 0:\r\n            result = '1';\r\n            break;\r\n        case 1:\r\n            result = '5';\r\n            break;\r\n        case 2:\r\n            result = '3';\r\n            break;\r\n        case 3:\r\n            result = '7';\r\n            break;\r\n        case 4:\r\n            result = '4';\r\n            break;\r\n        case 5:\r\n            result = '2';\r\n            break;\r\n        case 6:\r\n            result = '6';\r\n            break;\r\n        case 7:\r\n            result = '3';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n","import { AwalMonthEnum, IkasSarakEnum } from \"../enums/enum\";\r\n\r\nexport const firstDateOfSakawiAwal_Lieh_1407 = new Date(1986, 8, 5);//05/09/1986\r\nexport const yearNumberOfSakawiAwal_Lieh_1407 = 1407;\r\nexport const firstDateOfSakawiAhier_InaGirai_Lieh_1988 = new Date(1988, 3, 16);//16/04/1988\r\nexport const totalDaysOf8AwalYearCycle = 2835;\r\n\r\nexport const awalYearArray: { no: number; name: IkasSarakEnum; numberOfDays: number }[] = [\r\n    { no: 1, name: IkasSarakEnum.Liéh, numberOfDays: 354 },\r\n    { no: 2, name: IkasSarakEnum.Hak, numberOfDays: 355 },\r\n    { no: 3, name: IkasSarakEnum.Jim, numberOfDays: 354 },\r\n    { no: 4, name: IkasSarakEnum.Jây, numberOfDays: 354 },\r\n    { no: 5, name: IkasSarakEnum.Dal, numberOfDays: 355 },\r\n    { no: 6, name: IkasSarakEnum.Bak, numberOfDays: 354 },\r\n    { no: 7, name: IkasSarakEnum.Waw, numberOfDays: 354 },\r\n    { no: 8, name: IkasSarakEnum.JimLuic, numberOfDays: 355 }\r\n];\r\n\r\nexport const awalMonthArray: { no: number; name: AwalMonthEnum; numberOfDays: number }[] = [\r\n    { no: 1, name: AwalMonthEnum.Muharam, numberOfDays: 30 },\r\n    { no: 2, name: AwalMonthEnum.Syafar, numberOfDays: 29 },\r\n    { no: 3, name: AwalMonthEnum.Rabiulawal, numberOfDays: 30 },\r\n    { no: 4, name: AwalMonthEnum.Rabiulakhir, numberOfDays: 29 },\r\n    { no: 5, name: AwalMonthEnum.Jamadilawal, numberOfDays: 30 },\r\n    { no: 6, name: AwalMonthEnum.Jamadilakhir, numberOfDays: 29 },\r\n    { no: 7, name: AwalMonthEnum.Rejab, numberOfDays: 30 },\r\n    { no: 8, name: AwalMonthEnum.Sykban, numberOfDays: 29 },\r\n    { no: 9, name: AwalMonthEnum.Ramadan, numberOfDays: 30 },\r\n    { no: 10, name: AwalMonthEnum.Syawal, numberOfDays: 29 },\r\n    { no: 11, name: AwalMonthEnum.Julkaejah, numberOfDays: 30 },\r\n    { no: 12, name: AwalMonthEnum.Julhiijaah, numberOfDays: 30 }\r\n]","import { CountDownBarProps } from '../components/countDownBar';\r\nimport sakawiTakaiCiimConfig from '../data/SakawiTakaiCiim.json';\r\nimport { AhierMonthEnum, AwalMonthEnum, GuecTypeEnum, GuenTypeEnum, IkasSarakEnum, NasakEnum } from \"../enums/enum\";\r\nimport { AhierDate, AhierMonth, AhierYear } from \"../model/AhierDate\";\r\nimport { AwalDate, AwalMonth, AwalYear } from '../model/AwalDate';\r\nimport { FullCalendarType } from '../model/FullCalendarType';\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport { awalMonthArray, awalYearArray, firstDateOfSakawiAhier_InaGirai_Lieh_1988, firstDateOfSakawiAwal_Lieh_1407, totalDaysOf8AwalYearCycle, yearNumberOfSakawiAwal_Lieh_1407 } from './constant';\r\n\r\nexport default class Helper {\r\n    //#region Awal\r\n    static addAwalDays(currentDate: AwalDate, addedDays: number) {\r\n        let numberOfDays = Helper.getDayNumbersOfAwalMonth(currentDate.awalMonth.year, currentDate.awalMonth.month);\r\n        let newDays = currentDate.date + addedDays;\r\n        let result: AwalDate = {\r\n            date: 1,\r\n            awalMonth: {\r\n                month: AwalMonthEnum.Jamadilakhir,\r\n                year: { ikasSarak: IkasSarakEnum.Liéh }\r\n            }\r\n        };\r\n\r\n        if (newDays > numberOfDays) {\r\n            const nextMonth = Helper.addAwalMonths(currentDate.awalMonth, 1);\r\n            result = {\r\n                date: newDays - numberOfDays,\r\n                awalMonth: nextMonth\r\n            };\r\n\r\n        } else if (newDays <= 0) {\r\n            const previousMonth = Helper.addAwalMonths(currentDate.awalMonth, -1);\r\n            result = {\r\n                date: Helper.getDayNumbersOfAwalMonth(previousMonth.year, previousMonth.month) + newDays,\r\n                awalMonth: previousMonth\r\n            };\r\n        }\r\n        else {\r\n            result = {\r\n                date: newDays,\r\n                awalMonth: currentDate.awalMonth\r\n            };\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static addAwalMonths(currentMonth: AwalMonth, addedMonths: number) {\r\n        let newMonth = currentMonth.month + addedMonths;\r\n        let quotient = Math.floor(newMonth / 12);\r\n        let remain = Helper.getMod(newMonth, 12);\r\n\r\n        let result: AwalMonth = {\r\n            month: remain,\r\n            year: Helper.addAwalYears(currentMonth.year, quotient)\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static addAwalYears(currentYear: AwalYear, addedYears: number) {\r\n        let newIkasSarak = currentYear.ikasSarak + addedYears;\r\n        let remain = Helper.getMod(newIkasSarak, 8);\r\n        let newYearNumber = (currentYear.yearNumber ?? 0) + addedYears;\r\n\r\n        let result: AwalYear = {\r\n            ikasSarak: remain,\r\n            yearNumber: newYearNumber\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static getDayNumbersOfAwalMonth(year: AwalYear, month: AwalMonthEnum) {\r\n        let numberOfDay = 0;\r\n\r\n        if (month === AwalMonthEnum.Muharam || month === AwalMonthEnum.Rabiulawal || month === AwalMonthEnum.Jamadilawal ||\r\n            month === AwalMonthEnum.Rejab || month === AwalMonthEnum.Ramadan || month === AwalMonthEnum.Julkaejah) {\r\n            // Tháng lẻ: (30 ngày), gồm: 1,3,5,7,9,11.\r\n            numberOfDay = 30;\r\n        } else if (month === AwalMonthEnum.Syafar || month === AwalMonthEnum.Rabiulakhir || month === AwalMonthEnum.Jamadilakhir ||\r\n            month === AwalMonthEnum.Sykban || month === AwalMonthEnum.Syawal) {\r\n            // Tháng chẳn: (29 ngày), gồm: 2,4,6,8,10. \r\n            numberOfDay = 29;\r\n        } else {\r\n            // Riêng tháng 12: \r\n            if (year.ikasSarak === IkasSarakEnum.Hak || year.ikasSarak === IkasSarakEnum.Dal || year.ikasSarak === IkasSarakEnum.JimLuic) {\r\n                // năm nhuận (thun \"Nâh\": Hak, Dal, Jim luic): 30 ngày\r\n                numberOfDay = 30;\r\n            } else {\r\n                // năm thường (thun \"Wak\"): 29 ngày\r\n                numberOfDay = 29;\r\n            }\r\n        }\r\n\r\n        return numberOfDay;\r\n    }\r\n\r\n    static getStartDayByAwalMonth(year: AwalYear, month: AwalMonthEnum) {\r\n        let yearName = IkasSarakEnum[year.ikasSarak];\r\n        let yearItem = sakawiTakaiCiimConfig.filter(x => x.ArabYear === yearName)[0];\r\n        let result = '';\r\n\r\n        switch (month) {\r\n            case 0:\r\n                result = yearItem['Month_01'];\r\n                break;\r\n            case 1:\r\n                result = yearItem['Month_02'];\r\n                break;\r\n            case 2:\r\n                result = yearItem['Month_03'];\r\n                break;\r\n            case 3:\r\n                result = yearItem['Month_04'];\r\n                break;\r\n            case 4:\r\n                result = yearItem['Month_05'];\r\n                break;\r\n            case 5:\r\n                result = yearItem['Month_06'];\r\n                break;\r\n            case 6:\r\n                result = yearItem['Month_07'];\r\n                break;\r\n            case 7:\r\n                result = yearItem['Month_08'];\r\n                break;\r\n            case 8:\r\n                result = yearItem['Month_09'];\r\n                break;\r\n            case 9:\r\n                result = yearItem['Month_10'];\r\n                break;\r\n            case 10:\r\n                result = yearItem['Month_11'];\r\n                break;\r\n            case 11:\r\n                result = yearItem['Month_12'];\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static getAwalDateByGregoryDate(date: Date) {\r\n        let differenceInTime = date.getTime() - firstDateOfSakawiAwal_Lieh_1407.getTime();\r\n        let differenceInDays = differenceInTime / (1000 * 3600 * 24);\r\n        let remain = Helper.getMod(differenceInDays, totalDaysOf8AwalYearCycle);\r\n        let quotient = Math.floor(Math.abs(differenceInDays) / totalDaysOf8AwalYearCycle);\r\n\r\n        let awalYearNumber = yearNumberOfSakawiAwal_Lieh_1407;\r\n        let awalYear = IkasSarakEnum.Liéh;\r\n        let awalMonth = AwalMonthEnum.Muharam;\r\n        let awalDate = 0;\r\n        let totalYears = 0;\r\n        for (let i = 0; i < awalYearArray.length; i++) {\r\n            totalYears += awalYearArray[i].numberOfDays;\r\n            if (remain < totalYears) {\r\n                awalYear = awalYearArray[i].name;\r\n\r\n                if (differenceInDays > 0) {\r\n                    awalYearNumber += (quotient * 8) + i;\r\n                } else {\r\n                    awalYearNumber -= (quotient * 8) + i;\r\n                }\r\n\r\n                let numberDaysOfCurrentYear = remain - (totalYears - awalYearArray[i].numberOfDays);\r\n                let totalMonths = 0;\r\n\r\n                for (let j = 0; j < awalMonthArray.length; j++) {\r\n                    totalMonths += awalMonthArray[j].numberOfDays;\r\n                    if (numberDaysOfCurrentYear < totalMonths) {\r\n                        awalMonth = awalMonthArray[j].name;\r\n                        let numberDaysOfCurrentMonth = numberDaysOfCurrentYear - (totalMonths - awalMonthArray[j].numberOfDays);\r\n                        awalDate = numberDaysOfCurrentMonth + 1;\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        let resultDate: AwalDate = {\r\n            date: awalDate,\r\n            awalMonth: { month: awalMonth, year: { ikasSarak: awalYear, yearNumber: awalYearNumber } }\r\n        }\r\n\r\n        return resultDate;\r\n    }\r\n    //#endregion\r\n\r\n    //#region Ahier\r\n    static addAhierDays(maxtrixCalendar: MatrixCalendarType[], currentDate: AhierDate, addedDays: number) {\r\n        const numberOfDays = Helper.getActualDayNumbersOfAhierMonth(maxtrixCalendar, currentDate.ahierMonth);\r\n        const newDays = currentDate.date + addedDays;\r\n\r\n        let result: AhierDate = {\r\n            date: 1,\r\n            ahierMonth: {\r\n                month: AhierMonthEnum.BilanSa,\r\n                year: { nasak: NasakEnum.Takuh, ikasSarak: IkasSarakEnum.Liéh }\r\n            }\r\n        };\r\n\r\n        if (newDays > numberOfDays) {\r\n            const nextMonth = Helper.addAhierMonths(currentDate.ahierMonth, 1);\r\n            result = {\r\n                date: newDays - numberOfDays,\r\n                ahierMonth: nextMonth\r\n            };\r\n        } else if (newDays <= 0) {\r\n            const previousMonth = Helper.addAhierMonths(currentDate.ahierMonth, -1);\r\n            const dayNumberOfPreviousMonth = Helper.getActualDayNumbersOfAhierMonth(maxtrixCalendar, previousMonth);\r\n            result = {\r\n                date: dayNumberOfPreviousMonth + newDays,\r\n                ahierMonth: previousMonth\r\n            };\r\n        }\r\n        else {\r\n            result = {\r\n                date: newDays,\r\n                ahierMonth: currentDate.ahierMonth\r\n            };\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static addAhierMonths(currentMonth: AhierMonth, addedMonths: number) {\r\n        const numberOfMonths = Helper.getMonthNumbersOfAhierYear(currentMonth.year);\r\n        const newMonth = currentMonth.month + addedMonths;\r\n        let result: AhierMonth = {\r\n            month: currentMonth.month,\r\n            year: currentMonth.year\r\n        }\r\n\r\n        if (newMonth > numberOfMonths - 1) {\r\n            const nextYear = Helper.addAhierYears(currentMonth.year, 1);\r\n            result = {\r\n                month: newMonth - numberOfMonths,\r\n                year: nextYear\r\n            }\r\n        } else if (newMonth < 0) {\r\n            const previousYear = Helper.addAhierYears(currentMonth.year, -1);\r\n            const numberOfMonthsOfPreviousYear = Helper.getMonthNumbersOfAhierYear(previousYear);\r\n\r\n            result = {\r\n                month: numberOfMonthsOfPreviousYear + newMonth,\r\n                year: previousYear\r\n            }\r\n        } else {\r\n            result = {\r\n                month: newMonth,\r\n                year: currentMonth.year\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static addAhierYears(currentYear: AhierYear, addedYears: number) {\r\n        let newNasak = (currentYear.nasak + addedYears) % 12;\r\n        let remainNasak = Helper.getMod(newNasak, 12);\r\n\r\n        let newIkasSarak = (currentYear.ikasSarak + addedYears) % 8;\r\n        let remainIkasSarak = Helper.getMod(newIkasSarak, 8);\r\n\r\n        let newYearNumber = (currentYear.yearNumber ?? 0) + addedYears;\r\n\r\n        let result: AhierYear = {\r\n            nasak: remainNasak,\r\n            ikasSarak: remainIkasSarak,\r\n            yearNumber: newYearNumber\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static getExpectedDayNumbersOfAhierMonth(year: AhierYear, month: AhierMonthEnum) {\r\n        let numberOfDay = 0;\r\n        if (month === AhierMonthEnum.BilanSa || month === AhierMonthEnum.BilanKlau || month === AhierMonthEnum.BilanLima ||\r\n            month === AhierMonthEnum.BilanTajuh || month === AhierMonthEnum.BilanSalipan || month === AhierMonthEnum.BilanPuis) {\r\n            // Tháng lẻ - \"bilan tapak\": (30 ngày), gồm: 1,3,5,7,9,11.\r\n            numberOfDay = 30;\r\n        } else if (month === AhierMonthEnum.BilanDua || month === AhierMonthEnum.BilanPak || month === AhierMonthEnum.BilanNem ||\r\n            month === AhierMonthEnum.BilanDalipan || month === AhierMonthEnum.BilanSapluh) {\r\n            // Tháng chẳn - \"bilan u\" : (29 ngày), gồm: 2,4,6,8,10. \r\n            numberOfDay = 29;\r\n        } else if (month === AhierMonthEnum.BilanMak) {\r\n            // Tháng 12:  \r\n            if (year.ikasSarak === IkasSarakEnum.Hak || year.ikasSarak === IkasSarakEnum.Dal || year.ikasSarak === IkasSarakEnum.JimLuic) {\r\n                // năm nhuận (thun \"Nâh\": Hak, Dal, Jim luic): 30 ngày\r\n                numberOfDay = 30;\r\n            } else {\r\n                // năm thường (thun \"Wak\"): 29 ngày\r\n                numberOfDay = 29;\r\n            }\r\n        } else if (month === AhierMonthEnum.BilanBhang) {\r\n            if (year.ikasSarak === IkasSarakEnum.Hak || year.ikasSarak === IkasSarakEnum.Dal || year.ikasSarak === IkasSarakEnum.JimLuic) {\r\n                // năm nhuận (thun \"Nâh\": Hak, Dal, Jim luic): 29 ngày\r\n                numberOfDay = 29;\r\n            }\r\n        }\r\n\r\n        return numberOfDay;\r\n    }\r\n\r\n    static getActualDayNumbersOfAhierMonth(maxtrixCalendar: MatrixCalendarType[], ahierMonth: AhierMonth) {\r\n        const index = maxtrixCalendar.findIndex(x => JSON.stringify(x.ahierMonth) === JSON.stringify(ahierMonth));\r\n        if (index !== -1) {\r\n            return maxtrixCalendar[index].dayNumbersOfAhierMonth;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    static getMonthNumbersOfAhierYear(year: AhierYear) {\r\n        if (year.ikasSarak === IkasSarakEnum.Hak\r\n            || year.ikasSarak === IkasSarakEnum.Dal\r\n            || year.ikasSarak === IkasSarakEnum.JimLuic) {\r\n            return 13;\r\n        }\r\n        return 12;\r\n    }\r\n    //#endregion\r\n\r\n    //#region Gregory\r\n    static addGregoryDays(date: Date, numberOfDays: number) {\r\n        let newDt = new Date(date);\r\n        newDt.setDate(newDt.getDate() + numberOfDays);\r\n        return newDt;\r\n    }\r\n    //#endregion\r\n\r\n    static buildMatrixCalendar(toYearAhier: number) {\r\n        let matrixCalendar: MatrixCalendarType[] = [];\r\n        let fullCalendar: FullCalendarType[] = [];\r\n\r\n        // Choose thun 1988 as a root\r\n        const startAhierYear: AhierYear = {\r\n            nasak: NasakEnum.InâGirai,\r\n            ikasSarak: IkasSarakEnum.Liéh,\r\n            yearNumber: 1988\r\n        }\r\n\r\n        // TO-TEST\r\n        // const startAhierYear: AhierYear = {\r\n        //     nasak: NasakEnum.Rimaong,\r\n        //     ikasSarak: IkasSarakEnum.Jim,\r\n        //     yearNumber: 2022\r\n        // }\r\n\r\n        const numberOfAhierYear = toYearAhier - (startAhierYear.yearNumber ?? 0);\r\n        let newGregoryDate = firstDateOfSakawiAhier_InaGirai_Lieh_1988;\r\n        //let newGregoryDate = new Date(2022, 3, 30);//16/04/1988\r\n\r\n        for (let y = 0; y < numberOfAhierYear; y++) {\r\n            const ahierYear = Helper.addAhierYears(startAhierYear, y);\r\n            const matrixPerYear = Helper.renderMatrixPerYear(ahierYear, newGregoryDate);\r\n            const validMatrix = Helper.applyGuenGuecRules(matrixPerYear);\r\n            matrixCalendar.push(...validMatrix);\r\n\r\n            const calendarDetails = Helper.renderCalendarDetails(validMatrix);\r\n            fullCalendar.push(...calendarDetails);\r\n\r\n            const lastMonthItem = validMatrix[validMatrix.length - 1];\r\n            newGregoryDate = Helper.addGregoryDays(lastMonthItem.dateOfGregoryCalendar, lastMonthItem.dayNumbersOfAhierMonth);\r\n        }\r\n\r\n        return {\r\n            matrixCalendar,\r\n            fullCalendar\r\n        };\r\n    }\r\n\r\n    static renderMatrixPerYear(ahierYear: AhierYear, firstGregoryDate: Date) {\r\n        let matrixPerYear: MatrixCalendarType[] = [];\r\n        let newGregoryDate = firstGregoryDate;\r\n        let addedGregoryDays = 0;\r\n        const numberOfAhierMonth = Helper.getMonthNumbersOfAhierYear(ahierYear);\r\n\r\n        for (let m = 0; m < numberOfAhierMonth; m++) {\r\n            const ahierMonth: AhierMonth = { month: m, year: ahierYear };\r\n            const dayNumbersOfAhierMonth = Helper.getExpectedDayNumbersOfAhierMonth(ahierYear, m);\r\n            const firstDayOfAhierMonth = newGregoryDate.getDay();\r\n\r\n            const awalDate = Helper.getAwalDateByGregoryDate(newGregoryDate);\r\n            const awalMonth = Helper.addAwalMonths(awalDate.awalMonth, 1);\r\n            const dayNumbersOfAwalMonth = Helper.getDayNumbersOfAwalMonth(awalMonth.year, awalMonth.month);\r\n            const firstDayOfAwalMonth = Number.parseInt(Helper.getStartDayByAwalMonth(awalMonth.year, awalMonth.month)) - 1; // Sunday is 0 \r\n\r\n            let ahierMonthItem: MatrixCalendarType = {\r\n                ahierMonth: ahierMonth,\r\n                dayNumbersOfAhierMonth: dayNumbersOfAhierMonth,\r\n                hasGuen: false,\r\n                typeOfGuen: GuenTypeEnum.None,\r\n                hasGuec: false,\r\n                typeOfGuec: GuecTypeEnum.None,\r\n                firstDayOfAhierMonth: firstDayOfAhierMonth,\r\n                dateOfGregoryCalendar: newGregoryDate,\r\n                awalMonth: awalMonth,\r\n                dayNumbersOfAwalMonth: dayNumbersOfAwalMonth,\r\n                firstDayOfAwalMonth: firstDayOfAwalMonth\r\n            }\r\n\r\n            matrixPerYear.push(ahierMonthItem);\r\n\r\n            addedGregoryDays += dayNumbersOfAhierMonth;\r\n            newGregoryDate = Helper.addGregoryDays(firstGregoryDate, addedGregoryDays);\r\n        }\r\n\r\n        return matrixPerYear;\r\n    }\r\n\r\n    static applyGuenGuecRules(matrixPerYear: MatrixCalendarType[]) {\r\n        let monthGuen = -1;\r\n        let monthGuec = -1;\r\n        let guecTypeInNextYear = GuecTypeEnum.None;\r\n        let hasGuenRuleInNextYear = false;\r\n\r\n        // Check validations and fix in current year\r\n        for (let index = 0; index < matrixPerYear.length; index++) {\r\n            const element = matrixPerYear[index];\r\n\r\n            // Guen\r\n            if (monthGuen === -1 && Helper.checkIsGuenToAddDay(element.firstDayOfAhierMonth, element.firstDayOfAwalMonth)) {\r\n                monthGuen = index;\r\n                matrixPerYear[monthGuen - 1].dayNumbersOfAhierMonth += 1;\r\n                matrixPerYear[monthGuen - 1].hasGuen = true;\r\n                matrixPerYear[monthGuen - 1].typeOfGuen = GuenTypeEnum.GuenByNormalRule;\r\n            }\r\n\r\n            if (monthGuen !== -1 && index >= monthGuen) {\r\n                const newDate = Helper.addGregoryDays(matrixPerYear[index].dateOfGregoryCalendar, 1);\r\n                matrixPerYear[index].dateOfGregoryCalendar = newDate;\r\n                matrixPerYear[index].firstDayOfAhierMonth = newDate.getDay();\r\n            }\r\n\r\n            // Guec\r\n            if (monthGuec === -1 && Helper.checkIsGuecToMinusDay(element.firstDayOfAhierMonth, element.firstDayOfAwalMonth)) {\r\n                monthGuec = index;\r\n                matrixPerYear[monthGuec - 1].dayNumbersOfAhierMonth -= 1;\r\n                matrixPerYear[monthGuec - 1].hasGuec = true;\r\n                matrixPerYear[monthGuec - 1].typeOfGuec = GuecTypeEnum.GuecByNormalRule;\r\n            }\r\n\r\n            if (monthGuec !== -1 && index >= monthGuec) {\r\n                const newDate = Helper.addGregoryDays(matrixPerYear[index].dateOfGregoryCalendar, -1);\r\n                matrixPerYear[index].dateOfGregoryCalendar = newDate;\r\n                matrixPerYear[index].firstDayOfAhierMonth = newDate.getDay();\r\n            }\r\n        }\r\n\r\n        // Check validations in next year to fix current year\r\n        const lastMonthOfCurrentYear = matrixPerYear[matrixPerYear.length - 1];\r\n        const firstGregoryDateOfNextYear = Helper.addGregoryDays(lastMonthOfCurrentYear.dateOfGregoryCalendar, lastMonthOfCurrentYear.dayNumbersOfAhierMonth);\r\n        guecTypeInNextYear = Helper.checkHasGuecRuleInNextYear(lastMonthOfCurrentYear.ahierMonth.year, firstGregoryDateOfNextYear);\r\n        hasGuenRuleInNextYear = Helper.checkHasGuenRuleInNextYear(lastMonthOfCurrentYear.ahierMonth.year, firstGregoryDateOfNextYear);\r\n\r\n        if (guecTypeInNextYear !== GuecTypeEnum.None) {\r\n            // Bilan Mak (12)\r\n            matrixPerYear[11].dayNumbersOfAhierMonth -= 1;\r\n            matrixPerYear[11].hasGuec = true;\r\n            matrixPerYear[11].typeOfGuec = guecTypeInNextYear;\r\n\r\n            // Bilan Bhang (13)\r\n            const newDate = Helper.addGregoryDays(matrixPerYear[12].dateOfGregoryCalendar, -1);\r\n            matrixPerYear[12].dateOfGregoryCalendar = newDate;\r\n            matrixPerYear[12].firstDayOfAhierMonth = newDate.getDay();\r\n        } else if (hasGuenRuleInNextYear) {\r\n            // Bilan (12) or (13)\r\n            if (Helper.getAhierAwalDaysGap(lastMonthOfCurrentYear.firstDayOfAhierMonth, lastMonthOfCurrentYear.firstDayOfAwalMonth) === 2) {\r\n                lastMonthOfCurrentYear.dayNumbersOfAhierMonth += 1;\r\n                lastMonthOfCurrentYear.hasGuen = true;\r\n                lastMonthOfCurrentYear.typeOfGuen = GuenTypeEnum.GuenByNormalRule;\r\n            }\r\n        }\r\n\r\n        return [...matrixPerYear];\r\n    }\r\n\r\n    static renderCalendarDetails(matrixPerYear: MatrixCalendarType[]) {\r\n        let fullCalendar: FullCalendarType[] = [];\r\n\r\n        for (let index = 0; index < matrixPerYear.length; index++) {\r\n            const element = matrixPerYear[index];\r\n            const firstDateOfAhierMonth: AhierDate = { date: 1, ahierMonth: element.ahierMonth };\r\n            const firstDateOfAwalMonth: AwalDate = { date: 1, awalMonth: element.awalMonth };\r\n            const firstDateOfGregoryMonth = element.dateOfGregoryCalendar;\r\n            const daysGap = Helper.getAhierAwalDaysGap(element.firstDayOfAhierMonth, element.firstDayOfAwalMonth);\r\n\r\n            for (let days = 0; days < element.dayNumbersOfAhierMonth; days++) {\r\n                const addedAhierDate = Helper.addAhierDays(matrixPerYear, firstDateOfAhierMonth, days);\r\n                const dateAhier: AhierDate = {\r\n                    date: addedAhierDate.date,\r\n                    ahierMonth: addedAhierDate.ahierMonth\r\n                }\r\n\r\n                const addedAwalDate = Helper.addAwalDays(firstDateOfAwalMonth, days - daysGap);\r\n                const dateAwal: AwalDate = {\r\n                    date: addedAwalDate.date,\r\n                    awalMonth: addedAwalDate.awalMonth\r\n                }\r\n\r\n                const dateGregory = Helper.addGregoryDays(firstDateOfGregoryMonth, days);\r\n\r\n                let monthDetailsCalendar: FullCalendarType = {\r\n                    dateAhier: dateAhier,\r\n                    dateAwal: dateAwal,\r\n                    dateGregory: dateGregory,\r\n                    typeOfGuen: days === element.dayNumbersOfAhierMonth - 1 ? element.typeOfGuen : undefined,\r\n                    typeOfGuec: days === element.dayNumbersOfAhierMonth - 1 ? element.typeOfGuec : undefined,\r\n                    hasGuen: days === element.dayNumbersOfAhierMonth - 1 ? element.hasGuen : undefined,\r\n                    hasGuec: days === element.dayNumbersOfAhierMonth - 1 ? element.hasGuec : undefined\r\n                }\r\n\r\n                fullCalendar.push(monthDetailsCalendar);\r\n            }\r\n        }\r\n\r\n        return fullCalendar;\r\n    }\r\n\r\n    static checkIsGuenToAddDay(firstDayOfAhierMonth: number, firstDayOfAwalMonth: number) {\r\n        const daysGap = Helper.getAhierAwalDaysGap(firstDayOfAhierMonth, firstDayOfAwalMonth);\r\n        return daysGap > 2;\r\n    }\r\n\r\n    static checkIsGuecToMinusDay(firstDayOfAhierMonth: number, firstDayOfAwalMonth: number) {\r\n        return firstDayOfAhierMonth === firstDayOfAwalMonth;\r\n    }\r\n\r\n    static checkHasGuecRuleInNextYear(currentYear: AhierYear, firstGregoryDateNextYear: Date) {\r\n        let result = GuecTypeEnum.None;\r\n\r\n        const nextAhierYear = Helper.addAhierYears(currentYear, 1);\r\n        const matrixNextYear = Helper.renderMatrixPerYear(nextAhierYear, firstGregoryDateNextYear);\r\n        const firstMonth = matrixNextYear[0];\r\n        const isKateRamawanConflict = matrixNextYear.some(x =>\r\n            x.ahierMonth.month === AhierMonthEnum.BilanTajuh &&\r\n            x.awalMonth.month === AwalMonthEnum.Ramadan &&\r\n            Helper.getAhierAwalDaysGap(x.firstDayOfAhierMonth, x.firstDayOfAwalMonth) === 1);\r\n        const hasNormalGuec = matrixNextYear.some(item => Helper.checkIsGuecToMinusDay(item.firstDayOfAhierMonth, item.firstDayOfAwalMonth));\r\n\r\n        if (hasNormalGuec) {\r\n            result = GuecTypeEnum.GuecByNormalRule;\r\n        } else if (nextAhierYear.ikasSarak === IkasSarakEnum.Liéh) {\r\n            if (firstMonth.firstDayOfAhierMonth === 4 && firstMonth.firstDayOfAwalMonth === 5) {\r\n                result = GuecTypeEnum.GuecByHareiButSukRule;\r\n            } else if (isKateRamawanConflict) {\r\n                result = GuecTypeEnum.GuecByKateRamawanRule;\r\n            }\r\n        } else if (firstMonth.firstDayOfAhierMonth === 5 && firstMonth.firstDayOfAwalMonth === 6) {\r\n            result = GuecTypeEnum.GuecByRijaNagarRule;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static checkHasGuenRuleInNextYear(currentYear: AhierYear, firstGregoryDateNextYear: Date) {\r\n        const nextAhierYear = Helper.addAhierYears(currentYear, 1);\r\n        const matrixNextYear = Helper.renderMatrixPerYear(nextAhierYear, firstGregoryDateNextYear);\r\n\r\n        return matrixNextYear.some(item => Helper.checkIsGuenToAddDay(item.firstDayOfAhierMonth, item.firstDayOfAwalMonth));\r\n    }\r\n\r\n    static getMod(n: number, m: number) {\r\n        const remain = n % m;\r\n        return Math.floor(remain >= 0 ? remain : remain + m);\r\n    };\r\n\r\n    static getAhierAwalDaysGap(firstDayOfAhierMonth: number, firstDayOfAwalMonth: number) {\r\n        let daysGap = 0;\r\n\r\n        if (firstDayOfAhierMonth < firstDayOfAwalMonth) {\r\n            daysGap = firstDayOfAwalMonth - firstDayOfAhierMonth;\r\n        } else if (firstDayOfAhierMonth > firstDayOfAwalMonth) {\r\n            daysGap = firstDayOfAwalMonth + (6 - firstDayOfAhierMonth) + 1; // Sunday is 0\r\n        }\r\n\r\n        return daysGap;\r\n    }\r\n\r\n    static convertToChamDigitUnicode(latinNumber: number) {\r\n        const ChamDigitArr = ['꩐', '꩑', '꩒', '꩓', '꩔', '꩕', '꩖', '꩗', '꩘', '꩙'];\r\n        const EnglishDigits = '0123456789';\r\n        const reg = new RegExp('[' + EnglishDigits + ']', 'g');\r\n\r\n        return latinNumber.toString().replace(reg, function (c) {\r\n            return ChamDigitArr[EnglishDigits.indexOf(c)]\r\n        });\r\n    }\r\n\r\n    static getNextEvents(fullCalendar: FullCalendarType[]) {\r\n        let result: CountDownBarProps[] = [];\r\n        let addedAkaokThun = false;\r\n        let addedRijaNagar = false;\r\n        //let addedKateHamuTanran = false;\r\n        let addedKate = false;\r\n        let addedRamawan = false;\r\n        // let addedMukTrun = false;\r\n        // let addedOngTrun = false;\r\n        // let addedTalaihRamawan = false;\r\n        // let addedIkakWaha = false;\r\n        // let addedTalaihWaha = false;\r\n        // let addedYuerYang = false;\r\n\r\n        fullCalendar.forEach(function (item, index) {\r\n            if (item.dateGregory < new Date()) {\r\n                return;\r\n            }\r\n\r\n            if (!addedAkaokThun && item.dateAhier.ahierMonth.month === 0 && item.dateAhier.date === 1) {\r\n                result.push({ eventType: 'Akaok thun', eventDate: item.dateGregory });\r\n                addedAkaokThun = true;\r\n            }\r\n\r\n            if (!addedRijaNagar && item.dateAhier.ahierMonth.month === 0 && item.dateGregory.getDay() === 4) {\r\n                if (item.dateAwal.awalMonth.month !== AwalMonthEnum.Ramadan) {\r\n                    if (item.dateAhier.date < 7 || (item.dateAhier.date > 14 && item.dateAhier.date < 20)) {\r\n                        result.push({ eventType: 'Rija Nagar', eventDate: item.dateGregory });\r\n                        addedRijaNagar = true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            /*if (!addedKateHamuTanran && item.dateAhier.ahierMonth.month === 5 && item.dateAhier.date === 29) {\r\n                result.push({ eventType: 'Katé palei Hamu Tanran', eventDate: item.dateGregory });\r\n                addedKateHamuTanran = true;\r\n            }*/\r\n\r\n            if (!addedKate && item.dateAhier.ahierMonth.month === 6 && item.dateAhier.date === 1) {\r\n                result.push({ eventType: 'Katé angaok bimong', eventDate: item.dateGregory });\r\n                addedKate = true;\r\n            }\r\n\r\n            /*if (item.dayNumbersOfCurrentAhierMonth === 30) {\r\n                if (item.dateAhier.ahierMonth.month === 8 && item.dateAhier.date === 16) {\r\n                    result.push('Ca-mbur');\r\n                }\r\n            } else {\r\n                if (item.dateAhier.ahierMonth.month === 8 && item.dateAhier.date === 15) {\r\n                    result.push('Ca-mbur');\r\n                }\r\n            }*/\r\n\r\n            if (!addedRamawan && item.dateAwal.awalMonth.month === 8 && item.dateAwal.date === 1) {\r\n                result.push({ eventType: 'Tamâ ricaow Ramâwan', eventDate: item.dateGregory });\r\n                addedRamawan = true;\r\n            }\r\n\r\n            /*if (!addedMukTrun && item.dateAwal.awalMonth.month === 8 && item.dateAwal.date === 16) {\r\n                result.push({ eventType: 'Muk trun', eventDate: item.dateGregory });\r\n                addedMukTrun = true;\r\n            }\r\n\r\n            if (!addedOngTrun && item.dateAwal.awalMonth.month === 8 && item.dateAwal.date === 21) {\r\n                result.push({ eventType: 'Ong trun', eventDate: item.dateGregory });\r\n                addedOngTrun = true;\r\n            }\r\n\r\n            if (!addedTalaihRamawan && item.dateAwal.awalMonth.month === 9 && item.dateAwal.date === 2) {\r\n                result.push({ eventType: 'Talaih aek Ramâwan', eventDate: item.dateGregory });\r\n                addedTalaihRamawan = true;\r\n            }\r\n\r\n            if (!addedIkakWaha && item.dateAwal.awalMonth.month === 11 && item.dateAwal.date === 1) {\r\n                result.push({ eventType: 'Ikak Waha', eventDate: item.dateGregory });\r\n                addedIkakWaha = true;\r\n            }\r\n\r\n            if (!addedTalaihWaha && item.dateAwal.awalMonth.month === 11 && item.dateAwal.date === 11) {\r\n                result.push({ eventType: 'Talaih Waha', eventDate: item.dateGregory });\r\n                addedTalaihWaha = true;\r\n            }\r\n\r\n            if (!addedYuerYang && item.dateAhier.ahierMonth.month === 3 && item.dateGregory.getDay() === 0 && item.dateAhier.date < 7) {\r\n                result.push({ eventType: 'Yuer Yang', eventDate: item.dateGregory });\r\n                addedYuerYang = true;\r\n            }*/\r\n\r\n            // Break loop: just look up in a year later (30 days x 13 months)\r\n            if (item.dateGregory > Helper.addGregoryDays(new Date(), 390)) {\r\n                return;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n}","import { useEffect, useState } from \"react\";\r\nimport { Col, ProgressBar, Row } from \"react-bootstrap\";\r\nimport { EventType, VariantType } from \"../enums/enum\";\r\n\r\nexport interface CountDownBarProps {\r\n    eventType: EventType;\r\n    eventDate: Date;\r\n}\r\n\r\nexport const CountDownBar = (props: CountDownBarProps) => {\r\n    const [percent, setPercent] = useState(100);\r\n    const [days, setDays] = useState(0);\r\n    const [hours, setHours] = useState(0);\r\n    const [minutes, setMinutes] = useState(0);\r\n    const [seconds, setSeconds] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            init();\r\n        }, 1000);\r\n    });\r\n\r\n    function init() {\r\n        if (!props.eventDate) {\r\n            return;\r\n        }\r\n\r\n        const now = new Date().getTime();\r\n        const distance = props.eventDate.getTime() - now;\r\n        const timeOfYear = 365 * 24 * 60 * 60 * 1000;\r\n        const percent = distance / timeOfYear * 100;\r\n        setPercent(percent);\r\n\r\n        // Time calculations for days, hours, minutes and seconds\r\n        const days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n        const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n        const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n        const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n        setDays(days);\r\n        setHours(hours);\r\n        setMinutes(minutes);\r\n        setSeconds(seconds);\r\n    }\r\n\r\n    let dd = props.eventDate.getDate();\r\n    let mm = props.eventDate.getMonth() + 1;\r\n    const yyyy = props.eventDate.getFullYear();\r\n    const ddStr = dd < 10 ? '0' + dd : dd;\r\n    const mmStr = mm < 10 ? '0' + mm : mm;\r\n    const dateStr = ddStr + '/' + mmStr + '/' + yyyy;\r\n\r\n    let variantType: VariantType;\r\n    let displayEventName = '';\r\n    switch (props.eventType) {\r\n        case \"Akaok thun\":\r\n            variantType = 'primary';\r\n            displayEventName = 'Năm mới Cham';\r\n            break;\r\n        case \"Rija Nagar\":\r\n            variantType = 'danger';\r\n            displayEventName = props.eventType;\r\n            break;\r\n        case \"Katé angaok bimong\":\r\n            variantType = 'warning';\r\n            displayEventName = 'Katé';\r\n            break;\r\n        case \"Tamâ ricaow Ramâwan\":\r\n            variantType = 'success';\r\n            displayEventName = 'Ramâwan';\r\n            break;\r\n        default:\r\n            variantType = 'warning';\r\n            displayEventName = props.eventType;\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n                <div style={{ marginBottom: \"0.1rem\" }}>\r\n                    <span style={{ fontWeight: \"bold\" }}>{`${displayEventName}:`}</span>\r\n                    <span>{` ${dateStr}`}</span>\r\n                    <span>{` - Còn: ${days} ngày ${(\"0\" + hours).slice(-2)}h${(\"0\" + minutes).slice(-2)}'${(\"0\" + seconds).slice(-2)}\"`}</span>\r\n                </div>\r\n                <ProgressBar style={{ height: \"0.5rem\", marginBottom: \"5px\" }} variant={variantType.toString()} now={percent} />\r\n            </Col>\r\n        </Row>\r\n    );\r\n}","import { Col, Row } from \"react-bootstrap\";\r\nimport { AwalMonthEnum, displayIkasSarakName } from \"../enums/enum\";\r\nimport { AhierDate, AhierMonth } from \"../model/AhierDate\";\r\nimport { AwalDate, AwalMonth } from \"../model/AwalDate\";\r\nimport Helper from \"../utility/helper\";\r\nimport { SakawiType } from \"./calendar\";\r\n\r\ninterface DayDetailsProps {\r\n    sakawiType: SakawiType;\r\n    dateGregory: Date;\r\n    dateAwal: AwalDate;\r\n    dateAhier: AhierDate;\r\n    currentAhierMonth?: AhierMonth;\r\n    currentAwalMonth?: AwalMonth;\r\n    currentGregoryMonth?: number;\r\n    currentGregoryYear?: number;\r\n    dayNumbersOfCurrentAhierMonth: number;\r\n    dayNumbersOfCurrentAwalMonth: number;\r\n}\r\n\r\nexport const DayDetails = (props: DayDetailsProps) => {\r\n    let opacityValue = 1;\r\n    if (props.sakawiType === \"sakawiAhier\") {\r\n        if (JSON.stringify(props.dateAhier.ahierMonth) !== JSON.stringify(props.currentAhierMonth)) {\r\n            opacityValue = 0.3;\r\n        }\r\n    } else if (props.sakawiType === \"sakawiAwal\") {\r\n        if (JSON.stringify(props.dateAwal.awalMonth) !== JSON.stringify(props.currentAwalMonth)) {\r\n            opacityValue = 0.3;\r\n        }\r\n    } else if (props.sakawiType === \"sakawiGregory\") {\r\n        if (props.dateGregory.getMonth() !== props.currentGregoryMonth\r\n            || props.dateGregory.getFullYear() !== props.currentGregoryYear) {\r\n            opacityValue = 0.3;\r\n        }\r\n    }\r\n\r\n    const tdStyle: React.CSSProperties = {\r\n        opacity: opacityValue,\r\n        backgroundColor: (props.dateGregory.toLocaleDateString() === new Date().toLocaleDateString()) ? '#FFEFBF' : ''\r\n    }\r\n\r\n    const GregoryDateStyle: React.CSSProperties = {\r\n        fontSize: props.sakawiType === \"sakawiGregory\" ? \"1.3rem\" : \"0.8rem\",\r\n        color: \"black\",\r\n        paddingTop: \"0.1rem\",\r\n        paddingBottom: \"0.1rem\",\r\n        textAlign: \"right\"\r\n    }\r\n\r\n    const ahierDateStyle: React.CSSProperties = {\r\n        fontSize: props.sakawiType === \"sakawiAhier\" ? \"1.5rem\" : \"1rem\",\r\n        color: \"#F15A25\",\r\n        paddingTop: \"2rem\",\r\n        paddingBottom: \"0.1rem\",\r\n        textAlign: \"right\"\r\n    }\r\n\r\n    const awalDateStyle: React.CSSProperties = {\r\n        flexDirection: \"row\",\r\n        fontSize: props.sakawiType === \"sakawiAwal\" ? \"1.5rem\" : \"1rem\",\r\n        color: \"#007A3D\",\r\n        paddingTop: \"2rem\",\r\n        paddingBottom: \"0.3rem\",\r\n        paddingRight: \"0.3rem\",\r\n        alignSelf: \"end\"\r\n    }\r\n\r\n    const eventStyle: React.CSSProperties = {\r\n        display: \"block\",\r\n        fontSize: \"0.8rem\",\r\n        color: \"white\",\r\n        backgroundColor: \"#3788d8\",\r\n        paddingLeft: \"0.3rem\",\r\n        textAlign: \"left\",\r\n        marginBottom: \"0.1rem\",\r\n    }\r\n\r\n    function displayGregoryDate(sakawiType: SakawiType, dateAhier: AhierDate, dateAwal: AwalDate, dateGregory: Date) {\r\n        const monthGregogy = dateGregory.getMonth() + 1;\r\n\r\n        if (dateGregory.getDate() === 1 ||\r\n            (sakawiType === \"sakawiAwal\" && dateAwal.date === 1) ||\r\n            (sakawiType === \"sakawiAhier\" && dateAhier.date === 1)) {\r\n            return dateGregory.getDate() + \".\" + monthGregogy;\r\n        } else {\r\n            return dateGregory.getDate();\r\n        }\r\n    }\r\n\r\n    function displayAhierDate(dateAhier: AhierDate) {\r\n        const bingun = 'ꩃ';\r\n        const klem = 'ꩌ';\r\n\r\n        if (props.dayNumbersOfCurrentAhierMonth === 30) {\r\n            if (dateAhier.date <= 15) {\r\n                return Helper.convertToChamDigitUnicode(dateAhier.date) + bingun;\r\n            } else {\r\n                return Helper.convertToChamDigitUnicode(dateAhier.date - 15) + klem;\r\n            }\r\n        } else {\r\n            if (dateAhier.date <= 14) {\r\n                if (dateAhier.date <= 5) {\r\n                    return Helper.convertToChamDigitUnicode(dateAhier.date) + bingun;\r\n                } else {\r\n                    return Helper.convertToChamDigitUnicode(dateAhier.date + 1) + bingun;\r\n                }\r\n            } else {\r\n                return Helper.convertToChamDigitUnicode(dateAhier.date - 14) + klem;\r\n            }\r\n        }\r\n    };\r\n\r\n    function displayAwalDate(dateAwal: AwalDate) {\r\n        const monthAwal = dateAwal.awalMonth.month + 1;\r\n        const bingun = 'ꩃ';\r\n        const klem = 'ꩌ';\r\n\r\n        if (dateAwal.date === 1) {\r\n            return (\r\n                <>\r\n                    <label style={{ margin: 0 }} >{Helper.convertToChamDigitUnicode(dateAwal.date) + bingun + \".\" + Helper.convertToChamDigitUnicode(monthAwal) + \".\"}</label>\r\n                    <label style={{ margin: 0 }} className='ikasSarak-month-cell'>{displayIkasSarakName(dateAwal.awalMonth.year.ikasSarak)}</label>\r\n                </>\r\n            )\r\n        } else {\r\n            if (props.dayNumbersOfCurrentAwalMonth === 30) {\r\n                if (dateAwal.date <= 15) {\r\n                    return Helper.convertToChamDigitUnicode(dateAwal.date) + bingun;\r\n                } else {\r\n                    return Helper.convertToChamDigitUnicode(dateAwal.date - 15) + klem;\r\n                }\r\n            } else {\r\n                if (dateAwal.date <= 14) {\r\n                    return Helper.convertToChamDigitUnicode(dateAwal.date) + bingun;\r\n                } else {\r\n                    return Helper.convertToChamDigitUnicode(dateAwal.date - 14) + klem;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function getEvents() {\r\n        let result: string[] = [];\r\n\r\n        if (props.dateAhier.ahierMonth.month === 0 && props.dateAhier.date === 1) {\r\n            result.push('Akaok thun');\r\n        }\r\n\r\n        if (props.dateAhier.ahierMonth.month === 0 && props.dateGregory.getDay() === 4) {\r\n            if (props.dateAwal.awalMonth.month !== AwalMonthEnum.Ramadan) {\r\n                if (props.dateAhier.date < 7 || (props.dateAhier.date > 14 && props.dateAhier.date < 20)) {\r\n                    result.push('Rija Nagar');\r\n                }\r\n            }\r\n        }\r\n\r\n        if (props.dateAhier.ahierMonth.month === 5 && props.dateAhier.date === 29) {\r\n            result.push('Katé palei Hamu Tanran');\r\n        }\r\n\r\n        if (props.dateAhier.ahierMonth.month === 6 && props.dateAhier.date === 1) {\r\n            result.push('Katé angaok bimong');\r\n        }\r\n\r\n        if (props.dayNumbersOfCurrentAhierMonth === 30) {\r\n            if (props.dateAhier.ahierMonth.month === 8 && props.dateAhier.date === 16) {\r\n                result.push('Ca-mbur');\r\n            }\r\n        } else {\r\n            if (props.dateAhier.ahierMonth.month === 8 && props.dateAhier.date === 15) {\r\n                result.push('Ca-mbur');\r\n            }\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month === 8 && props.dateAwal.date === 1) {\r\n            result.push('Tamâ ricaow Ramâwan');\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month === 8 && props.dateAwal.date === 16) {\r\n            result.push('Muk trun');\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month === 8 && props.dateAwal.date === 21) {\r\n            result.push('Ong trun');\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month === 9 && props.dateAwal.date === 2) {\r\n            result.push('Talaih aek Ramâwan');\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month === 11 && props.dateAwal.date === 1) {\r\n            result.push('Ikak Waha');\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month === 11 && props.dateAwal.date === 11) {\r\n            result.push('Talaih Waha');\r\n        }\r\n\r\n        if (props.dateAhier.ahierMonth.month === 3 && props.dateGregory.getDay() === 0 && props.dateAhier.date < 7) {\r\n            result.push('Yuer Yang');\r\n        }\r\n\r\n        // TODO: \r\n        // if (props.dateAhier.ahierMonth.month === 10 && props.dateGregory.getDay() === 2 && props.dateAhier.date <= 15) {\r\n        //     result.push('Peh ba-mbeng Yang');\r\n        // }\r\n\r\n        if ((props.dateAhier.ahierMonth.month === 2\r\n            || props.dateAhier.ahierMonth.month === 5\r\n            || props.dateAhier.ahierMonth.month === 7\r\n            || props.dateAhier.ahierMonth.month === 9\r\n            || props.dateAhier.ahierMonth.month === 10) && props.dateGregory.getDay() === 3) {\r\n\r\n            if (props.dayNumbersOfCurrentAhierMonth === 30) {\r\n                if (props.dateAhier.date > 15 && (props.dateAhier.date - 15) % 2 === 0) {\r\n                    result.push('♥️ Lakhah');\r\n                }\r\n            } else {\r\n                if (props.dateAhier.date > 14 && (props.dateAhier.date - 14) % 2 === 0) {\r\n                    result.push('♥️ Lakhah');\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    return (\r\n        <td style={tdStyle}>\r\n            <Row>\r\n                <Col md={6}></Col>\r\n                <Col style={GregoryDateStyle} md={6}>\r\n                    {displayGregoryDate(props.sakawiType, props.dateAhier, props.dateAwal, props.dateGregory)}\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={12} style={{ minHeight: \"10px\", maxHeight: \"25px\" }}>\r\n                    {getEvents().map((item, index) => { return <p key={index} style={eventStyle}>{item}</p> })}\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col style={awalDateStyle} md={6}>\r\n                    {/* {props.dateAwal.date}.{props.dateAwal.awalMonth.month + 1}-{IkasSarakEnum[props.dateAwal.awalMonth.year.ikasSarak]} */}\r\n                    {displayAwalDate(props.dateAwal)}\r\n                </Col>\r\n                <Col style={ahierDateStyle} md={6}>\r\n                    {/* {props.dateAhier.date}.{props.dateAhier.ahierMonth.month + 1}.{NasakEnum[props.dateAhier.ahierMonth.year.nasak]}.{IkasSarakEnum[props.dateAhier.ahierMonth.year.ikasSarak]} */}\r\n                    {displayAhierDate(props.dateAhier)}\r\n                </Col>\r\n            </Row>\r\n        </td>\r\n    );\r\n}","import { Button, ButtonGroup, ButtonToolbar, Col } from \"react-bootstrap\";\r\nimport { AhierMonthEnum, AwalMonthEnum, displayIkasSarakName, displayMonthName, displayNasakName, IkasSarakEnum, NasakEnum } from \"../enums/enum\";\r\nimport { AhierMonth } from \"../model/AhierDate\";\r\nimport { AwalMonth } from \"../model/AwalDate\";\r\nimport Helper from \"../utility/helper\";\r\nimport { SakawiType } from \"./calendar\";\r\n\r\ninterface MonthNavigationProps {\r\n    sakawiType: SakawiType;\r\n    currentAhierMonth?: AhierMonth;\r\n    currentAwalMonth?: AwalMonth;\r\n    currentGregoryMonth?: number;\r\n    currentGregoryYear?: number;\r\n    onSelectSakawiType: (type: SakawiType) => void\r\n    onClickToday: () => void;\r\n    onClickPreviousMonth: () => void;\r\n    onClickNextMonth: () => void;\r\n}\r\n\r\nexport const MonthNavigation = (props: MonthNavigationProps) => {\r\n    const currentGregoryMonth = props.currentGregoryMonth ? props.currentGregoryMonth + 1 : 1;\r\n\r\n    return (\r\n        <>\r\n            <Col md={4}>\r\n                <ButtonToolbar aria-label=\"Toolbar with button groups\" style={{ justifyContent: \"flex-start\" }}>\r\n                    <ButtonGroup aria-label=\"Type of calendar\">\r\n                        <Button variant=\"secondary\" onClick={() => props.onSelectSakawiType('sakawiAhier')}>Lịch Chăm</Button>\r\n                        <Button variant=\"secondary\" onClick={() => props.onSelectSakawiType('sakawiAwal')}>Lịch Arab</Button>\r\n                        <Button variant=\"secondary\" onClick={() => props.onSelectSakawiType('sakawiGregory')}>Dương lịch</Button>\r\n                    </ButtonGroup>\r\n                </ButtonToolbar>\r\n            </Col>\r\n            <Col md={5} style={{ textAlign: \"center\" }}>\r\n                {props.sakawiType === 'sakawiAhier' && props.currentAhierMonth &&\r\n                    <>\r\n                        <div>\r\n                            <label className='bilan-title'>{displayMonthName(props.currentAhierMonth.month)}</label>\r\n                            {' - '}<label className='bilan-title'>{displayNasakName(props.currentAhierMonth.year.nasak)}</label>\r\n                            {' - '}<label className='ikasSarak-title'>{displayIkasSarakName(props.currentAhierMonth.year.ikasSarak)}</label>\r\n                            {' - '}<label className='bilan-title'>{Helper.convertToChamDigitUnicode(props.currentAhierMonth.year.yearNumber ?? 0)}</label>\r\n                        </div>\r\n                        <h5>\r\n                            {AhierMonthEnum[props.currentAhierMonth.month]} {`(${(props.currentAhierMonth.month + 1)})`}\r\n                            {' - '}{NasakEnum[props.currentAhierMonth.year.nasak]} {IkasSarakEnum[props.currentAhierMonth.year.ikasSarak]}\r\n                            {' - '}{props.currentAhierMonth.year.yearNumber}\r\n                        </h5>\r\n                    </>\r\n                }\r\n                {props.sakawiType === 'sakawiAwal' && props.currentAwalMonth &&\r\n                    <h2>\r\n                        {AwalMonthEnum[props.currentAwalMonth.month]} {`(${(props.currentAwalMonth.month + 1)})`}\r\n                        {' - '}{IkasSarakEnum[props.currentAwalMonth.year.ikasSarak]}\r\n                        {' - '}{props.currentAwalMonth.year.yearNumber}\r\n                    </h2>\r\n                }\r\n                {props.sakawiType === 'sakawiGregory' &&\r\n                    <h2>{`Tháng ${currentGregoryMonth} - Năm ${props.currentGregoryYear}`}</h2>\r\n                }\r\n            </Col>\r\n            <Col md={3}>\r\n                <ButtonToolbar aria-label=\"Toolbar with button groups\" style={{ justifyContent: \"flex-end\" }}>\r\n                    <ButtonGroup aria-label=\"Third group\" style={{ marginRight: \".75em\" }}>\r\n                        <Button variant=\"secondary\" onClick={props.onClickToday}>Hôm nay</Button>\r\n                    </ButtonGroup>\r\n                    <ButtonGroup aria-label=\"Navigate months\">\r\n                        <Button variant=\"secondary\" className=\"fa fa-chevron-left\" onClick={props.onClickPreviousMonth} />\r\n                        <Button variant=\"secondary\" className=\"fa fa-chevron-right\" onClick={props.onClickNextMonth} />\r\n                    </ButtonGroup>\r\n                </ButtonToolbar>\r\n            </Col>\r\n        </>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { Col, Container, Row, Table } from \"react-bootstrap\";\r\nimport { FullCalendarType } from \"../model/FullCalendarType\";\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport Helper from \"../utility/helper\";\r\nimport { SakawiType } from \"./calendar\";\r\nimport { DayDetails } from \"./dayDetails\";\r\nimport { MonthNavigation } from \"./monthNavigation\";\r\n\r\ninterface MonthAhierProps {\r\n    matrixSakawi: MatrixCalendarType[],\r\n    fullSakawi: FullCalendarType[],\r\n    currentAhierMonthMatrix: MatrixCalendarType,\r\n    onSelectSakawiType: (type: SakawiType) => void\r\n}\r\n\r\nexport const MonthAhier = (props: MonthAhierProps) => {\r\n    const [datesOfCurrentMonth, setDatesOfCurrentMonth] = useState<FullCalendarType[]>([]);\r\n    const [currentAhierMonthMatrix, setCurrentAhierMonthMatrix] = useState(props.currentAhierMonthMatrix);\r\n\r\n    React.useEffect(() => {\r\n        function init() {\r\n            // Get date list will be display at current month\r\n            const firstDayOfCurrentAhierMonthIndex = props.fullSakawi.findIndex(x => x.dateAhier.date === 1 && JSON.stringify(x.dateAhier.ahierMonth) === JSON.stringify(currentAhierMonthMatrix.ahierMonth));\r\n            const firstIndex = firstDayOfCurrentAhierMonthIndex - currentAhierMonthMatrix.firstDayOfAhierMonth;\r\n            const lastIndex = firstIndex + 41; // 42 - 1 cells\r\n            const datesOfCurrentMonth = props.fullSakawi.filter((item, index) => index >= firstIndex && index <= lastIndex);\r\n            setDatesOfCurrentMonth(datesOfCurrentMonth);\r\n        }\r\n\r\n        init();\r\n    }, [currentAhierMonthMatrix.ahierMonth, currentAhierMonthMatrix.firstDayOfAhierMonth, props.fullSakawi]);\r\n\r\n    function handleGoToToday() {\r\n        setCurrentAhierMonthMatrix(props.currentAhierMonthMatrix);\r\n    }\r\n\r\n    function handleGoToPreviousMonth() {\r\n        const index = props.matrixSakawi.findIndex(x => JSON.stringify(x) === JSON.stringify(currentAhierMonthMatrix));\r\n        setCurrentAhierMonthMatrix(props.matrixSakawi[index - 1]);\r\n    }\r\n\r\n    function handleGoToNextMonth() {\r\n        const index = props.matrixSakawi.findIndex(x => JSON.stringify(x) === JSON.stringify(currentAhierMonthMatrix));\r\n        setCurrentAhierMonthMatrix(props.matrixSakawi[index + 1]);\r\n    }\r\n\r\n    // draw Calendar Table\r\n    let cells: JSX.Element[] = [];\r\n    let rows: JSX.Element[] = [];\r\n\r\n    datesOfCurrentMonth.forEach((item, index) => {\r\n        const dayNumbersOfCurrentAhierMonth = Helper.getActualDayNumbersOfAhierMonth(props.matrixSakawi, item.dateAhier.ahierMonth);\r\n        const dayNumbersOfCurrentAwalMonth = Helper.getDayNumbersOfAwalMonth(item.dateAwal.awalMonth.year, item.dateAwal.awalMonth.month);\r\n\r\n        cells.push(\r\n            <DayDetails\r\n                sakawiType=\"sakawiAhier\"\r\n                key={`sakawiAhier-cell-${index}`}\r\n                dateAhier={item.dateAhier}\r\n                dateAwal={item.dateAwal}\r\n                dateGregory={item.dateGregory}\r\n                currentAhierMonth={currentAhierMonthMatrix.ahierMonth}\r\n                currentAwalMonth={currentAhierMonthMatrix.awalMonth}\r\n                dayNumbersOfCurrentAhierMonth={dayNumbersOfCurrentAhierMonth}\r\n                dayNumbersOfCurrentAwalMonth={dayNumbersOfCurrentAwalMonth}\r\n            />\r\n        );\r\n\r\n        if ((index + 1) % 7 === 0) {\r\n            rows.push(<tr key={`sakawiAhier-row-${index}`}>{cells}</tr>);\r\n            cells = [];\r\n        }\r\n    })\r\n\r\n    const dayNames = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n    const tableStyle: React.CSSProperties = {\r\n        height: \"400px\",\r\n        tableLayout: \"fixed\"\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <MonthNavigation\r\n                    sakawiType=\"sakawiAhier\"\r\n                    currentAhierMonth={currentAhierMonthMatrix.ahierMonth}\r\n                    onClickToday={handleGoToToday}\r\n                    onClickPreviousMonth={handleGoToPreviousMonth}\r\n                    onClickNextMonth={handleGoToNextMonth}\r\n                    onSelectSakawiType={type => props.onSelectSakawiType(type)}\r\n                />\r\n            </Row>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Table bordered hover style={tableStyle}>\r\n                        <thead>\r\n                            <tr>\r\n                                {dayNames.map((d, index) =>\r\n                                    <th style={{ padding: \"2px\", textAlign: \"center\" }} key={index}>{d}</th>\r\n                                )}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {rows}\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Col, Container, Row, Table } from \"react-bootstrap\";\r\nimport { FullCalendarType } from \"../model/FullCalendarType\";\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport Helper from '../utility/helper';\r\nimport { SakawiType } from \"./calendar\";\r\nimport { DayDetails } from \"./dayDetails\";\r\nimport { MonthNavigation } from \"./monthNavigation\";\r\n\r\ninterface MonthAwalProps {\r\n    matrixSakawi: MatrixCalendarType[],\r\n    fullSakawi: FullCalendarType[],\r\n    currentAwalMonthMatrix: MatrixCalendarType,\r\n    onSelectSakawiType: (type: SakawiType) => void\r\n}\r\n\r\nexport const MonthAwal = (props: MonthAwalProps) => {\r\n    const [datesOfCurrentMonth, setDatesOfCurrentMonth] = useState<FullCalendarType[]>([]);\r\n    const [currentAwalMonthMatrix, setCurrentAwalMonthMatrix] = useState(props.currentAwalMonthMatrix);\r\n\r\n    React.useEffect(() => {\r\n        function init() {\r\n            // Get date list will be display at current month\r\n            const firstDayOfCurrentAwalMonthIndex = props.fullSakawi.findIndex(x => x.dateAwal.date === 1 && JSON.stringify(x.dateAwal.awalMonth) === JSON.stringify(currentAwalMonthMatrix.awalMonth));\r\n            const firstIndex = firstDayOfCurrentAwalMonthIndex - currentAwalMonthMatrix.firstDayOfAwalMonth;\r\n            const lastIndex = firstIndex + 41; // 42 - 1 cells\r\n            const datesOfCurrentMonth = props.fullSakawi.filter((item, index) => index >= firstIndex && index <= lastIndex);\r\n            setDatesOfCurrentMonth(datesOfCurrentMonth);\r\n        }\r\n\r\n        init();\r\n    }, [currentAwalMonthMatrix, props.currentAwalMonthMatrix, props.fullSakawi, props.matrixSakawi]);\r\n\r\n\r\n    function handleGoToToday() {\r\n        setCurrentAwalMonthMatrix(props.currentAwalMonthMatrix);\r\n    }\r\n\r\n    function handleGoToPreviousMonth() {\r\n        const index = props.matrixSakawi.findIndex(x => JSON.stringify(x) === JSON.stringify(currentAwalMonthMatrix));\r\n        setCurrentAwalMonthMatrix(props.matrixSakawi[index - 1]);\r\n    }\r\n\r\n    function handleGoToNextMonth() {\r\n        const index = props.matrixSakawi.findIndex(x => JSON.stringify(x) === JSON.stringify(currentAwalMonthMatrix));\r\n        setCurrentAwalMonthMatrix(props.matrixSakawi[index + 1]);\r\n    }\r\n\r\n    // draw Calendar Table\r\n    let cells: JSX.Element[] = [];\r\n    let rows: JSX.Element[] = [];\r\n\r\n    datesOfCurrentMonth.forEach((item, index) => {\r\n        const dayNumbersOfCurrentAhierMonth = Helper.getActualDayNumbersOfAhierMonth(props.matrixSakawi, item.dateAhier.ahierMonth);\r\n        const dayNumbersOfCurrentAwalMonth = Helper.getDayNumbersOfAwalMonth(item.dateAwal.awalMonth.year, item.dateAwal.awalMonth.month);\r\n\r\n        cells.push(\r\n            <DayDetails\r\n                sakawiType=\"sakawiAwal\"\r\n                key={`sakawiAwal-cell-${index}`}\r\n                dateAhier={item.dateAhier}\r\n                dateAwal={item.dateAwal}\r\n                dateGregory={item.dateGregory}\r\n                currentAhierMonth={currentAwalMonthMatrix.ahierMonth}\r\n                currentAwalMonth={currentAwalMonthMatrix.awalMonth}\r\n                dayNumbersOfCurrentAhierMonth={dayNumbersOfCurrentAhierMonth}\r\n                dayNumbersOfCurrentAwalMonth={dayNumbersOfCurrentAwalMonth}\r\n            />\r\n        );\r\n\r\n        if ((index + 1) % 7 === 0) {\r\n            rows.push(<tr key={`sakawiAwal-row-${index}`}>{cells}</tr>);\r\n            cells = [];\r\n        }\r\n    })\r\n\r\n    const dayNames = [\"Adit\", \"Thom\", \"Angar\", \"But\", \"Jip\", \"Suk\", \"Sanacar\"]\r\n    const tableStyle: React.CSSProperties = {\r\n        height: \"400px\",\r\n        tableLayout: \"fixed\"\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <MonthNavigation\r\n                    sakawiType=\"sakawiAwal\"\r\n                    currentAwalMonth={currentAwalMonthMatrix.awalMonth}\r\n                    onClickToday={handleGoToToday}\r\n                    onClickPreviousMonth={handleGoToPreviousMonth}\r\n                    onClickNextMonth={handleGoToNextMonth}\r\n                    onSelectSakawiType={type => props.onSelectSakawiType(type)}\r\n                />\r\n            </Row>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Table bordered hover style={tableStyle}>\r\n                        <thead>\r\n                            <tr>\r\n                                {dayNames.map((d, index) =>\r\n                                    <th style={{ padding: \"2px\", textAlign: \"center\" }} key={index}>{d}</th>\r\n                                )}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {rows}\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Col, Container, Row, Table } from \"react-bootstrap\";\r\nimport { FullCalendarType } from \"../model/FullCalendarType\";\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport Helper from '../utility/helper';\r\nimport { SakawiType } from \"./calendar\";\r\nimport { DayDetails } from \"./dayDetails\";\r\nimport { MonthNavigation } from \"./monthNavigation\";\r\n\r\ninterface MonthGregoryProps {\r\n    matrixSakawi: MatrixCalendarType[],\r\n    fullSakawi: FullCalendarType[],\r\n    currentGregoryMonth: number,\r\n    currentGregoryYear: number,\r\n    onSelectSakawiType: (type: SakawiType) => void\r\n}\r\n\r\nexport const MonthGregory = (props: MonthGregoryProps) => {\r\n    const [datesOfCurrentMonth, setDatesOfCurrentMonth] = useState<FullCalendarType[]>([]);\r\n    const [currentGregoryMonth, setCurrentGregoryMonth] = useState(props.currentGregoryMonth);\r\n    const [currentGregoryYear, setCurrentGregoryYear] = useState(props.currentGregoryYear);\r\n\r\n    React.useEffect(() => {\r\n        function init() {\r\n            // Gregory Date\r\n            const firstGregoryDate = new Date(currentGregoryYear, currentGregoryMonth, 1);\r\n\r\n            // Get date list will be display at current month\r\n            const firstDayOfCurrentGregoryMonthIndex = props.fullSakawi.findIndex(x =>\r\n                x.dateGregory.getDate() === 1\r\n                && x.dateGregory.getMonth() === currentGregoryMonth\r\n                && x.dateGregory.getFullYear() === currentGregoryYear);\r\n            const firstIndex = firstDayOfCurrentGregoryMonthIndex - firstGregoryDate.getDay();\r\n            const lastIndex = firstIndex + 41; // 42 - 1 cells\r\n            const datesOfCurrentMonth = props.fullSakawi.filter((item, index) => index >= firstIndex && index <= lastIndex);\r\n            setDatesOfCurrentMonth(datesOfCurrentMonth);\r\n        }\r\n\r\n        init();\r\n    }, [currentGregoryMonth, currentGregoryYear, props.fullSakawi]);\r\n\r\n    function handleGoToToday() {\r\n        setCurrentGregoryMonth(props.currentGregoryMonth);\r\n        setCurrentGregoryYear(props.currentGregoryYear);\r\n    }\r\n\r\n    function handleGoToPreviousMonth() {\r\n        if (currentGregoryMonth === 0) {\r\n            setCurrentGregoryMonth(11);\r\n            setCurrentGregoryYear(currentGregoryYear - 1);\r\n        } else {\r\n            setCurrentGregoryMonth(currentGregoryMonth - 1);\r\n            setCurrentGregoryYear(currentGregoryYear);\r\n        }\r\n    }\r\n\r\n    function handleGoToNextMonth() {\r\n        if (currentGregoryMonth === 11) {\r\n            setCurrentGregoryMonth(0);\r\n            setCurrentGregoryYear(currentGregoryYear + 1);\r\n        } else {\r\n            setCurrentGregoryMonth(currentGregoryMonth + 1);\r\n            setCurrentGregoryYear(currentGregoryYear);\r\n        }\r\n    }\r\n\r\n    // draw Calendar Table\r\n    let cells: JSX.Element[] = [];\r\n    let rows: JSX.Element[] = [];\r\n\r\n    datesOfCurrentMonth.forEach((item, index) => {\r\n        const dayNumbersOfCurrentAhierMonth = Helper.getActualDayNumbersOfAhierMonth(props.matrixSakawi, item.dateAhier.ahierMonth);\r\n        const dayNumbersOfCurrentAwalMonth = Helper.getDayNumbersOfAwalMonth(item.dateAwal.awalMonth.year, item.dateAwal.awalMonth.month);\r\n\r\n        cells.push(\r\n            <DayDetails\r\n                sakawiType=\"sakawiGregory\"\r\n                key={`sakawiGregory-cell-${index}`}\r\n                dateAhier={item.dateAhier}\r\n                dateAwal={item.dateAwal}\r\n                dateGregory={item.dateGregory}\r\n                currentGregoryMonth={currentGregoryMonth}\r\n                currentGregoryYear={currentGregoryYear}\r\n                dayNumbersOfCurrentAhierMonth={dayNumbersOfCurrentAhierMonth}\r\n                dayNumbersOfCurrentAwalMonth={dayNumbersOfCurrentAwalMonth}\r\n            />\r\n        );\r\n\r\n        if ((index + 1) % 7 === 0) {\r\n            rows.push(<tr key={`sakawiGregory-row-${index}`}>{cells}</tr>);\r\n            cells = [];\r\n        }\r\n    })\r\n\r\n    const dayNames = [\"CN\", \"Hai\", \"Ba\", \"Tư\", \"Năm\", \"Sáu\", \"Bảy\"];\r\n    const tableStyle: React.CSSProperties = {\r\n        height: \"400px\",\r\n        tableLayout: \"fixed\"\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <MonthNavigation\r\n                    sakawiType=\"sakawiGregory\"\r\n                    currentGregoryMonth={currentGregoryMonth}\r\n                    currentGregoryYear={currentGregoryYear}\r\n                    onClickToday={handleGoToToday}\r\n                    onClickPreviousMonth={handleGoToPreviousMonth}\r\n                    onClickNextMonth={handleGoToNextMonth}\r\n                    onSelectSakawiType={type => props.onSelectSakawiType(type)}\r\n                />\r\n            </Row>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Table bordered hover style={tableStyle}>\r\n                        <thead>\r\n                            <tr>\r\n                                {dayNames.map((d, index) =>\r\n                                    <th style={{ padding: \"2px\", textAlign: \"center\" }} key={index}>{d}</th>\r\n                                )}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {rows}\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Alert, Col, Row } from \"react-bootstrap\";\r\nimport { AhierMonthEnum, GuecTypeEnum, GuenTypeEnum, IkasSarakEnum, NasakEnum } from \"../enums/enum\";\r\nimport { AhierMonth } from \"../model/AhierDate\";\r\nimport { AwalMonth } from \"../model/AwalDate\";\r\nimport { FullCalendarType } from \"../model/FullCalendarType\";\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport Helper from \"../utility/helper\";\r\nimport { CountDownBar, CountDownBarProps } from \"./countDownBar\";\r\nimport { MonthAhier } from \"./monthAhier\";\r\nimport { MonthAwal } from \"./monthAwal\";\r\nimport { MonthGregory } from \"./monthGregory\";\r\n\r\nexport declare type SakawiType = 'sakawiAwal' | 'sakawiAhier' | 'sakawiGregory';\r\n\r\nexport const Calendar = () => {\r\n    const initialAhierMonth: AhierMonth = { month: AhierMonthEnum.BilanSa, year: { nasak: NasakEnum.Pabuei, ikasSarak: IkasSarakEnum.JimLuic, yearNumber: 2019 } };\r\n    const initialAwalMonth: AwalMonth = { month: 0, year: { ikasSarak: 0, yearNumber: 1400 } };\r\n    const initialGregoryDate: Date = new Date();\r\n\r\n    const initialMatrixCalendarType: MatrixCalendarType = {\r\n        ahierMonth: initialAhierMonth,\r\n        dayNumbersOfAhierMonth: 0,\r\n        firstDayOfAhierMonth: 0,\r\n        hasGuen: false,\r\n        typeOfGuen: GuenTypeEnum.None,\r\n        hasGuec: false,\r\n        typeOfGuec: GuecTypeEnum.None,\r\n        dateOfGregoryCalendar: initialGregoryDate,\r\n        awalMonth: initialAwalMonth,\r\n        dayNumbersOfAwalMonth: 0,\r\n        firstDayOfAwalMonth: 0\r\n    }\r\n\r\n    const [showWarning, setShowWarning] = useState(true);\r\n    const [matrixSakawi, setMatrixSakawi] = useState<MatrixCalendarType[]>([]);\r\n    const [fullSakawi, setFullSakawi] = useState<FullCalendarType[]>([]);\r\n    const [currentAhierMonth, setCurrentAhierMonth] = useState<MatrixCalendarType>(initialMatrixCalendarType);\r\n    const [currentAwalMonth, setCurrentAwalMonth] = useState<MatrixCalendarType>(initialMatrixCalendarType);\r\n    const [currentGregoryMonth] = useState(new Date().getMonth());\r\n    const [currentGregoryYear] = useState(new Date().getFullYear());\r\n    const [sakawiType, setSakawiType] = useState<SakawiType>('sakawiAhier');\r\n    const [nextEvents, setNextEvents] = useState<CountDownBarProps[]>([]);\r\n\r\n    React.useEffect(() => {\r\n        function init() {\r\n            // Build matrix Calendar\r\n            let matrix = Helper.buildMatrixCalendar(2046);\r\n            //let matrix = Helper.buildMatrixCalendar(2023);\r\n            setMatrixSakawi(matrix.matrixCalendar);\r\n            //console.log('matrixCalendar', JSON.stringify(matrix.matrixCalendar));\r\n            setFullSakawi(matrix.fullCalendar);\r\n            //console.log('fullCalendar', JSON.stringify(matrix.fullCalendar));\r\n\r\n            //TO-TEST\r\n            /*const addedAwalMonth = Helper.addAwalMonths({ month: AwalMonthEnum.Julhiijaah, year: { ikasSarak: IkasSarakEnum.Dal, yearNumber: 1443 } }, 1);\r\n            console.log('addedAwalMonth', JSON.stringify(addedAwalMonth));*/\r\n\r\n            /*const firstDateOfAwalMonth: AwalDate = { date: 1, awalMonth: { month: AwalMonthEnum.Julhiijaah, year: { ikasSarak: IkasSarakEnum.Dal, yearNumber: 1443 } } };\r\n            const addedAwalDate = Helper.addAwalDays(firstDateOfAwalMonth, 27);\r\n            console.log('fullCalfirstDateOfAwalMonthendar', JSON.stringify(firstDateOfAwalMonth));\r\n            console.log('addedAwalDate', JSON.stringify(addedAwalDate));*/\r\n\r\n            // Set current matrix item \r\n            const currentAhierMonth = matrix.matrixCalendar.filter(m =>\r\n                Helper.addGregoryDays(m.dateOfGregoryCalendar, m.dayNumbersOfAhierMonth) > new Date())[0];\r\n            if (currentAhierMonth) {\r\n                setCurrentAhierMonth(currentAhierMonth);\r\n            }\r\n\r\n            const currentAwalMonth = matrix.matrixCalendar.filter(m =>\r\n                Helper.addGregoryDays(m.dateOfGregoryCalendar, m.dayNumbersOfAwalMonth) > new Date())[0];\r\n            if (currentAwalMonth) {\r\n                setCurrentAwalMonth(currentAwalMonth);\r\n            }\r\n\r\n            const nextEvents = Helper.getNextEvents(matrix.fullCalendar);\r\n            setNextEvents(nextEvents);\r\n        }\r\n\r\n        init();\r\n    }, [sakawiType]);\r\n\r\n    function onSelectSakawiType(type: SakawiType) {\r\n        setSakawiType(type);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {showWarning &&\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <Alert variant='info' onClose={() => setShowWarning(false)} dismissible>\r\n                            <Alert.Heading>Lưu ý!</Alert.Heading>\r\n                            - Ứng dụng đang trong quá trình phát triển nên không tránh khỏi những thiếu sót, rất mong nhận được nhiều góp ý để sản phẩm được hoàn thiện hơn.\r\n                            <br />- Ứng dụng này chỉ mang tính chất tham khảo, Sakawi chính thức được Hội đồng Chức sắc phát hành từng năm.\r\n                        </Alert>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            <Row>\r\n                <Col md={12}>\r\n                    {nextEvents.map((item) =>\r\n                        <CountDownBar eventType={item.eventType} eventDate={item.eventDate} />\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n            {\r\n                matrixSakawi.length > 0 &&\r\n                <Row>\r\n                    {sakawiType === 'sakawiGregory' &&\r\n                        <MonthGregory\r\n                            matrixSakawi={matrixSakawi}\r\n                            fullSakawi={fullSakawi}\r\n                            currentGregoryMonth={currentGregoryMonth}\r\n                            currentGregoryYear={currentGregoryYear}\r\n                            onSelectSakawiType={onSelectSakawiType}\r\n                        />\r\n                    }\r\n                    {sakawiType === 'sakawiAwal' &&\r\n                        <MonthAwal\r\n                            matrixSakawi={matrixSakawi}\r\n                            fullSakawi={fullSakawi}\r\n                            currentAwalMonthMatrix={currentAwalMonth}\r\n                            onSelectSakawiType={onSelectSakawiType}\r\n                        />\r\n                    }\r\n                    {sakawiType === 'sakawiAhier' &&\r\n                        <MonthAhier\r\n                            matrixSakawi={matrixSakawi}\r\n                            fullSakawi={fullSakawi}\r\n                            currentAhierMonthMatrix={currentAhierMonth}\r\n                            onSelectSakawiType={onSelectSakawiType}\r\n                        />\r\n                    }\r\n                </Row>\r\n            }\r\n        </>\r\n    );\r\n}","import { Card, Col, Container, ListGroup, Nav, Navbar, Row } from \"react-bootstrap\";\r\n\r\ninterface LayoutProps {\r\n    children: JSX.Element;\r\n}\r\n\r\nconst footerStyle: React.CSSProperties = {\r\n    background: \"#20232a\",\r\n    color: \"white\",\r\n    padding: \"15px\",\r\n    textAlign: \"center\",\r\n    justifyContent: \"center\"\r\n}\r\n\r\nexport const Layout = (props: LayoutProps) => {\r\n    return (\r\n        <Container fluid>\r\n            {/* Header */}\r\n            <Row>\r\n                <Col style={{ paddingRight: 0, paddingLeft: 0 }}>\r\n                    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n                        <Navbar.Brand href=\"#home\"><label className=\"logo\">꩜</label><label className=\"branding-text\">SAKAWI CHAM</label></Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                            <Nav className=\"mr-auto my-2 my-lg-0\"\r\n                                style={{ maxHeight: '100px' }}\r\n                                navbarScroll>\r\n                                <Nav.Link href=\"#\">Trang chủ</Nav.Link>\r\n                                <Nav.Link href=\"#\">Tiện ích</Nav.Link>\r\n                                <Nav.Link href=\"#\">Tài liệu</Nav.Link>\r\n                                <Nav.Link href=\"#\">Blog</Nav.Link>\r\n                                <Nav.Link href=\"#\">Hướng dẫn</Nav.Link>\r\n                                <Nav.Link href=\"#\">Chúng tôi</Nav.Link>\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Navbar>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n            {/* Body */}\r\n            <Row>\r\n                <Col sm={2}>\r\n                    <Card>\r\n                        <ListGroup>\r\n                            <ListGroup.Item>Lịch tháng</ListGroup.Item>\r\n                            <ListGroup.Item>Lịch năm</ListGroup.Item>\r\n                            <ListGroup.Item>Sự kiện trong năm</ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n                <Col sm={10}>\r\n                    {props.children}\r\n                </Col>\r\n            </Row>\r\n            {/* Fotter */}\r\n            <Row>\r\n                <Col style={{ paddingRight: 0, paddingLeft: 0 }}>\r\n                    <p style={footerStyle}>{`© ${new Date().getFullYear()} Sakawi Cham`}</p>\r\n                </Col>\r\n            </Row>\r\n        </Container >\r\n    );\r\n}","import React from 'react';\r\n//import logo from './logo.svg';\r\nimport './App.css';\r\nimport { Calendar } from './components/calendar';\r\nimport { Layout } from './Layout';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Layout>\r\n        <Calendar/>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}