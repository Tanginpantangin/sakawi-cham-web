{"version":3,"sources":["enums/enum.ts","utility/constant.ts","utility/helper.ts","components/countDownBar.tsx","components/dayDetails.tsx","components/monthAhier.tsx","components/monthAwal.tsx","components/monthGregory.tsx","components/monthNavigation.tsx","components/monthCalendar.tsx","components/calendar.tsx","Layout.tsx","App.tsx","index.tsx"],"names":["MonthEnum","DayEnum","IkasSarakEnum","NasakEnum","AwalMonthEnum","AhierMonthEnum","GuecTypeEnum","GuenTypeEnum","displayMonthName","month","_akharThrahName","_rumiName","akharThrahName","rumiName","displayNasakName","nasak","displayIkasSarakName","ikasSarak","result","firstDateOfSakawiAwal_Lieh_1407","Date","firstDateOfSakawiAhier_InaGirai_Lieh_1988","awalYearArray","no","name","Liéh","numberOfDays","Hak","Jim","Jây","Dal","Bak","Waw","JimLuic","awalMonthArray","Muharam","Syafar","Rabiulawal","Rabiulakhir","Jamadilawal","Jamadilakhir","Rejab","Sykban","Ramadan","Syawal","Julkaejah","Julhiijaah","Helper","currentDate","addedDays","getDayNumbersOfAwalMonth","awalMonth","year","newDays","date","addAwalMonths","previousMonth","currentMonth","addedMonths","newMonth","quotient","Math","floor","getMod","addAwalYears","currentYear","addedYears","newIkasSarak","yearNumber","yearName","yearItem","sakawiTakaiCiimConfig","filter","x","ArabYear","differenceInDays","getTime","remain","abs","awalYearNumber","awalYear","awalDate","totalYears","i","length","numberDaysOfCurrentYear","totalMonths","j","maxtrixCalendar","getActualDayNumbersOfAhierMonth","ahierMonth","BilanSa","Takuh","addAhierMonths","numberOfMonths","getMonthNumbersOfAhierYear","addAhierYears","previousYear","newNasak","remainNasak","numberOfDay","BilanKlau","BilanLima","BilanTajuh","BilanSalipan","BilanPuis","BilanDua","BilanPak","BilanNem","BilanDalipan","BilanSapluh","BilanMak","BilanBhang","index","findIndex","JSON","stringify","dayNumbersOfAhierMonth","newDt","setDate","getDate","toYearAhier","matrixCalendar","fullCalendar","startAhierYear","InâGirai","numberOfAhierYear","newGregoryDate","y","ahierYear","matrixPerYear","renderMatrixPerYear","validMatrix","applyGuenGuecRules","push","calendarDetails","renderCalendarDetails","lastMonthItem","addGregoryDays","dateOfGregoryCalendar","firstGregoryDate","addedGregoryDays","numberOfAhierMonth","m","getExpectedDayNumbersOfAhierMonth","firstDayOfAhierMonth","getDay","getAwalDateByGregoryDate","dayNumbersOfAwalMonth","firstDayOfAwalMonth","Number","parseInt","getStartDayByAwalMonth","ahierMonthItem","hasGuen","typeOfGuen","None","hasGuec","typeOfGuec","hasGuenRuleInNextYear","monthGuen","monthGuec","guecTypeInNextYear","element","checkIsGuenToAddDay","GuenByNormalRule","newDate","checkIsGuecToMinusDay","GuecByNormalRule","lastMonthOfCurrentYear","firstGregoryDateOfNextYear","checkHasGuecRuleInNextYear","checkHasGuenRuleInNextYear","getAhierAwalDaysGap","firstDateOfAhierMonth","firstDateOfAwalMonth","firstDateOfGregoryMonth","daysGap","days","addedAhierDate","addAhierDays","dateAhier","addedAwalDate","addAwalDays","monthDetailsCalendar","dateAwal","dateGregory","undefined","firstGregoryDateNextYear","nextAhierYear","matrixNextYear","firstMonth","isKateRamawanConflict","some","item","GuecByHareiButSukRule","GuecByKateRamawanRule","GuecByRijaNagarRule","n","latinNumber","ChamDigitArr","EnglishDigits","reg","RegExp","toString","replace","c","indexOf","addedAkaokThun","addedRijaNagar","addedKate","addedRamawan","forEach","eventType","eventDate","CountDownBar","props","useState","percent","setPercent","setDays","useEffect","setTimeout","now","distance","init","variantType","dd","mm","getMonth","dateStr","getFullYear","displayEventName","Row","Col","sm","md","lg","style","marginBottom","fontWeight","ProgressBar","height","variant","DayDetails","opacityValue","sakawiType","currentAhierMonth","currentAwalMonth","currentGregoryMonth","currentGregoryYear","tdStyle","opacity","backgroundColor","toLocaleDateString","gregoryDateClass","ahierDateClass","awalDateClass","ikasSarakMonthCellClass","xs","className","monthGregogy","displayGregoryDate","minHeight","maxHeight","dayNumbersOfCurrentAhierMonth","getEvents","map","monthAwal","margin","convertToChamDigitUnicode","dayNumbersOfCurrentAwalMonth","displayAwalDate","MonthAhier","datesOfCurrentMonth","setDatesOfCurrentMonth","React","firstIndex","fullSakawi","currentAhierMonthMatrix","lastIndex","cells","rows","matrixSakawi","Table","bordered","hover","tableLayout","d","padding","textAlign","MonthAwal","currentAwalMonthMatrix","MonthGregory","MonthNavigation","ButtonToolbar","justifyContent","ButtonGroup","Button","active","onClick","onSelectSakawiType","marginRight","onClickToday","onClickPreviousMonth","onClickNextMonth","MonthCalendar","initialAhierMonth","Pabuei","initialGregoryDate","initialMatrixCalendarType","setSakawiType","setCurrentAhierMonthMatrix","setCurrentAwalMonthMatrix","setCurrentGregoryMonth","setCurrentGregoryYear","Container","type","Calendar","showWarning","setShowWarning","areaType","setAreaType","setMatrixSakawi","setFullSakawi","nextEvents","setNextEvents","matrix","buildMatrixCalendar","getNextEvents","Alert","onClose","dismissible","Heading","Form","Check","inline","disabled","label","checked","onChange","footerStyle","background","color","Layout","fluid","paddingRight","paddingLeft","Navbar","bg","expand","Brand","href","Toggle","Collapse","id","Nav","navbarScroll","Link","children","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe4514a1.chunk.js","sourcesContent":["export declare type VariantType = 'primary' | 'info' | 'secondary' | 'success' | 'warning' | 'danger' | 'light' | 'link';\r\nexport declare type EventType = 'Akaok thun' | 'Rija Nagar' | 'Katé palei Hamu Tanran' | 'Katé angaok bimong' | 'Ca-mbur' | 'Tamâ ricaow Ramâwan' | 'Talaih aek Ramâwan' | 'Muk trun' | 'Ong trun' | 'Ikak Waha' | 'Talaih Waha' | 'Yuer Yang';\r\n\r\nexport enum MonthEnum {\r\n    January = 0,\r\n    February,\r\n    March,\r\n    April,\r\n    May,\r\n    June,\r\n    July,\r\n    August,\r\n    September,\r\n    October,\r\n    November,\r\n    December\r\n}\r\n\r\nexport enum DayEnum {\r\n    Sunday = 0,\r\n    Monday,\r\n    Tuesday,\r\n    Wednesday,\r\n    Thursday,\r\n    Friday,\r\n    Saturday\r\n}\r\n\r\nexport enum IkasSarakEnum {\r\n    Liéh = 0,\r\n    Hak,\r\n    Jim,\r\n    Jây,\r\n    Dal,\r\n    Bak,\r\n    Waw,\r\n    JimLuic\r\n}\r\n\r\nexport enum NasakEnum {\r\n    Takuh = 0,\r\n    Kabaw,\r\n    Rimaong,\r\n    Tapay,\r\n    InâGirai,\r\n    UlaAnaih,\r\n    Asaih,\r\n    Pabaiy,\r\n    Kra,\r\n    Manuk,\r\n    Asau,\r\n    Pabuei\r\n}\r\n\r\nexport enum AwalMonthEnum {\r\n    Muharam = 0,\r\n    Syafar,\r\n    Rabiulawal,\r\n    Rabiulakhir,\r\n    Jamadilawal,\r\n    Jamadilakhir,\r\n    Rejab,\r\n    Sykban,\r\n    Ramadan,\r\n    Syawal,\r\n    Julkaejah,\r\n    Julhiijaah\r\n}\r\n\r\nexport enum AhierMonthEnum {\r\n    BilanSa = 0,\r\n    BilanDua,\r\n    BilanKlau,\r\n    BilanPak,\r\n    BilanLima,\r\n    BilanNem,\r\n    BilanTajuh,\r\n    BilanDalipan,\r\n    BilanSalipan,\r\n    BilanSapluh,\r\n    BilanPuis,\r\n    BilanMak,\r\n    BilanBhang\r\n}\r\n\r\nexport enum GuecTypeEnum {\r\n    None = -1,\r\n    GuecByNormalRule,\r\n    GuecByHareiButSukRule,\r\n    GuecByRijaNagarRule,\r\n    GuecByKateRamawanRule,\r\n}\r\n\r\nexport enum GuenTypeEnum {\r\n    None = -1,\r\n    GuenByNormalRule\r\n}\r\n\r\nexport function displayMonthName(month: AhierMonthEnum) {\r\n    let _akharThrahName = '';\r\n    let _rumiName = '';\r\n\r\n    switch (month) {\r\n        case 0:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨧꨩ';\r\n            _rumiName = 'Bilan sa';\r\n            break;\r\n        case 1:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨕꨶꨩ';\r\n            _rumiName = 'Bilan dua';\r\n            break;\r\n        case 2:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨆꨵꨮꨭ';\r\n            _rumiName = 'Bilan klau';\r\n            break;\r\n        case 3:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨛꨩꩀ';\r\n            _rumiName = 'Bilan pak';\r\n            break;\r\n        case 4:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨤꨪꨟꨩ';\r\n            _rumiName = 'Bilan limâ';\r\n            break;\r\n        case 5:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨗꨮꩌ';\r\n            _rumiName = 'Bilan nem';\r\n            break;\r\n        case 6:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨓꨎꨭꩍ';\r\n            _rumiName = 'Bilan tajuh';\r\n            break;\r\n        case 7:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨕꨤꨪꨚꩆ';\r\n            _rumiName = 'Bilan dalipan';\r\n            break;\r\n        case 8:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨧꨤꨪꨚꩆ';\r\n            _rumiName = 'Bilan salipan';\r\n            break;\r\n        case 9:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨧꨚꨵꨭꩍ';\r\n            _rumiName = 'Bilan sapluh';\r\n            break;\r\n        case 10:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨚꨶꨪꩋ';\r\n            _rumiName = 'Bilan puis';\r\n            break;\r\n        case 11:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨠꩀ';\r\n            _rumiName = 'Bilan mak';\r\n            break;\r\n        case 12:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨞꩃ';\r\n            _rumiName = 'Bilan bhang';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return {\r\n        akharThrahName: _akharThrahName,\r\n        rumiName: _rumiName\r\n    }\r\n}\r\n\r\nexport function displayNasakName(nasak: NasakEnum) {\r\n    let _akharThrahName = '';\r\n    let _rumiName = '';\r\n\r\n    switch (nasak) {\r\n        case 0:\r\n            _akharThrahName = 'ꨓꨆꨭꩍ';\r\n            _rumiName = 'Takuh';\r\n            break;\r\n        case 1:\r\n            _akharThrahName = 'ꨆꨝꨥ';\r\n            _rumiName = 'Kabaw';\r\n            break;\r\n        case 2:\r\n            _akharThrahName = 'ꨣꨪꨟꨯꨱꩃ';\r\n            _rumiName = 'Rimaong';\r\n            break;\r\n        case 3:\r\n            _akharThrahName = 'ꨓꨛꩈ';\r\n            _rumiName = 'Tapay';\r\n            break;\r\n        case 4:\r\n            _akharThrahName = 'ꨁꨗꨩ ꨈꨪꨣꩈ';\r\n            _rumiName = 'Inâ Giray';\r\n            break;\r\n        case 5:\r\n            _akharThrahName = 'ꨂꨤꨩ ꨗꨰꩍ';\r\n            _rumiName = 'Ula naih';\r\n            break;\r\n        case 6:\r\n            _akharThrahName = 'ꨀꨧꨰꩍ';\r\n            _rumiName = 'Asaih';\r\n            break;\r\n        case 7:\r\n            _akharThrahName = 'ꨚꨝꨰꩈ';\r\n            _rumiName = 'Pabaiy';\r\n            break;\r\n        case 8:\r\n            _akharThrahName = 'ꨆꨴꨩ';\r\n            _rumiName = 'Kra';\r\n            break;\r\n        case 9:\r\n            _akharThrahName = 'ꨟꨗꨭꩀ';\r\n            _rumiName = 'Mânuk';\r\n            break;\r\n        case 10:\r\n            _akharThrahName = 'ꨀꨧꨮꨭ';\r\n            _rumiName = 'Asau';\r\n            break;\r\n        case 11:\r\n            _akharThrahName = 'ꨚꨝꨶꨬ';\r\n            _rumiName = 'Pabuei';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return {\r\n        akharThrahName: _akharThrahName,\r\n        rumiName: _rumiName\r\n    }\r\n}\r\n\r\nexport function displayIkasSarakName(ikasSarak: IkasSarakEnum) {\r\n    let result = '';\r\n\r\n    switch (ikasSarak) {\r\n        case 0:\r\n            result = '1';\r\n            break;\r\n        case 1:\r\n            result = '5';\r\n            break;\r\n        case 2:\r\n            result = '3';\r\n            break;\r\n        case 3:\r\n            result = '7';\r\n            break;\r\n        case 4:\r\n            result = '4';\r\n            break;\r\n        case 5:\r\n            result = '2';\r\n            break;\r\n        case 6:\r\n            result = '6';\r\n            break;\r\n        case 7:\r\n            result = '3';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n","import { AwalMonthEnum, IkasSarakEnum } from \"../enums/enum\";\r\n\r\nexport const firstDateOfSakawiAwal_Lieh_1407 = new Date(1986, 8, 5);//05/09/1986\r\nexport const yearNumberOfSakawiAwal_Lieh_1407 = 1407;\r\nexport const firstDateOfSakawiAhier_InaGirai_Lieh_1988 = new Date(1988, 3, 16);//16/04/1988\r\nexport const totalDaysOf8AwalYearCycle = 2835;\r\n\r\nexport const awalYearArray: { no: number; name: IkasSarakEnum; numberOfDays: number }[] = [\r\n    { no: 1, name: IkasSarakEnum.Liéh, numberOfDays: 354 },\r\n    { no: 2, name: IkasSarakEnum.Hak, numberOfDays: 355 },\r\n    { no: 3, name: IkasSarakEnum.Jim, numberOfDays: 354 },\r\n    { no: 4, name: IkasSarakEnum.Jây, numberOfDays: 354 },\r\n    { no: 5, name: IkasSarakEnum.Dal, numberOfDays: 355 },\r\n    { no: 6, name: IkasSarakEnum.Bak, numberOfDays: 354 },\r\n    { no: 7, name: IkasSarakEnum.Waw, numberOfDays: 354 },\r\n    { no: 8, name: IkasSarakEnum.JimLuic, numberOfDays: 355 }\r\n];\r\n\r\nexport const awalMonthArray: { no: number; name: AwalMonthEnum; numberOfDays: number }[] = [\r\n    { no: 1, name: AwalMonthEnum.Muharam, numberOfDays: 30 },\r\n    { no: 2, name: AwalMonthEnum.Syafar, numberOfDays: 29 },\r\n    { no: 3, name: AwalMonthEnum.Rabiulawal, numberOfDays: 30 },\r\n    { no: 4, name: AwalMonthEnum.Rabiulakhir, numberOfDays: 29 },\r\n    { no: 5, name: AwalMonthEnum.Jamadilawal, numberOfDays: 30 },\r\n    { no: 6, name: AwalMonthEnum.Jamadilakhir, numberOfDays: 29 },\r\n    { no: 7, name: AwalMonthEnum.Rejab, numberOfDays: 30 },\r\n    { no: 8, name: AwalMonthEnum.Sykban, numberOfDays: 29 },\r\n    { no: 9, name: AwalMonthEnum.Ramadan, numberOfDays: 30 },\r\n    { no: 10, name: AwalMonthEnum.Syawal, numberOfDays: 29 },\r\n    { no: 11, name: AwalMonthEnum.Julkaejah, numberOfDays: 30 },\r\n    { no: 12, name: AwalMonthEnum.Julhiijaah, numberOfDays: 30 }\r\n]","import { CountDownBarProps } from '../components/countDownBar';\r\nimport sakawiTakaiCiimConfig from '../data/SakawiTakaiCiim.json';\r\nimport { AhierMonthEnum, AwalMonthEnum, GuecTypeEnum, GuenTypeEnum, IkasSarakEnum, NasakEnum } from \"../enums/enum\";\r\nimport { AhierDate, AhierMonth, AhierYear } from \"../model/AhierDate\";\r\nimport { AwalDate, AwalMonth, AwalYear } from '../model/AwalDate';\r\nimport { FullCalendarType } from '../model/FullCalendarType';\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport { awalMonthArray, awalYearArray, firstDateOfSakawiAhier_InaGirai_Lieh_1988, firstDateOfSakawiAwal_Lieh_1407, totalDaysOf8AwalYearCycle, yearNumberOfSakawiAwal_Lieh_1407 } from './constant';\r\n\r\nexport default class Helper {\r\n    //#region Awal\r\n    static addAwalDays(currentDate: AwalDate, addedDays: number) {\r\n        let numberOfDays = Helper.getDayNumbersOfAwalMonth(currentDate.awalMonth.year, currentDate.awalMonth.month);\r\n        let newDays = currentDate.date + addedDays;\r\n        let result: AwalDate = {\r\n            date: 1,\r\n            awalMonth: {\r\n                month: AwalMonthEnum.Jamadilakhir,\r\n                year: { ikasSarak: IkasSarakEnum.Liéh }\r\n            }\r\n        };\r\n\r\n        if (newDays > numberOfDays) {\r\n            const nextMonth = Helper.addAwalMonths(currentDate.awalMonth, 1);\r\n            result = {\r\n                date: newDays - numberOfDays,\r\n                awalMonth: nextMonth\r\n            };\r\n\r\n        } else if (newDays <= 0) {\r\n            const previousMonth = Helper.addAwalMonths(currentDate.awalMonth, -1);\r\n            result = {\r\n                date: Helper.getDayNumbersOfAwalMonth(previousMonth.year, previousMonth.month) + newDays,\r\n                awalMonth: previousMonth\r\n            };\r\n        }\r\n        else {\r\n            result = {\r\n                date: newDays,\r\n                awalMonth: currentDate.awalMonth\r\n            };\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static addAwalMonths(currentMonth: AwalMonth, addedMonths: number) {\r\n        let newMonth = currentMonth.month + addedMonths;\r\n        let quotient = Math.floor(newMonth / 12);\r\n        let remain = Helper.getMod(newMonth, 12);\r\n\r\n        let result: AwalMonth = {\r\n            month: remain,\r\n            year: Helper.addAwalYears(currentMonth.year, quotient)\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static addAwalYears(currentYear: AwalYear, addedYears: number) {\r\n        let newIkasSarak = currentYear.ikasSarak + addedYears;\r\n        let remain = Helper.getMod(newIkasSarak, 8);\r\n        let newYearNumber = (currentYear.yearNumber ?? 0) + addedYears;\r\n\r\n        let result: AwalYear = {\r\n            ikasSarak: remain,\r\n            yearNumber: newYearNumber\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static getDayNumbersOfAwalMonth(year: AwalYear, month: AwalMonthEnum) {\r\n        let numberOfDay = 0;\r\n\r\n        if (month === AwalMonthEnum.Muharam || month === AwalMonthEnum.Rabiulawal || month === AwalMonthEnum.Jamadilawal ||\r\n            month === AwalMonthEnum.Rejab || month === AwalMonthEnum.Ramadan || month === AwalMonthEnum.Julkaejah) {\r\n            // Tháng lẻ: (30 ngày), gồm: 1,3,5,7,9,11.\r\n            numberOfDay = 30;\r\n        } else if (month === AwalMonthEnum.Syafar || month === AwalMonthEnum.Rabiulakhir || month === AwalMonthEnum.Jamadilakhir ||\r\n            month === AwalMonthEnum.Sykban || month === AwalMonthEnum.Syawal) {\r\n            // Tháng chẳn: (29 ngày), gồm: 2,4,6,8,10. \r\n            numberOfDay = 29;\r\n        } else {\r\n            // Riêng tháng 12: \r\n            if (year.ikasSarak === IkasSarakEnum.Hak || year.ikasSarak === IkasSarakEnum.Dal || year.ikasSarak === IkasSarakEnum.JimLuic) {\r\n                // năm nhuận (thun \"Nâh\": Hak, Dal, Jim luic): 30 ngày\r\n                numberOfDay = 30;\r\n            } else {\r\n                // năm thường (thun \"Wak\"): 29 ngày\r\n                numberOfDay = 29;\r\n            }\r\n        }\r\n\r\n        return numberOfDay;\r\n    }\r\n\r\n    static getStartDayByAwalMonth(year: AwalYear, month: AwalMonthEnum) {\r\n        let yearName = IkasSarakEnum[year.ikasSarak];\r\n        let yearItem = sakawiTakaiCiimConfig.filter(x => x.ArabYear === yearName)[0];\r\n        let result = '';\r\n\r\n        switch (month) {\r\n            case 0:\r\n                result = yearItem['Month_01'];\r\n                break;\r\n            case 1:\r\n                result = yearItem['Month_02'];\r\n                break;\r\n            case 2:\r\n                result = yearItem['Month_03'];\r\n                break;\r\n            case 3:\r\n                result = yearItem['Month_04'];\r\n                break;\r\n            case 4:\r\n                result = yearItem['Month_05'];\r\n                break;\r\n            case 5:\r\n                result = yearItem['Month_06'];\r\n                break;\r\n            case 6:\r\n                result = yearItem['Month_07'];\r\n                break;\r\n            case 7:\r\n                result = yearItem['Month_08'];\r\n                break;\r\n            case 8:\r\n                result = yearItem['Month_09'];\r\n                break;\r\n            case 9:\r\n                result = yearItem['Month_10'];\r\n                break;\r\n            case 10:\r\n                result = yearItem['Month_11'];\r\n                break;\r\n            case 11:\r\n                result = yearItem['Month_12'];\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static getAwalDateByGregoryDate(date: Date) {\r\n        let differenceInTime = date.getTime() - firstDateOfSakawiAwal_Lieh_1407.getTime();\r\n        let differenceInDays = differenceInTime / (1000 * 3600 * 24);\r\n        let remain = Helper.getMod(differenceInDays, totalDaysOf8AwalYearCycle);\r\n        let quotient = Math.floor(Math.abs(differenceInDays) / totalDaysOf8AwalYearCycle);\r\n\r\n        let awalYearNumber = yearNumberOfSakawiAwal_Lieh_1407;\r\n        let awalYear = IkasSarakEnum.Liéh;\r\n        let awalMonth = AwalMonthEnum.Muharam;\r\n        let awalDate = 0;\r\n        let totalYears = 0;\r\n        for (let i = 0; i < awalYearArray.length; i++) {\r\n            totalYears += awalYearArray[i].numberOfDays;\r\n            if (remain < totalYears) {\r\n                awalYear = awalYearArray[i].name;\r\n\r\n                if (differenceInDays > 0) {\r\n                    awalYearNumber += (quotient * 8) + i;\r\n                } else {\r\n                    awalYearNumber -= (quotient * 8) + i;\r\n                }\r\n\r\n                let numberDaysOfCurrentYear = remain - (totalYears - awalYearArray[i].numberOfDays);\r\n                let totalMonths = 0;\r\n\r\n                for (let j = 0; j < awalMonthArray.length; j++) {\r\n                    totalMonths += awalMonthArray[j].numberOfDays;\r\n                    if (numberDaysOfCurrentYear < totalMonths) {\r\n                        awalMonth = awalMonthArray[j].name;\r\n                        let numberDaysOfCurrentMonth = numberDaysOfCurrentYear - (totalMonths - awalMonthArray[j].numberOfDays);\r\n                        awalDate = numberDaysOfCurrentMonth + 1;\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        let resultDate: AwalDate = {\r\n            date: awalDate,\r\n            awalMonth: { month: awalMonth, year: { ikasSarak: awalYear, yearNumber: awalYearNumber } }\r\n        }\r\n\r\n        return resultDate;\r\n    }\r\n    //#endregion\r\n\r\n    //#region Ahier\r\n    static addAhierDays(maxtrixCalendar: MatrixCalendarType[], currentDate: AhierDate, addedDays: number) {\r\n        const numberOfDays = Helper.getActualDayNumbersOfAhierMonth(maxtrixCalendar, currentDate.ahierMonth);\r\n        const newDays = currentDate.date + addedDays;\r\n\r\n        let result: AhierDate = {\r\n            date: 1,\r\n            ahierMonth: {\r\n                month: AhierMonthEnum.BilanSa,\r\n                year: { nasak: NasakEnum.Takuh, ikasSarak: IkasSarakEnum.Liéh }\r\n            }\r\n        };\r\n\r\n        if (newDays > numberOfDays) {\r\n            const nextMonth = Helper.addAhierMonths(currentDate.ahierMonth, 1);\r\n            result = {\r\n                date: newDays - numberOfDays,\r\n                ahierMonth: nextMonth\r\n            };\r\n        } else if (newDays <= 0) {\r\n            const previousMonth = Helper.addAhierMonths(currentDate.ahierMonth, -1);\r\n            const dayNumberOfPreviousMonth = Helper.getActualDayNumbersOfAhierMonth(maxtrixCalendar, previousMonth);\r\n            result = {\r\n                date: dayNumberOfPreviousMonth + newDays,\r\n                ahierMonth: previousMonth\r\n            };\r\n        }\r\n        else {\r\n            result = {\r\n                date: newDays,\r\n                ahierMonth: currentDate.ahierMonth\r\n            };\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static addAhierMonths(currentMonth: AhierMonth, addedMonths: number) {\r\n        const numberOfMonths = Helper.getMonthNumbersOfAhierYear(currentMonth.year);\r\n        const newMonth = currentMonth.month + addedMonths;\r\n        let result: AhierMonth = {\r\n            month: currentMonth.month,\r\n            year: currentMonth.year\r\n        }\r\n\r\n        if (newMonth > numberOfMonths - 1) {\r\n            const nextYear = Helper.addAhierYears(currentMonth.year, 1);\r\n            result = {\r\n                month: newMonth - numberOfMonths,\r\n                year: nextYear\r\n            }\r\n        } else if (newMonth < 0) {\r\n            const previousYear = Helper.addAhierYears(currentMonth.year, -1);\r\n            const numberOfMonthsOfPreviousYear = Helper.getMonthNumbersOfAhierYear(previousYear);\r\n\r\n            result = {\r\n                month: numberOfMonthsOfPreviousYear + newMonth,\r\n                year: previousYear\r\n            }\r\n        } else {\r\n            result = {\r\n                month: newMonth,\r\n                year: currentMonth.year\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static addAhierYears(currentYear: AhierYear, addedYears: number) {\r\n        let newNasak = (currentYear.nasak + addedYears) % 12;\r\n        let remainNasak = Helper.getMod(newNasak, 12);\r\n\r\n        let newIkasSarak = (currentYear.ikasSarak + addedYears) % 8;\r\n        let remainIkasSarak = Helper.getMod(newIkasSarak, 8);\r\n\r\n        let newYearNumber = (currentYear.yearNumber ?? 0) + addedYears;\r\n\r\n        let result: AhierYear = {\r\n            nasak: remainNasak,\r\n            ikasSarak: remainIkasSarak,\r\n            yearNumber: newYearNumber\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static getExpectedDayNumbersOfAhierMonth(year: AhierYear, month: AhierMonthEnum) {\r\n        let numberOfDay = 0;\r\n        if (month === AhierMonthEnum.BilanSa || month === AhierMonthEnum.BilanKlau || month === AhierMonthEnum.BilanLima ||\r\n            month === AhierMonthEnum.BilanTajuh || month === AhierMonthEnum.BilanSalipan || month === AhierMonthEnum.BilanPuis) {\r\n            // Tháng lẻ - \"bilan tapak\": (30 ngày), gồm: 1,3,5,7,9,11.\r\n            numberOfDay = 30;\r\n        } else if (month === AhierMonthEnum.BilanDua || month === AhierMonthEnum.BilanPak || month === AhierMonthEnum.BilanNem ||\r\n            month === AhierMonthEnum.BilanDalipan || month === AhierMonthEnum.BilanSapluh) {\r\n            // Tháng chẳn - \"bilan u\" : (29 ngày), gồm: 2,4,6,8,10. \r\n            numberOfDay = 29;\r\n        } else if (month === AhierMonthEnum.BilanMak) {\r\n            // Tháng 12:  \r\n            if (year.ikasSarak === IkasSarakEnum.Hak || year.ikasSarak === IkasSarakEnum.Dal || year.ikasSarak === IkasSarakEnum.JimLuic) {\r\n                // năm nhuận (thun \"Nâh\": Hak, Dal, Jim luic): 30 ngày\r\n                numberOfDay = 30;\r\n            } else {\r\n                // năm thường (thun \"Wak\"): 29 ngày\r\n                numberOfDay = 29;\r\n            }\r\n        } else if (month === AhierMonthEnum.BilanBhang) {\r\n            if (year.ikasSarak === IkasSarakEnum.Hak || year.ikasSarak === IkasSarakEnum.Dal || year.ikasSarak === IkasSarakEnum.JimLuic) {\r\n                // năm nhuận (thun \"Nâh\": Hak, Dal, Jim luic): 29 ngày\r\n                numberOfDay = 29;\r\n            }\r\n        }\r\n\r\n        return numberOfDay;\r\n    }\r\n\r\n    static getActualDayNumbersOfAhierMonth(maxtrixCalendar: MatrixCalendarType[], ahierMonth: AhierMonth) {\r\n        const index = maxtrixCalendar.findIndex(x => JSON.stringify(x.ahierMonth) === JSON.stringify(ahierMonth));\r\n        if (index !== -1) {\r\n            return maxtrixCalendar[index].dayNumbersOfAhierMonth;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    static getMonthNumbersOfAhierYear(year: AhierYear) {\r\n        if (year.ikasSarak === IkasSarakEnum.Hak\r\n            || year.ikasSarak === IkasSarakEnum.Dal\r\n            || year.ikasSarak === IkasSarakEnum.JimLuic) {\r\n            return 13;\r\n        }\r\n        return 12;\r\n    }\r\n    //#endregion\r\n\r\n    //#region Gregory\r\n    static addGregoryDays(date: Date, numberOfDays: number) {\r\n        let newDt = new Date(date);\r\n        newDt.setDate(newDt.getDate() + numberOfDays);\r\n        return newDt;\r\n    }\r\n    //#endregion\r\n\r\n    static buildMatrixCalendar(toYearAhier: number) {\r\n        let matrixCalendar: MatrixCalendarType[] = [];\r\n        let fullCalendar: FullCalendarType[] = [];\r\n\r\n        // Choose thun 1988 as a root\r\n        const startAhierYear: AhierYear = {\r\n            nasak: NasakEnum.InâGirai,\r\n            ikasSarak: IkasSarakEnum.Liéh,\r\n            yearNumber: 1988\r\n        }\r\n\r\n        // TO-TEST\r\n        // const startAhierYear: AhierYear = {\r\n        //     nasak: NasakEnum.Rimaong,\r\n        //     ikasSarak: IkasSarakEnum.Jim,\r\n        //     yearNumber: 2022\r\n        // }\r\n\r\n        const numberOfAhierYear = toYearAhier - (startAhierYear.yearNumber ?? 0);\r\n        let newGregoryDate = firstDateOfSakawiAhier_InaGirai_Lieh_1988;\r\n        //let newGregoryDate = new Date(2022, 3, 30);//16/04/1988\r\n\r\n        for (let y = 0; y < numberOfAhierYear; y++) {\r\n            const ahierYear = Helper.addAhierYears(startAhierYear, y);\r\n            const matrixPerYear = Helper.renderMatrixPerYear(ahierYear, newGregoryDate);\r\n            const validMatrix = Helper.applyGuenGuecRules(matrixPerYear);\r\n            matrixCalendar.push(...validMatrix);\r\n\r\n            const calendarDetails = Helper.renderCalendarDetails(validMatrix);\r\n            fullCalendar.push(...calendarDetails);\r\n\r\n            const lastMonthItem = validMatrix[validMatrix.length - 1];\r\n            newGregoryDate = Helper.addGregoryDays(lastMonthItem.dateOfGregoryCalendar, lastMonthItem.dayNumbersOfAhierMonth);\r\n        }\r\n\r\n        return {\r\n            matrixCalendar,\r\n            fullCalendar\r\n        };\r\n    }\r\n\r\n    static renderMatrixPerYear(ahierYear: AhierYear, firstGregoryDate: Date) {\r\n        let matrixPerYear: MatrixCalendarType[] = [];\r\n        let newGregoryDate = firstGregoryDate;\r\n        let addedGregoryDays = 0;\r\n        const numberOfAhierMonth = Helper.getMonthNumbersOfAhierYear(ahierYear);\r\n\r\n        for (let m = 0; m < numberOfAhierMonth; m++) {\r\n            const ahierMonth: AhierMonth = { month: m, year: ahierYear };\r\n            const dayNumbersOfAhierMonth = Helper.getExpectedDayNumbersOfAhierMonth(ahierYear, m);\r\n            const firstDayOfAhierMonth = newGregoryDate.getDay();\r\n\r\n            const awalDate = Helper.getAwalDateByGregoryDate(newGregoryDate);\r\n            const awalMonth = Helper.addAwalMonths(awalDate.awalMonth, 1);\r\n            const dayNumbersOfAwalMonth = Helper.getDayNumbersOfAwalMonth(awalMonth.year, awalMonth.month);\r\n            const firstDayOfAwalMonth = Number.parseInt(Helper.getStartDayByAwalMonth(awalMonth.year, awalMonth.month)) - 1; // Sunday is 0 \r\n\r\n            let ahierMonthItem: MatrixCalendarType = {\r\n                ahierMonth: ahierMonth,\r\n                dayNumbersOfAhierMonth: dayNumbersOfAhierMonth,\r\n                hasGuen: false,\r\n                typeOfGuen: GuenTypeEnum.None,\r\n                hasGuec: false,\r\n                typeOfGuec: GuecTypeEnum.None,\r\n                firstDayOfAhierMonth: firstDayOfAhierMonth,\r\n                dateOfGregoryCalendar: newGregoryDate,\r\n                awalMonth: awalMonth,\r\n                dayNumbersOfAwalMonth: dayNumbersOfAwalMonth,\r\n                firstDayOfAwalMonth: firstDayOfAwalMonth\r\n            }\r\n\r\n            matrixPerYear.push(ahierMonthItem);\r\n\r\n            addedGregoryDays += dayNumbersOfAhierMonth;\r\n            newGregoryDate = Helper.addGregoryDays(firstGregoryDate, addedGregoryDays);\r\n        }\r\n\r\n        return matrixPerYear;\r\n    }\r\n\r\n    static applyGuenGuecRules(matrixPerYear: MatrixCalendarType[]) {\r\n        let monthGuen = -1;\r\n        let monthGuec = -1;\r\n        let guecTypeInNextYear = GuecTypeEnum.None;\r\n        let hasGuenRuleInNextYear = false;\r\n\r\n        // Check validations and fix in current year\r\n        for (let index = 0; index < matrixPerYear.length; index++) {\r\n            const element = matrixPerYear[index];\r\n\r\n            // Guen\r\n            if (monthGuen === -1 && Helper.checkIsGuenToAddDay(element.firstDayOfAhierMonth, element.firstDayOfAwalMonth)) {\r\n                monthGuen = index;\r\n                matrixPerYear[monthGuen - 1].dayNumbersOfAhierMonth += 1;\r\n                matrixPerYear[monthGuen - 1].hasGuen = true;\r\n                matrixPerYear[monthGuen - 1].typeOfGuen = GuenTypeEnum.GuenByNormalRule;\r\n            }\r\n\r\n            if (monthGuen !== -1 && index >= monthGuen) {\r\n                const newDate = Helper.addGregoryDays(matrixPerYear[index].dateOfGregoryCalendar, 1);\r\n                matrixPerYear[index].dateOfGregoryCalendar = newDate;\r\n                matrixPerYear[index].firstDayOfAhierMonth = newDate.getDay();\r\n            }\r\n\r\n            // Guec\r\n            if (monthGuec === -1 && Helper.checkIsGuecToMinusDay(element.firstDayOfAhierMonth, element.firstDayOfAwalMonth)) {\r\n                monthGuec = index;\r\n                matrixPerYear[monthGuec - 1].dayNumbersOfAhierMonth -= 1;\r\n                matrixPerYear[monthGuec - 1].hasGuec = true;\r\n                matrixPerYear[monthGuec - 1].typeOfGuec = GuecTypeEnum.GuecByNormalRule;\r\n            }\r\n\r\n            if (monthGuec !== -1 && index >= monthGuec) {\r\n                const newDate = Helper.addGregoryDays(matrixPerYear[index].dateOfGregoryCalendar, -1);\r\n                matrixPerYear[index].dateOfGregoryCalendar = newDate;\r\n                matrixPerYear[index].firstDayOfAhierMonth = newDate.getDay();\r\n            }\r\n        }\r\n\r\n        // Check validations in next year to fix current year\r\n        const lastMonthOfCurrentYear = matrixPerYear[matrixPerYear.length - 1];\r\n        const firstGregoryDateOfNextYear = Helper.addGregoryDays(lastMonthOfCurrentYear.dateOfGregoryCalendar, lastMonthOfCurrentYear.dayNumbersOfAhierMonth);\r\n        guecTypeInNextYear = Helper.checkHasGuecRuleInNextYear(lastMonthOfCurrentYear.ahierMonth.year, firstGregoryDateOfNextYear);\r\n        hasGuenRuleInNextYear = Helper.checkHasGuenRuleInNextYear(lastMonthOfCurrentYear.ahierMonth.year, firstGregoryDateOfNextYear);\r\n\r\n        if (guecTypeInNextYear !== GuecTypeEnum.None) {\r\n            // Bilan Mak (12)\r\n            matrixPerYear[11].dayNumbersOfAhierMonth -= 1;\r\n            matrixPerYear[11].hasGuec = true;\r\n            matrixPerYear[11].typeOfGuec = guecTypeInNextYear;\r\n\r\n            // Bilan Bhang (13)\r\n            const newDate = Helper.addGregoryDays(matrixPerYear[12].dateOfGregoryCalendar, -1);\r\n            matrixPerYear[12].dateOfGregoryCalendar = newDate;\r\n            matrixPerYear[12].firstDayOfAhierMonth = newDate.getDay();\r\n        } else if (hasGuenRuleInNextYear) {\r\n            // Bilan (12) or (13)\r\n            if (Helper.getAhierAwalDaysGap(lastMonthOfCurrentYear.firstDayOfAhierMonth, lastMonthOfCurrentYear.firstDayOfAwalMonth) === 2) {\r\n                lastMonthOfCurrentYear.dayNumbersOfAhierMonth += 1;\r\n                lastMonthOfCurrentYear.hasGuen = true;\r\n                lastMonthOfCurrentYear.typeOfGuen = GuenTypeEnum.GuenByNormalRule;\r\n            }\r\n        }\r\n\r\n        return [...matrixPerYear];\r\n    }\r\n\r\n    static renderCalendarDetails(matrixPerYear: MatrixCalendarType[]) {\r\n        let fullCalendar: FullCalendarType[] = [];\r\n\r\n        for (let index = 0; index < matrixPerYear.length; index++) {\r\n            const element = matrixPerYear[index];\r\n            const firstDateOfAhierMonth: AhierDate = { date: 1, ahierMonth: element.ahierMonth };\r\n            const firstDateOfAwalMonth: AwalDate = { date: 1, awalMonth: element.awalMonth };\r\n            const firstDateOfGregoryMonth = element.dateOfGregoryCalendar;\r\n            const daysGap = Helper.getAhierAwalDaysGap(element.firstDayOfAhierMonth, element.firstDayOfAwalMonth);\r\n\r\n            for (let days = 0; days < element.dayNumbersOfAhierMonth; days++) {\r\n                const addedAhierDate = Helper.addAhierDays(matrixPerYear, firstDateOfAhierMonth, days);\r\n                const dateAhier: AhierDate = {\r\n                    date: addedAhierDate.date,\r\n                    ahierMonth: addedAhierDate.ahierMonth\r\n                }\r\n\r\n                const addedAwalDate = Helper.addAwalDays(firstDateOfAwalMonth, days - daysGap);\r\n                const dateAwal: AwalDate = {\r\n                    date: addedAwalDate.date,\r\n                    awalMonth: addedAwalDate.awalMonth\r\n                }\r\n\r\n                const dateGregory = Helper.addGregoryDays(firstDateOfGregoryMonth, days);\r\n\r\n                let monthDetailsCalendar: FullCalendarType = {\r\n                    dateAhier: dateAhier,\r\n                    dateAwal: dateAwal,\r\n                    dateGregory: dateGregory,\r\n                    typeOfGuen: days === element.dayNumbersOfAhierMonth - 1 ? element.typeOfGuen : undefined,\r\n                    typeOfGuec: days === element.dayNumbersOfAhierMonth - 1 ? element.typeOfGuec : undefined,\r\n                    hasGuen: days === element.dayNumbersOfAhierMonth - 1 ? element.hasGuen : undefined,\r\n                    hasGuec: days === element.dayNumbersOfAhierMonth - 1 ? element.hasGuec : undefined\r\n                }\r\n\r\n                fullCalendar.push(monthDetailsCalendar);\r\n            }\r\n        }\r\n\r\n        return fullCalendar;\r\n    }\r\n\r\n    static checkIsGuenToAddDay(firstDayOfAhierMonth: number, firstDayOfAwalMonth: number) {\r\n        const daysGap = Helper.getAhierAwalDaysGap(firstDayOfAhierMonth, firstDayOfAwalMonth);\r\n        return daysGap > 2;\r\n    }\r\n\r\n    static checkIsGuecToMinusDay(firstDayOfAhierMonth: number, firstDayOfAwalMonth: number) {\r\n        return firstDayOfAhierMonth === firstDayOfAwalMonth;\r\n    }\r\n\r\n    static checkHasGuecRuleInNextYear(currentYear: AhierYear, firstGregoryDateNextYear: Date) {\r\n        let result = GuecTypeEnum.None;\r\n\r\n        const nextAhierYear = Helper.addAhierYears(currentYear, 1);\r\n        const matrixNextYear = Helper.renderMatrixPerYear(nextAhierYear, firstGregoryDateNextYear);\r\n        const firstMonth = matrixNextYear[0];\r\n        const isKateRamawanConflict = matrixNextYear.some(x =>\r\n            x.ahierMonth.month === AhierMonthEnum.BilanTajuh &&\r\n            x.awalMonth.month === AwalMonthEnum.Ramadan &&\r\n            Helper.getAhierAwalDaysGap(x.firstDayOfAhierMonth, x.firstDayOfAwalMonth) === 1);\r\n        const hasNormalGuec = matrixNextYear.some(item => Helper.checkIsGuecToMinusDay(item.firstDayOfAhierMonth, item.firstDayOfAwalMonth));\r\n\r\n        if (hasNormalGuec) {\r\n            result = GuecTypeEnum.GuecByNormalRule;\r\n        } else if (nextAhierYear.ikasSarak === IkasSarakEnum.Liéh) {\r\n            if (firstMonth.firstDayOfAhierMonth === 4 && firstMonth.firstDayOfAwalMonth === 5) {\r\n                result = GuecTypeEnum.GuecByHareiButSukRule;\r\n            } else if (isKateRamawanConflict) {\r\n                result = GuecTypeEnum.GuecByKateRamawanRule;\r\n            }\r\n        } else if (firstMonth.firstDayOfAhierMonth === 5 && firstMonth.firstDayOfAwalMonth === 6) {\r\n            result = GuecTypeEnum.GuecByRijaNagarRule;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static checkHasGuenRuleInNextYear(currentYear: AhierYear, firstGregoryDateNextYear: Date) {\r\n        const nextAhierYear = Helper.addAhierYears(currentYear, 1);\r\n        const matrixNextYear = Helper.renderMatrixPerYear(nextAhierYear, firstGregoryDateNextYear);\r\n\r\n        return matrixNextYear.some(item => Helper.checkIsGuenToAddDay(item.firstDayOfAhierMonth, item.firstDayOfAwalMonth));\r\n    }\r\n\r\n    static getMod(n: number, m: number) {\r\n        const remain = n % m;\r\n        return Math.floor(remain >= 0 ? remain : remain + m);\r\n    };\r\n\r\n    static getAhierAwalDaysGap(firstDayOfAhierMonth: number, firstDayOfAwalMonth: number) {\r\n        let daysGap = 0;\r\n\r\n        if (firstDayOfAhierMonth < firstDayOfAwalMonth) {\r\n            daysGap = firstDayOfAwalMonth - firstDayOfAhierMonth;\r\n        } else if (firstDayOfAhierMonth > firstDayOfAwalMonth) {\r\n            daysGap = firstDayOfAwalMonth + (6 - firstDayOfAhierMonth) + 1; // Sunday is 0\r\n        }\r\n\r\n        return daysGap;\r\n    }\r\n\r\n    static convertToChamDigitUnicode(latinNumber: number) {\r\n        const ChamDigitArr = ['꩐', '꩑', '꩒', '꩓', '꩔', '꩕', '꩖', '꩗', '꩘', '꩙'];\r\n        const EnglishDigits = '0123456789';\r\n        const reg = new RegExp('[' + EnglishDigits + ']', 'g');\r\n\r\n        return latinNumber.toString().replace(reg, function (c) {\r\n            return ChamDigitArr[EnglishDigits.indexOf(c)]\r\n        });\r\n    }\r\n\r\n    static getNextEvents(fullCalendar: FullCalendarType[]) {\r\n        let result: CountDownBarProps[] = [];\r\n        let addedAkaokThun = false;\r\n        let addedRijaNagar = false;\r\n        //let addedKateHamuTanran = false;\r\n        let addedKate = false;\r\n        let addedRamawan = false;\r\n        // let addedMukTrun = false;\r\n        // let addedOngTrun = false;\r\n        // let addedTalaihRamawan = false;\r\n        // let addedIkakWaha = false;\r\n        // let addedTalaihWaha = false;\r\n        // let addedYuerYang = false;\r\n\r\n        fullCalendar.forEach(function (item, index) {\r\n            if (item.dateGregory < new Date()) {\r\n                return;\r\n            }\r\n\r\n            if (!addedAkaokThun && item.dateAhier.ahierMonth.month === 0 && item.dateAhier.date === 1) {\r\n                result.push({ eventType: 'Akaok thun', eventDate: item.dateGregory });\r\n                addedAkaokThun = true;\r\n            }\r\n\r\n            if (!addedRijaNagar && item.dateAhier.ahierMonth.month === 0 && item.dateGregory.getDay() === 4) {\r\n                if (item.dateAwal.awalMonth.month !== AwalMonthEnum.Ramadan) {\r\n                    if (item.dateAhier.date < 7 || (item.dateAhier.date > 14 && item.dateAhier.date < 20)) {\r\n                        result.push({ eventType: 'Rija Nagar', eventDate: item.dateGregory });\r\n                        addedRijaNagar = true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            /*if (!addedKateHamuTanran && item.dateAhier.ahierMonth.month === 5 && item.dateAhier.date === 29) {\r\n                result.push({ eventType: 'Katé palei Hamu Tanran', eventDate: item.dateGregory });\r\n                addedKateHamuTanran = true;\r\n            }*/\r\n\r\n            if (!addedKate && item.dateAhier.ahierMonth.month === 6 && item.dateAhier.date === 1) {\r\n                result.push({ eventType: 'Katé angaok bimong', eventDate: item.dateGregory });\r\n                addedKate = true;\r\n            }\r\n\r\n            /*if (item.dayNumbersOfCurrentAhierMonth === 30) {\r\n                if (item.dateAhier.ahierMonth.month === 8 && item.dateAhier.date === 16) {\r\n                    result.push('Ca-mbur');\r\n                }\r\n            } else {\r\n                if (item.dateAhier.ahierMonth.month === 8 && item.dateAhier.date === 15) {\r\n                    result.push('Ca-mbur');\r\n                }\r\n            }*/\r\n\r\n            if (!addedRamawan && item.dateAwal.awalMonth.month === 8 && item.dateAwal.date === 1) {\r\n                result.push({ eventType: 'Tamâ ricaow Ramâwan', eventDate: item.dateGregory });\r\n                addedRamawan = true;\r\n            }\r\n\r\n            /*if (!addedMukTrun && item.dateAwal.awalMonth.month === 8 && item.dateAwal.date === 16) {\r\n                result.push({ eventType: 'Muk trun', eventDate: item.dateGregory });\r\n                addedMukTrun = true;\r\n            }\r\n\r\n            if (!addedOngTrun && item.dateAwal.awalMonth.month === 8 && item.dateAwal.date === 21) {\r\n                result.push({ eventType: 'Ong trun', eventDate: item.dateGregory });\r\n                addedOngTrun = true;\r\n            }\r\n\r\n            if (!addedTalaihRamawan && item.dateAwal.awalMonth.month === 9 && item.dateAwal.date === 2) {\r\n                result.push({ eventType: 'Talaih aek Ramâwan', eventDate: item.dateGregory });\r\n                addedTalaihRamawan = true;\r\n            }\r\n\r\n            if (!addedIkakWaha && item.dateAwal.awalMonth.month === 11 && item.dateAwal.date === 1) {\r\n                result.push({ eventType: 'Ikak Waha', eventDate: item.dateGregory });\r\n                addedIkakWaha = true;\r\n            }\r\n\r\n            if (!addedTalaihWaha && item.dateAwal.awalMonth.month === 11 && item.dateAwal.date === 11) {\r\n                result.push({ eventType: 'Talaih Waha', eventDate: item.dateGregory });\r\n                addedTalaihWaha = true;\r\n            }\r\n\r\n            if (!addedYuerYang && item.dateAhier.ahierMonth.month === 3 && item.dateGregory.getDay() === 0 && item.dateAhier.date < 7) {\r\n                result.push({ eventType: 'Yuer Yang', eventDate: item.dateGregory });\r\n                addedYuerYang = true;\r\n            }*/\r\n\r\n            // Break loop: just look up in a year later (30 days x 13 months)\r\n            if (item.dateGregory > Helper.addGregoryDays(new Date(), 390)) {\r\n                return;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n}","import { useEffect, useState } from \"react\";\r\nimport { Col, ProgressBar, Row } from \"react-bootstrap\";\r\nimport { EventType, VariantType } from \"../enums/enum\";\r\n\r\nexport interface CountDownBarProps {\r\n    eventType: EventType;\r\n    eventDate: Date;\r\n}\r\n\r\nexport const CountDownBar = (props: CountDownBarProps) => {\r\n    const [percent, setPercent] = useState(100);\r\n    const [days, setDays] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            init();\r\n        }, 1000);\r\n    });\r\n\r\n    function init() {\r\n        if (!props.eventDate) {\r\n            return;\r\n        }\r\n\r\n        const now = new Date().getTime();\r\n        const distance = props.eventDate.getTime() - now;\r\n        const timeOfYear = 365 * 24 * 60 * 60 * 1000;\r\n        const percent = distance / timeOfYear * 100;\r\n        setPercent(percent);\r\n\r\n        // Time calculations for days, hours, minutes and seconds\r\n        const days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n\r\n        setDays(days);\r\n    }\r\n\r\n    let dd = props.eventDate.getDate();\r\n    let mm = props.eventDate.getMonth() + 1;\r\n    const yyyy = props.eventDate.getFullYear();\r\n    const ddStr = dd < 10 ? '0' + dd : dd;\r\n    const mmStr = mm < 10 ? '0' + mm : mm;\r\n    const dateStr = ddStr + '/' + mmStr + '/' + yyyy;\r\n\r\n    let variantType: VariantType;\r\n    let displayEventName = '';\r\n    switch (props.eventType) {\r\n        case \"Akaok thun\":\r\n            variantType = 'primary';\r\n            displayEventName = 'Năm mới';\r\n            break;\r\n        case \"Rija Nagar\":\r\n            variantType = 'danger';\r\n            displayEventName = props.eventType;\r\n            break;\r\n        case \"Katé angaok bimong\":\r\n            variantType = 'warning';\r\n            displayEventName = 'Katé';\r\n            break;\r\n        case \"Tamâ ricaow Ramâwan\":\r\n            variantType = 'success';\r\n            displayEventName = 'Ramâwan';\r\n            break;\r\n        default:\r\n            variantType = 'warning';\r\n            displayEventName = props.eventType;\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col sm={6} md={12} lg={12}>\r\n                <div style={{ marginBottom: \"0.1rem\" }}>\r\n                    <span style={{ fontWeight: \"bold\" }}>{`${displayEventName}:`}</span>\r\n                    <span>{` ${dateStr}`}</span>\r\n                    <span>{` - Còn: ${days} ngày`}</span>\r\n                </div>\r\n                <ProgressBar style={{ height: \"0.3rem\", marginBottom: \"5px\" }} variant={variantType.toString()} now={percent} />\r\n            </Col>\r\n        </Row>\r\n    );\r\n}","import { Col, Row } from \"react-bootstrap\";\r\nimport { AwalMonthEnum, displayIkasSarakName } from \"../enums/enum\";\r\nimport { AhierDate, AhierMonth } from \"../model/AhierDate\";\r\nimport { AwalDate, AwalMonth } from \"../model/AwalDate\";\r\nimport Helper from \"../utility/helper\";\r\nimport { SakawiType } from \"./calendar\";\r\n\r\ninterface DayDetailsProps {\r\n    sakawiType: SakawiType;\r\n    dateGregory: Date;\r\n    dateAwal: AwalDate;\r\n    dateAhier: AhierDate;\r\n    currentAhierMonth?: AhierMonth;\r\n    currentAwalMonth?: AwalMonth;\r\n    currentGregoryMonth?: number;\r\n    currentGregoryYear?: number;\r\n    dayNumbersOfCurrentAhierMonth: number;\r\n    dayNumbersOfCurrentAwalMonth: number;\r\n}\r\n\r\nexport const DayDetails = (props: DayDetailsProps) => {\r\n    let opacityValue = 1;\r\n    if (props.sakawiType === \"sakawiAhier\") {\r\n        if (JSON.stringify(props.dateAhier.ahierMonth) !== JSON.stringify(props.currentAhierMonth)) {\r\n            opacityValue = 0.3;\r\n        }\r\n    } else if (props.sakawiType === \"sakawiAwal\") {\r\n        if (JSON.stringify(props.dateAwal.awalMonth) !== JSON.stringify(props.currentAwalMonth)) {\r\n            opacityValue = 0.3;\r\n        }\r\n    } else if (props.sakawiType === \"sakawiGregory\") {\r\n        if (props.dateGregory.getMonth() !== props.currentGregoryMonth\r\n            || props.dateGregory.getFullYear() !== props.currentGregoryYear) {\r\n            opacityValue = 0.3;\r\n        }\r\n    }\r\n\r\n    const tdStyle: React.CSSProperties = {\r\n        opacity: opacityValue,\r\n        backgroundColor: (props.dateGregory.toLocaleDateString() === new Date().toLocaleDateString()) ? '#FFEFBF' : ''\r\n    }\r\n\r\n    let gregoryDateClass = 'gregory-date';\r\n    let ahierDateClass = 'ahier-date';\r\n    let awalDateClass = 'awal-date';\r\n    let ikasSarakMonthCellClass = 'ikasSarak-month-cell';\r\n\r\n    switch (props.sakawiType) {\r\n        case \"sakawiGregory\":\r\n            gregoryDateClass += ' active'\r\n            break;\r\n\r\n        case \"sakawiAhier\":\r\n            ahierDateClass += ' active'\r\n            break;\r\n\r\n        case \"sakawiAwal\":\r\n            awalDateClass += ' active'\r\n            ikasSarakMonthCellClass += ' active'\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n\r\n    function displayGregoryDate(sakawiType: SakawiType, dateAhier: AhierDate, dateAwal: AwalDate, dateGregory: Date) {\r\n        const monthGregogy = dateGregory.getMonth() + 1;\r\n\r\n        if (dateGregory.getDate() === 1 ||\r\n            (sakawiType === \"sakawiAwal\" && dateAwal.date === 1) ||\r\n            (sakawiType === \"sakawiAhier\" && dateAhier.date === 1)) {\r\n            return dateGregory.getDate() + \".\" + monthGregogy;\r\n        } else {\r\n            return dateGregory.getDate();\r\n        }\r\n    }\r\n\r\n    function displayAhierDate(dateAhier: AhierDate) {\r\n        const bingun = 'ꩃ';\r\n        const klem = 'ꩌ';\r\n\r\n        if (props.dayNumbersOfCurrentAhierMonth === 30) {\r\n            if (dateAhier.date <= 15) {\r\n                return Helper.convertToChamDigitUnicode(dateAhier.date) + bingun;\r\n            } else {\r\n                return Helper.convertToChamDigitUnicode(dateAhier.date - 15) + klem;\r\n            }\r\n        } else {\r\n            if (dateAhier.date <= 14) {\r\n                if (dateAhier.date <= 5) {\r\n                    return Helper.convertToChamDigitUnicode(dateAhier.date) + bingun;\r\n                } else {\r\n                    return Helper.convertToChamDigitUnicode(dateAhier.date + 1) + bingun;\r\n                }\r\n            } else {\r\n                return Helper.convertToChamDigitUnicode(dateAhier.date - 14) + klem;\r\n            }\r\n        }\r\n    };\r\n\r\n    function displayAwalDate(dateAwal: AwalDate) {\r\n        const monthAwal = dateAwal.awalMonth.month + 1;\r\n        const bingun = 'ꩃ';\r\n        const klem = 'ꩌ';\r\n\r\n        if (dateAwal.date === 1) {\r\n            return (\r\n                <>\r\n                    <label style={{ margin: 0 }} >{Helper.convertToChamDigitUnicode(dateAwal.date) + bingun + \".\" + Helper.convertToChamDigitUnicode(monthAwal) + \".\"}</label>\r\n                    <label style={{ margin: 0 }} className={ikasSarakMonthCellClass}>{displayIkasSarakName(dateAwal.awalMonth.year.ikasSarak)}</label>\r\n                </>\r\n            )\r\n        } else {\r\n            if (props.dayNumbersOfCurrentAwalMonth === 30) {\r\n                if (dateAwal.date <= 15) {\r\n                    return Helper.convertToChamDigitUnicode(dateAwal.date) + bingun;\r\n                } else {\r\n                    return Helper.convertToChamDigitUnicode(dateAwal.date - 15) + klem;\r\n                }\r\n            } else {\r\n                if (dateAwal.date <= 14) {\r\n                    return Helper.convertToChamDigitUnicode(dateAwal.date) + bingun;\r\n                } else {\r\n                    return Helper.convertToChamDigitUnicode(dateAwal.date - 14) + klem;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function getEvents() {\r\n        let result: string[] = [];\r\n\r\n        if (props.dateAhier.ahierMonth.month === 0 && props.dateAhier.date === 1) {\r\n            result.push('Akaok thun');\r\n        }\r\n\r\n        if (props.dateAhier.ahierMonth.month === 0 && props.dateGregory.getDay() === 4) {\r\n            if (props.dateAwal.awalMonth.month !== AwalMonthEnum.Ramadan) {\r\n                if (props.dateAhier.date < 7 || (props.dateAhier.date > 14 && props.dateAhier.date < 20)) {\r\n                    result.push('Rija Nagar');\r\n                }\r\n            }\r\n        }\r\n\r\n        if (props.dateAhier.ahierMonth.month === 5 && props.dateAhier.date === 29) {\r\n            result.push('Katé palei Hamu Tanran');\r\n        }\r\n\r\n        if (props.dateAhier.ahierMonth.month === 6 && props.dateAhier.date === 1) {\r\n            result.push('Katé angaok bimong');\r\n        }\r\n\r\n        if (props.dayNumbersOfCurrentAhierMonth === 30) {\r\n            if (props.dateAhier.ahierMonth.month === 8 && props.dateAhier.date === 16) {\r\n                result.push('Ca-mbur');\r\n            }\r\n        } else {\r\n            if (props.dateAhier.ahierMonth.month === 8 && props.dateAhier.date === 15) {\r\n                result.push('Ca-mbur');\r\n            }\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month === 8 && props.dateAwal.date === 1) {\r\n            result.push('Tamâ ricaow Ramâwan');\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month === 8 && props.dateAwal.date === 16) {\r\n            result.push('Muk trun');\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month === 8 && props.dateAwal.date === 21) {\r\n            result.push('Ong trun');\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month === 9 && props.dateAwal.date === 2) {\r\n            result.push('Talaih aek Ramâwan');\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month === 11 && props.dateAwal.date === 1) {\r\n            result.push('Ikak Waha');\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month === 11 && props.dateAwal.date === 11) {\r\n            result.push('Talaih Waha');\r\n        }\r\n\r\n        if (props.dateAhier.ahierMonth.month === 3 && props.dateGregory.getDay() === 0 && props.dateAhier.date < 7) {\r\n            result.push('Yuer Yang');\r\n        }\r\n\r\n        // TODO: \r\n        // if (props.dateAhier.ahierMonth.month === 10 && props.dateGregory.getDay() === 2 && props.dateAhier.date <= 15) {\r\n        //     result.push('Peh ba-mbeng Yang');\r\n        // }\r\n\r\n        if ((props.dateAhier.ahierMonth.month === 2\r\n            || props.dateAhier.ahierMonth.month === 5\r\n            || props.dateAhier.ahierMonth.month === 7\r\n            || props.dateAhier.ahierMonth.month === 9\r\n            || props.dateAhier.ahierMonth.month === 10) && props.dateGregory.getDay() === 3) {\r\n\r\n            if (props.dayNumbersOfCurrentAhierMonth === 30) {\r\n                if (props.dateAhier.date > 15 && (props.dateAhier.date - 15) % 2 === 0) {\r\n                    result.push('♥️ Lakhah');\r\n                }\r\n            } else {\r\n                if (props.dateAhier.date > 14 && (props.dateAhier.date - 14) % 2 === 0) {\r\n                    result.push('♥️ Lakhah');\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    return (\r\n        <td style={tdStyle}>\r\n            <Row>\r\n                <Col xs={6} sm={6} md={6}></Col>\r\n                <Col className={gregoryDateClass} xs={6} sm={6} md={6}>\r\n                    {displayGregoryDate(props.sakawiType, props.dateAhier, props.dateAwal, props.dateGregory)}\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={12} sm={12} md={12} style={{ minHeight: \"10px\", maxHeight: \"25px\" }}>\r\n                    {getEvents().map((item, index) => { return <p key={index} className='event-name'>{item}</p> })}\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className={awalDateClass} xs={6} sm={6} md={6}>\r\n                    {displayAwalDate(props.dateAwal)}\r\n                </Col>\r\n                <Col className={ahierDateClass} xs={6} sm={6} md={6}>\r\n                    {displayAhierDate(props.dateAhier)}\r\n                </Col>\r\n            </Row>\r\n        </td>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { FullCalendarType } from \"../model/FullCalendarType\";\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport Helper from \"../utility/helper\";\r\nimport { DayDetails } from \"./dayDetails\";\r\n\r\ninterface MonthAhierProps {\r\n    matrixSakawi: MatrixCalendarType[],\r\n    fullSakawi: FullCalendarType[],\r\n    currentAhierMonthMatrix: MatrixCalendarType\r\n}\r\n\r\nexport const MonthAhier = (props: MonthAhierProps) => {\r\n    const [datesOfCurrentMonth, setDatesOfCurrentMonth] = useState<FullCalendarType[]>([]);\r\n\r\n    React.useEffect(() => {\r\n        function init() {\r\n            // Get date list will be display at current month\r\n            const firstDayOfCurrentAhierMonthIndex = props.fullSakawi.findIndex(x => x.dateAhier.date === 1\r\n                && JSON.stringify(x.dateAhier.ahierMonth) === JSON.stringify(props.currentAhierMonthMatrix.ahierMonth));\r\n            const firstIndex = firstDayOfCurrentAhierMonthIndex - props.currentAhierMonthMatrix.firstDayOfAhierMonth;\r\n            const lastIndex = firstIndex + 41; // 42 - 1 cells\r\n            const datesOfCurrentMonth = props.fullSakawi.filter((item, index) => index >= firstIndex && index <= lastIndex);\r\n            setDatesOfCurrentMonth(datesOfCurrentMonth);\r\n        }\r\n\r\n        init();\r\n    }, [props.currentAhierMonthMatrix.ahierMonth, props.currentAhierMonthMatrix.firstDayOfAhierMonth, props.fullSakawi]);\r\n\r\n    // draw Calendar Table\r\n    let cells: JSX.Element[] = [];\r\n    let rows: JSX.Element[] = [];\r\n\r\n    datesOfCurrentMonth.forEach((item, index) => {\r\n        const dayNumbersOfCurrentAhierMonth = Helper.getActualDayNumbersOfAhierMonth(props.matrixSakawi, item.dateAhier.ahierMonth);\r\n        const dayNumbersOfCurrentAwalMonth = Helper.getDayNumbersOfAwalMonth(item.dateAwal.awalMonth.year, item.dateAwal.awalMonth.month);\r\n\r\n        cells.push(\r\n            <DayDetails\r\n                sakawiType=\"sakawiAhier\"\r\n                key={`sakawiAhier-cell-${index}`}\r\n                dateAhier={item.dateAhier}\r\n                dateAwal={item.dateAwal}\r\n                dateGregory={item.dateGregory}\r\n                currentAhierMonth={props.currentAhierMonthMatrix.ahierMonth}\r\n                currentAwalMonth={props.currentAhierMonthMatrix.awalMonth}\r\n                dayNumbersOfCurrentAhierMonth={dayNumbersOfCurrentAhierMonth}\r\n                dayNumbersOfCurrentAwalMonth={dayNumbersOfCurrentAwalMonth}\r\n            />\r\n        );\r\n\r\n        if ((index + 1) % 7 === 0) {\r\n            rows.push(<tr key={`sakawiAhier-row-${index}`}>{cells}</tr>);\r\n            cells = [];\r\n        }\r\n    })\r\n\r\n    const dayNames = [\"Adit\", \"Thom\", \"Angar\", \"But\", \"Jip\", \"Suk\", \"Sanacar\"]\r\n    const tableStyle: React.CSSProperties = {\r\n        height: \"400px\",\r\n        tableLayout: \"fixed\"\r\n    }\r\n\r\n    return (\r\n        <Table bordered hover style={tableStyle}>\r\n            <thead>\r\n                <tr>\r\n                    {dayNames.map((d, index) =>\r\n                        <th className=\"ahier-day-name\" style={{ padding: \"2px\", textAlign: \"center\" }} key={index}>{d}</th>\r\n                    )}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {rows}\r\n            </tbody>\r\n        </Table>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { FullCalendarType } from \"../model/FullCalendarType\";\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport Helper from '../utility/helper';\r\nimport { DayDetails } from \"./dayDetails\";\r\n\r\ninterface MonthAwalProps {\r\n    matrixSakawi: MatrixCalendarType[],\r\n    fullSakawi: FullCalendarType[],\r\n    currentAwalMonthMatrix: MatrixCalendarType\r\n}\r\n\r\nexport const MonthAwal = (props: MonthAwalProps) => {\r\n    const [datesOfCurrentMonth, setDatesOfCurrentMonth] = useState<FullCalendarType[]>([]);\r\n\r\n    React.useEffect(() => {\r\n        function init() {\r\n            // Get date list will be display at current month\r\n            const firstDayOfCurrentAwalMonthIndex = props.fullSakawi.findIndex(x => x.dateAwal.date === 1\r\n                && JSON.stringify(x.dateAwal.awalMonth) === JSON.stringify(props.currentAwalMonthMatrix.awalMonth));\r\n            const firstIndex = firstDayOfCurrentAwalMonthIndex - props.currentAwalMonthMatrix.firstDayOfAwalMonth;\r\n            const lastIndex = firstIndex + 41; // 42 - 1 cells\r\n            const datesOfCurrentMonth = props.fullSakawi.filter((item, index) => index >= firstIndex && index <= lastIndex);\r\n            setDatesOfCurrentMonth(datesOfCurrentMonth);\r\n        }\r\n\r\n        init();\r\n    }, [props.currentAwalMonthMatrix.awalMonth, props.currentAwalMonthMatrix.firstDayOfAwalMonth, props.fullSakawi]);\r\n\r\n    // draw Calendar Table\r\n    let cells: JSX.Element[] = [];\r\n    let rows: JSX.Element[] = [];\r\n\r\n    datesOfCurrentMonth.forEach((item, index) => {\r\n        const dayNumbersOfCurrentAhierMonth = Helper.getActualDayNumbersOfAhierMonth(props.matrixSakawi, item.dateAhier.ahierMonth);\r\n        const dayNumbersOfCurrentAwalMonth = Helper.getDayNumbersOfAwalMonth(item.dateAwal.awalMonth.year, item.dateAwal.awalMonth.month);\r\n\r\n        cells.push(\r\n            <DayDetails\r\n                sakawiType=\"sakawiAwal\"\r\n                key={`sakawiAwal-cell-${index}`}\r\n                dateAhier={item.dateAhier}\r\n                dateAwal={item.dateAwal}\r\n                dateGregory={item.dateGregory}\r\n                currentAhierMonth={props.currentAwalMonthMatrix.ahierMonth}\r\n                currentAwalMonth={props.currentAwalMonthMatrix.awalMonth}\r\n                dayNumbersOfCurrentAhierMonth={dayNumbersOfCurrentAhierMonth}\r\n                dayNumbersOfCurrentAwalMonth={dayNumbersOfCurrentAwalMonth}\r\n            />\r\n        );\r\n\r\n        if ((index + 1) % 7 === 0) {\r\n            rows.push(<tr key={`sakawiAwal-row-${index}`}>{cells}</tr>);\r\n            cells = [];\r\n        }\r\n    })\r\n\r\n    const dayNames = [\"Adit\", \"Thom\", \"Angar\", \"But\", \"Jip\", \"Suk\", \"Sanacar\"]\r\n    const tableStyle: React.CSSProperties = {\r\n        height: \"400px\",\r\n        tableLayout: \"fixed\"\r\n    }\r\n\r\n    return (\r\n        <Table bordered hover style={tableStyle}>\r\n            <thead>\r\n                <tr>\r\n                    {dayNames.map((d, index) =>\r\n                        <th style={{ padding: \"2px\", textAlign: \"center\" }} key={index}>{d}</th>\r\n                    )}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {rows}\r\n            </tbody>\r\n        </Table>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { FullCalendarType } from \"../model/FullCalendarType\";\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport Helper from '../utility/helper';\r\nimport { DayDetails } from \"./dayDetails\";\r\n\r\ninterface MonthGregoryProps {\r\n    matrixSakawi: MatrixCalendarType[],\r\n    fullSakawi: FullCalendarType[],\r\n    currentGregoryMonth: number,\r\n    currentGregoryYear: number\r\n}\r\n\r\nexport const MonthGregory = (props: MonthGregoryProps) => {\r\n    const [datesOfCurrentMonth, setDatesOfCurrentMonth] = useState<FullCalendarType[]>([]);\r\n\r\n    React.useEffect(() => {\r\n        function init() {\r\n            // Gregory Date\r\n            const firstGregoryDate = new Date(props.currentGregoryYear, props.currentGregoryMonth, 1);\r\n\r\n            // Get date list will be display at current month\r\n            const firstDayOfCurrentGregoryMonthIndex = props.fullSakawi.findIndex(x =>\r\n                x.dateGregory.getDate() === 1\r\n                && x.dateGregory.getMonth() === props.currentGregoryMonth\r\n                && x.dateGregory.getFullYear() === props.currentGregoryYear);\r\n            const firstIndex = firstDayOfCurrentGregoryMonthIndex - firstGregoryDate.getDay();\r\n            const lastIndex = firstIndex + 41; // 42 - 1 cells\r\n            const datesOfCurrentMonth = props.fullSakawi.filter((item, index) => index >= firstIndex && index <= lastIndex);\r\n            setDatesOfCurrentMonth(datesOfCurrentMonth);\r\n        }\r\n\r\n        init();\r\n    }, [props.currentGregoryMonth, props.currentGregoryYear, props.fullSakawi]);\r\n\r\n    // draw Calendar Table\r\n    let cells: JSX.Element[] = [];\r\n    let rows: JSX.Element[] = [];\r\n\r\n    datesOfCurrentMonth.forEach((item, index) => {\r\n        const dayNumbersOfCurrentAhierMonth = Helper.getActualDayNumbersOfAhierMonth(props.matrixSakawi, item.dateAhier.ahierMonth);\r\n        const dayNumbersOfCurrentAwalMonth = Helper.getDayNumbersOfAwalMonth(item.dateAwal.awalMonth.year, item.dateAwal.awalMonth.month);\r\n\r\n        cells.push(\r\n            <DayDetails\r\n                sakawiType=\"sakawiGregory\"\r\n                key={`sakawiGregory-cell-${index}`}\r\n                dateAhier={item.dateAhier}\r\n                dateAwal={item.dateAwal}\r\n                dateGregory={item.dateGregory}\r\n                currentGregoryMonth={props.currentGregoryMonth}\r\n                currentGregoryYear={props.currentGregoryYear}\r\n                dayNumbersOfCurrentAhierMonth={dayNumbersOfCurrentAhierMonth}\r\n                dayNumbersOfCurrentAwalMonth={dayNumbersOfCurrentAwalMonth}\r\n            />\r\n        );\r\n\r\n        if ((index + 1) % 7 === 0) {\r\n            rows.push(<tr key={`sakawiGregory-row-${index}`}>{cells}</tr>);\r\n            cells = [];\r\n        }\r\n    })\r\n\r\n    const dayNames = [\"CN\", \"Hai\", \"Ba\", \"Tư\", \"Năm\", \"Sáu\", \"Bảy\"];\r\n    const tableStyle: React.CSSProperties = {\r\n        height: \"400px\",\r\n        tableLayout: \"fixed\"\r\n    }\r\n\r\n    return (\r\n        <Table bordered hover style={tableStyle}>\r\n            <thead>\r\n                <tr>\r\n                    {dayNames.map((d, index) =>\r\n                        <th style={{ padding: \"2px\", textAlign: \"center\" }} key={index}>{d}</th>\r\n                    )}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {rows}\r\n            </tbody>\r\n        </Table>\r\n    );\r\n}\r\n","import { Button, ButtonGroup, ButtonToolbar, Col } from \"react-bootstrap\";\r\nimport { AwalMonthEnum, displayIkasSarakName, displayMonthName, displayNasakName, IkasSarakEnum } from \"../enums/enum\";\r\nimport { AhierMonth } from \"../model/AhierDate\";\r\nimport { AwalMonth } from \"../model/AwalDate\";\r\nimport Helper from \"../utility/helper\";\r\nimport { SakawiType } from \"./calendar\";\r\n\r\ninterface MonthNavigationProps {\r\n    sakawiType: SakawiType;\r\n    currentAhierMonth?: AhierMonth;\r\n    currentAwalMonth?: AwalMonth;\r\n    currentGregoryMonth?: number;\r\n    currentGregoryYear?: number;\r\n    onSelectSakawiType: (type: SakawiType) => void\r\n    onClickToday: (type: SakawiType) => void;\r\n    onClickPreviousMonth: (type: SakawiType) => void;\r\n    onClickNextMonth: (type: SakawiType) => void;\r\n}\r\n\r\nexport const MonthNavigation = (props: MonthNavigationProps) => {\r\n    const currentGregoryMonth = props.currentGregoryMonth ? props.currentGregoryMonth + 1 : 1;\r\n\r\n    return (\r\n        <>\r\n            <Col md={4}>\r\n                <ButtonToolbar aria-label=\"Toolbar with button groups\" style={{ justifyContent: \"flex-start\" }}>\r\n                    <ButtonGroup aria-label=\"Type of calendar\">\r\n                        <Button variant=\"outline-secondary\" active={props.sakawiType === 'sakawiAhier'} onClick={() => props.onSelectSakawiType('sakawiAhier')}>Lịch Cham</Button>\r\n                        <Button variant=\"outline-secondary\" active={props.sakawiType === 'sakawiAwal'} onClick={() => props.onSelectSakawiType('sakawiAwal')}>Lịch Jawi</Button>\r\n                        <Button variant=\"outline-secondary\" active={props.sakawiType === 'sakawiGregory'} onClick={() => props.onSelectSakawiType('sakawiGregory')}>Dương lịch</Button>\r\n                    </ButtonGroup>\r\n                </ButtonToolbar>\r\n            </Col>\r\n            <Col md={5} style={{ textAlign: \"center\" }}>\r\n                {props.sakawiType === 'sakawiAhier' && props.currentAhierMonth &&\r\n                    <>\r\n                        <div>\r\n                            <label className='bilan-title'>{displayMonthName(props.currentAhierMonth.month).akharThrahName}</label>\r\n                            {' - '}<label className='bilan-title'>{displayNasakName(props.currentAhierMonth.year.nasak).akharThrahName}</label>\r\n                            {'   '}<label className='ikasSarak-title'>{displayIkasSarakName(props.currentAhierMonth.year.ikasSarak)}</label>\r\n                            {' - '}<label className='bilan-title'>{Helper.convertToChamDigitUnicode(props.currentAhierMonth.year.yearNumber ?? 0)}</label>\r\n                        </div>\r\n                        <h5>\r\n                            {displayMonthName(props.currentAhierMonth.month).rumiName} {`(${(props.currentAhierMonth.month + 1)})`}\r\n                            {' - '}{displayNasakName(props.currentAhierMonth.year.nasak).rumiName} {IkasSarakEnum[props.currentAhierMonth.year.ikasSarak]}\r\n                            {' - '}{props.currentAhierMonth.year.yearNumber}\r\n                        </h5>\r\n                    </>\r\n                }\r\n                {props.sakawiType === 'sakawiAwal' && props.currentAwalMonth &&\r\n                    <h5>\r\n                        {AwalMonthEnum[props.currentAwalMonth.month]} {`(${(props.currentAwalMonth.month + 1)})`}\r\n                        {' - '}{IkasSarakEnum[props.currentAwalMonth.year.ikasSarak]}\r\n                        {' - '}{props.currentAwalMonth.year.yearNumber}\r\n                    </h5>\r\n                }\r\n                {props.sakawiType === 'sakawiGregory' &&\r\n                    <h5>{`Tháng ${currentGregoryMonth} - ${props.currentGregoryYear}`}</h5>\r\n                }\r\n            </Col>\r\n            <Col md={3}>\r\n                <ButtonToolbar aria-label=\"Toolbar with button groups\" style={{ justifyContent: \"flex-end\" }}>\r\n                    <ButtonGroup aria-label=\"Third group\" style={{ marginRight: \".75em\" }}>\r\n                        <Button variant=\"secondary\" onClick={() => props.onClickToday(props.sakawiType)}>Hôm nay</Button>\r\n                    </ButtonGroup>\r\n                    <ButtonGroup aria-label=\"Navigate months\">\r\n                        <Button variant=\"secondary\" className=\"fa fa-chevron-left\" onClick={() => props.onClickPreviousMonth(props.sakawiType)} />\r\n                        <Button variant=\"secondary\" className=\"fa fa-chevron-right\" onClick={() => props.onClickNextMonth(props.sakawiType)} />\r\n                    </ButtonGroup>\r\n                </ButtonToolbar>\r\n            </Col>\r\n        </>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { AhierMonthEnum, GuecTypeEnum, GuenTypeEnum, IkasSarakEnum, NasakEnum } from \"../enums/enum\";\r\nimport { AhierMonth } from \"../model/AhierDate\";\r\nimport { AwalMonth } from \"../model/AwalDate\";\r\nimport { FullCalendarType } from \"../model/FullCalendarType\";\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport Helper from \"../utility/helper\";\r\nimport { SakawiType } from \"./calendar\";\r\nimport { MonthAhier } from \"./monthAhier\";\r\nimport { MonthAwal } from \"./monthAwal\";\r\nimport { MonthGregory } from \"./monthGregory\";\r\nimport { MonthNavigation } from \"./monthNavigation\";\r\n\r\ninterface MonthCalendarProps {\r\n    matrixSakawi: MatrixCalendarType[],\r\n    fullSakawi: FullCalendarType[]\r\n}\r\n\r\nexport const MonthCalendar = (props: MonthCalendarProps) => {\r\n    const initialAhierMonth: AhierMonth = { month: AhierMonthEnum.BilanSa, year: { nasak: NasakEnum.Pabuei, ikasSarak: IkasSarakEnum.JimLuic, yearNumber: 2019 } };\r\n    const initialAwalMonth: AwalMonth = { month: 0, year: { ikasSarak: 0, yearNumber: 1400 } };\r\n    const initialGregoryDate: Date = new Date();\r\n\r\n    const initialMatrixCalendarType: MatrixCalendarType = {\r\n        ahierMonth: initialAhierMonth,\r\n        dayNumbersOfAhierMonth: 0,\r\n        firstDayOfAhierMonth: 0,\r\n        hasGuen: false,\r\n        typeOfGuen: GuenTypeEnum.None,\r\n        hasGuec: false,\r\n        typeOfGuec: GuecTypeEnum.None,\r\n        dateOfGregoryCalendar: initialGregoryDate,\r\n        awalMonth: initialAwalMonth,\r\n        dayNumbersOfAwalMonth: 0,\r\n        firstDayOfAwalMonth: 0\r\n    }\r\n\r\n    const [sakawiType, setSakawiType] = useState<SakawiType>('sakawiAhier');\r\n    const [currentAhierMonthMatrix, setCurrentAhierMonthMatrix] = useState<MatrixCalendarType>(initialMatrixCalendarType);\r\n    const [currentAwalMonthMatrix, setCurrentAwalMonthMatrix] = useState<MatrixCalendarType>(initialMatrixCalendarType);\r\n    const [currentGregoryMonth, setCurrentGregoryMonth] = useState(new Date().getMonth());\r\n    const [currentGregoryYear, setCurrentGregoryYear] = useState(new Date().getFullYear());\r\n\r\n    React.useEffect(() => {\r\n        function init() {\r\n            // Set current matrix item \r\n            const currentAhierMonthMatrix = props.matrixSakawi.filter(m =>\r\n                Helper.addGregoryDays(m.dateOfGregoryCalendar, m.dayNumbersOfAhierMonth) > new Date())[0];\r\n            if (currentAhierMonthMatrix) {\r\n                setCurrentAhierMonthMatrix(currentAhierMonthMatrix);\r\n            }\r\n\r\n            const currentAwalMonthMatrix = props.matrixSakawi.filter(m =>\r\n                Helper.addGregoryDays(m.dateOfGregoryCalendar, m.dayNumbersOfAwalMonth) > new Date())[0];\r\n            if (currentAwalMonthMatrix) {\r\n                setCurrentAwalMonthMatrix(currentAwalMonthMatrix);\r\n            }\r\n        }\r\n\r\n        init();\r\n    }, [props.matrixSakawi]);\r\n\r\n    function handleOnClickToCurrentMonth() {\r\n        if (sakawiType === \"sakawiAhier\") {\r\n            const currentAhierMonth = props.matrixSakawi.filter(m =>\r\n                Helper.addGregoryDays(m.dateOfGregoryCalendar, m.dayNumbersOfAhierMonth) > new Date())[0];\r\n            if (currentAhierMonth) {\r\n                setCurrentAhierMonthMatrix(currentAhierMonth);\r\n            }\r\n        } else if (sakawiType === \"sakawiAwal\") {\r\n            const currentAwalMonth = props.matrixSakawi.filter(m =>\r\n                Helper.addGregoryDays(m.dateOfGregoryCalendar, m.dayNumbersOfAwalMonth) > new Date())[0];\r\n            if (currentAwalMonth) {\r\n                setCurrentAwalMonthMatrix(currentAwalMonth);\r\n            }\r\n        } else {\r\n            setCurrentGregoryMonth(new Date().getMonth());\r\n            setCurrentGregoryYear(new Date().getFullYear());\r\n        }\r\n    }\r\n\r\n    function handleOnClickPreviousMonth() {\r\n        if (sakawiType === \"sakawiAhier\") {\r\n            const index = props.matrixSakawi.findIndex(x => JSON.stringify(x) === JSON.stringify(currentAhierMonthMatrix));\r\n            setCurrentAhierMonthMatrix(props.matrixSakawi[index - 1]);\r\n        } else if (sakawiType === \"sakawiAwal\") {\r\n            const index = props.matrixSakawi.findIndex(x => JSON.stringify(x) === JSON.stringify(currentAwalMonthMatrix));\r\n            setCurrentAwalMonthMatrix(props.matrixSakawi[index - 1]);\r\n        } else {\r\n            if (currentGregoryMonth === 0) {\r\n                setCurrentGregoryMonth(11);\r\n                setCurrentGregoryYear(currentGregoryYear - 1);\r\n            } else {\r\n                setCurrentGregoryMonth(currentGregoryMonth - 1);\r\n                setCurrentGregoryYear(currentGregoryYear);\r\n            }\r\n        }\r\n    }\r\n\r\n    function handleOnClickNextMonth() {\r\n        if (sakawiType === \"sakawiAhier\") {\r\n            const index = props.matrixSakawi.findIndex(x => JSON.stringify(x) === JSON.stringify(currentAhierMonthMatrix));\r\n            setCurrentAhierMonthMatrix(props.matrixSakawi[index + 1]);\r\n        } else if (sakawiType === \"sakawiAwal\") {\r\n            const index = props.matrixSakawi.findIndex(x => JSON.stringify(x) === JSON.stringify(currentAwalMonthMatrix));\r\n            setCurrentAwalMonthMatrix(props.matrixSakawi[index + 1]);\r\n        } else {\r\n            if (currentGregoryMonth === 11) {\r\n                setCurrentGregoryMonth(0);\r\n                setCurrentGregoryYear(currentGregoryYear + 1);\r\n            } else {\r\n                setCurrentGregoryMonth(currentGregoryMonth + 1);\r\n                setCurrentGregoryYear(currentGregoryYear);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <MonthNavigation\r\n                    sakawiType={sakawiType}\r\n                    currentAhierMonth={currentAhierMonthMatrix.ahierMonth}\r\n                    currentAwalMonth={currentAwalMonthMatrix.awalMonth}\r\n                    currentGregoryMonth={currentGregoryMonth}\r\n                    currentGregoryYear={currentGregoryYear}\r\n                    onClickToday={handleOnClickToCurrentMonth}\r\n                    onClickPreviousMonth={handleOnClickPreviousMonth}\r\n                    onClickNextMonth={handleOnClickNextMonth}\r\n                    onSelectSakawiType={type => setSakawiType(type)}\r\n                />\r\n            </Row>\r\n            <Row>\r\n                <Col md={12}>\r\n                    {sakawiType === 'sakawiAhier' &&\r\n                        <MonthAhier\r\n                            matrixSakawi={props.matrixSakawi}\r\n                            fullSakawi={props.fullSakawi}\r\n                            currentAhierMonthMatrix={currentAhierMonthMatrix}\r\n                        />\r\n                    }\r\n                    {sakawiType === 'sakawiAwal' &&\r\n                        <MonthAwal\r\n                            matrixSakawi={props.matrixSakawi}\r\n                            fullSakawi={props.fullSakawi}\r\n                            currentAwalMonthMatrix={currentAwalMonthMatrix}\r\n                        />\r\n                    }\r\n                    {sakawiType === 'sakawiGregory' &&\r\n                        <MonthGregory\r\n                            matrixSakawi={props.matrixSakawi}\r\n                            fullSakawi={props.fullSakawi}\r\n                            currentGregoryMonth={currentGregoryMonth ?? 0}\r\n                            currentGregoryYear={currentGregoryYear ?? new Date().getFullYear()}\r\n                        />\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { Alert, Col, Container, Form, Row } from \"react-bootstrap\";\r\nimport { FullCalendarType } from \"../model/FullCalendarType\";\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport Helper from \"../utility/helper\";\r\nimport { CountDownBar, CountDownBarProps } from \"./countDownBar\";\r\nimport { MonthCalendar } from \"./monthCalendar\";\r\n\r\nexport declare type SakawiType = 'sakawiAwal' | 'sakawiAhier' | 'sakawiGregory';\r\nexport declare type AreaType = 'NinhThuan' | 'BinhThuan';\r\n\r\nexport const Calendar = () => {\r\n    const [showWarning, setShowWarning] = useState(true);\r\n    const [areaType, setAreaType] = useState<AreaType>('BinhThuan');\r\n    const [matrixSakawi, setMatrixSakawi] = useState<MatrixCalendarType[]>([]);\r\n    const [fullSakawi, setFullSakawi] = useState<FullCalendarType[]>([]);\r\n    const [nextEvents, setNextEvents] = useState<CountDownBarProps[]>([]);\r\n\r\n    React.useEffect(() => {\r\n        function init() {\r\n            // Build matrix Calendar\r\n            let matrix = Helper.buildMatrixCalendar(2046);\r\n            //let matrix = Helper.buildMatrixCalendar(2023);\r\n            setMatrixSakawi(matrix.matrixCalendar);\r\n            //console.log('matrixCalendar', JSON.stringify(matrix.matrixCalendar));\r\n            setFullSakawi(matrix.fullCalendar);\r\n            //console.log('fullCalendar', JSON.stringify(matrix.fullCalendar));\r\n\r\n            //TO-TEST\r\n            /*const addedAwalMonth = Helper.addAwalMonths({ month: AwalMonthEnum.Julhiijaah, year: { ikasSarak: IkasSarakEnum.Dal, yearNumber: 1443 } }, 1);\r\n            console.log('addedAwalMonth', JSON.stringify(addedAwalMonth));*/\r\n\r\n            /*const firstDateOfAwalMonth: AwalDate = { date: 1, awalMonth: { month: AwalMonthEnum.Julhiijaah, year: { ikasSarak: IkasSarakEnum.Dal, yearNumber: 1443 } } };\r\n            const addedAwalDate = Helper.addAwalDays(firstDateOfAwalMonth, 27);\r\n            console.log('fullCalfirstDateOfAwalMonthendar', JSON.stringify(firstDateOfAwalMonth));\r\n            console.log('addedAwalDate', JSON.stringify(addedAwalDate));*/\r\n\r\n            const nextEvents = Helper.getNextEvents(matrix.fullCalendar);\r\n            setNextEvents(nextEvents);\r\n        }\r\n\r\n        init();\r\n    }, []);\r\n\r\n    return (\r\n        <Container>\r\n            {showWarning &&\r\n                <Row>\r\n                    <Col sm={12} md={12} lg={12}>\r\n                        <Alert variant='info' onClose={() => setShowWarning(false)} dismissible>\r\n                            <Alert.Heading>Lưu ý!</Alert.Heading>\r\n                            - Ứng dụng đang trong quá trình phát triển nên không tránh khỏi những thiếu sót, rất mong nhận được nhiều góp ý để sản phẩm được hoàn thiện hơn.\r\n                            <br />- Ứng dụng này chỉ mang tính chất tham khảo, Sakawi chính thức được Hội đồng Chức sắc phát hành từng năm.\r\n                        </Alert>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            {/* TODO: show radio Sakawi NT or BT */}\r\n            <Row>\r\n                <Col md={4}>\r\n                    <Form>\r\n                        <div className=\"mb-3\">\r\n                            <Form.Check\r\n                                inline\r\n                                disabled\r\n                                type={\"radio\"}\r\n                                label={`Sakawi Ninh Thuận`}\r\n                                checked={areaType === \"NinhThuan\"}\r\n                                onChange={() => { setAreaType('NinhThuan') }}\r\n                            />\r\n                            <Form.Check\r\n                                inline\r\n                                type={\"radio\"}\r\n                                label={`Sakawi Bình Thuận`}\r\n                                checked={areaType === \"BinhThuan\"}\r\n                                onChange={() => { setAreaType('BinhThuan') }}\r\n                            />\r\n                        </div>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col sm={12} md={12} lg={12}>\r\n                    {nextEvents.map((item, index) =>\r\n                        <CountDownBar key={index} eventType={item.eventType} eventDate={item.eventDate} />\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n            {\r\n                matrixSakawi.length > 0 &&\r\n                <Row>\r\n                    <MonthCalendar\r\n                        matrixSakawi={matrixSakawi}\r\n                        fullSakawi={fullSakawi}\r\n                    />\r\n                </Row>\r\n            }\r\n            {/*{\r\n                <Row>\r\n                    <YearCalendar\r\n                        matrixSakawi={matrixSakawi}\r\n                        fullSakawi={fullSakawi}\r\n                    />\r\n                </Row>\r\n            }*/}\r\n        </Container>\r\n    );\r\n}","import { Col, Container, Nav, Navbar, Row } from \"react-bootstrap\";\r\n\r\ninterface LayoutProps {\r\n    children: JSX.Element;\r\n}\r\n\r\nconst footerStyle: React.CSSProperties = {\r\n    background: \"#20232a\",\r\n    color: \"white\",\r\n    padding: \"15px\",\r\n    textAlign: \"center\",\r\n    justifyContent: \"center\"\r\n}\r\n\r\nexport const Layout = (props: LayoutProps) => {\r\n    return (\r\n        <Container fluid>\r\n            {/* Header */}\r\n            <Row>\r\n                <Col style={{ paddingRight: 0, paddingLeft: 0 }}>\r\n                    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n                        <Navbar.Brand href=\"#home\"><label className=\"logo\">꩜</label><label className=\"branding-text\">SAKAWI</label></Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                            <Nav className=\"mr-auto my-2 my-lg-0\"\r\n                                style={{ maxHeight: '100px' }}\r\n                                navbarScroll>\r\n                                <Nav.Link href=\"#\">Trang chủ</Nav.Link>\r\n                                <Nav.Link href=\"#\">Tiện ích</Nav.Link>\r\n                                <Nav.Link href=\"#\">Tài liệu</Nav.Link>\r\n                                <Nav.Link href=\"#\">Blog</Nav.Link>\r\n                                <Nav.Link href=\"#\">Hướng dẫn</Nav.Link>\r\n                                <Nav.Link href=\"#\">Chúng tôi</Nav.Link>\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Navbar>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n            {/* Body */}\r\n            <Row>\r\n                {/* <Col sm={2}>\r\n                    <Card>\r\n                        <ListGroup>\r\n                            <ListGroup.Item>Lịch tháng</ListGroup.Item>\r\n                            <ListGroup.Item>Lịch năm</ListGroup.Item>\r\n                            <ListGroup.Item>Sự kiện trong năm</ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col> */}\r\n                <Col sm={12} md={12} lg={12}>\r\n                    {props.children}\r\n                </Col>\r\n            </Row>\r\n            {/* Fotter */}\r\n            <Row>\r\n                <Col style={{ paddingRight: 0, paddingLeft: 0 }}>\r\n                    <p style={footerStyle}>{`© ${new Date().getFullYear()} Sakawi`}</p>\r\n                </Col>\r\n            </Row>\r\n        </Container >\r\n    );\r\n}","import React from 'react';\r\n//import logo from './logo.svg';\r\nimport './App.css';\r\nimport { Calendar } from './components/calendar';\r\nimport { Layout } from './Layout';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Layout>\r\n        <Calendar/>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}