{"version":3,"sources":["Layout.tsx","pages/documentPage.tsx","enums/enum.ts","utility/constant.ts","utility/helper.ts","components/yearNavigation.tsx","components/eventCanlendar.tsx","pages/eventCalendarPage.tsx","components/countDownBar.tsx","components/dayDetails.tsx","components/monthAhier.tsx","components/monthAwal.tsx","components/monthGregory.tsx","components/monthNavigation.tsx","components/monthCalendar.tsx","pages/monthCalendarPage.tsx","App.tsx","index.tsx"],"names":["footerStyle","background","color","padding","textAlign","justifyContent","Layout","props","Container","fluid","Row","Col","style","paddingRight","paddingLeft","Navbar","bg","variant","expand","Brand","href","className","Toggle","Collapse","id","Nav","maxHeight","navbarScroll","Link","minHeight","sm","md","lg","children","Date","getFullYear","target","rel","DocumentPage","MonthEnum","DayEnum","IkasSarakEnum","NasakEnum","AwalMonthEnum","AhierMonthEnum","GuecTypeEnum","GuenTypeEnum","displayAhierMonthName","month","_akharThrahName","_rumiName","akharThrahName","rumiName","displayAwalMonthName","displayNasakName","nasak","displayIkasSarakName","ikasSarak","result","firstDateOfSakawiAwal_Lieh_1407","firstDateOfSakawiAhier_InaGirai_Lieh_1988","awalYearArray","no","name","Liéh","numberOfDays","Hak","Jim","Jây","Dal","Bak","Waw","JimLuic","awalMonthArray","Muharam","Syafar","Rabiulawal","Rabiulakhir","Jamadilawal","Jamadilakhir","Rejab","Sykban","Ramadan","Syawal","Julkaejah","Julhiijaah","Helper","currentDate","addedDays","getDayNumbersOfAwalMonth","awalMonth","year","newDays","date","addAwalMonths","previousMonth","currentMonth","addedMonths","newMonth","quotient","Math","floor","getMod","addAwalYears","currentYear","addedYears","newIkasSarak","yearNumber","numberOfDay","yearName","yearItem","sakawiTakaiCiimConfig","filter","x","ArabYear","differenceInDays","getTime","remain","abs","awalYearNumber","awalYear","awalDate","totalYears","i","length","numberDaysOfCurrentYear","totalMonths","j","maxtrixCalendar","getActualDayNumbersOfAhierMonth","ahierMonth","BilanSa","Takuh","addAhierMonths","numberOfMonths","getMonthNumbersOfAhierYear","addAhierYears","previousYear","newNasak","remainNasak","BilanKlau","BilanLima","BilanTajuh","BilanSalipan","BilanPuis","BilanDua","BilanPak","BilanNem","BilanDalipan","BilanSapluh","BilanMak","checkIsEndOfLongLeapPeriod144Years","BilanBhang","index","findIndex","JSON","stringify","dayNumbersOfAhierMonth","newDt","setDate","getDate","toYearAhier","areaType","matrixCalendar","fullCalendar","startAhierYear","InâGirai","numberOfAhierYear","newGregoryDate","y","ahierYear","matrixPerYear","renderMatrixPerYear","validMatrix","applyGuenGuecRules","push","calendarDetails","renderCalendarDetails","lastMonthItem","addGregoryDays","dateOfGregoryCalendar","firstGregoryDate","addedGregoryDays","numberOfAhierMonth","m","getExpectedDayNumbersOfAhierMonth","firstDayOfAhierMonth","getDay","getAwalDateByGregoryDate","dayNumbersOfAwalMonth","firstDayOfAwalMonth","Number","parseInt","getStartDayByAwalMonth","ahierMonthItem","hasGuen","typeOfGuen","None","hasGuec","typeOfGuec","monthGuen","monthGuec","guecTypeInNextYear","hasGuenRuleInNextYear","element","checkIsGuenToAddDay","GuenByNormalRule","newDate","checkIsGuecToMinusDay","GuecByNormalRule","lastMonthOfCurrentYear","firstGregoryDateOfNextYear","checkHasGuecRuleInNextYear","checkHasGuenRuleInNextYear","getAhierAwalDaysGap","firstDateOfAhierMonth","firstDateOfAwalMonth","firstDateOfGregoryMonth","daysGap","days","addedAhierDate","addAhierDays","dateAhier","addedAwalDate","addAwalDays","monthDetailsCalendar","dateAwal","dateGregory","undefined","firstGregoryDateNextYear","nextAhierYear","matrixNextYear","firstMonth","isKateRamawanConflict","some","item","GuecByHareiButSukRule","GuecByKateRamawanRule","GuecByRijaNagarRule","n","latinNumber","ChamDigitArr","EnglishDigits","reg","RegExp","toString","replace","c","indexOf","addedAkaokThun","addedRijaNagar","addedKate","addedRamawan","forEach","eventGregoryDate","eventType","eventDate","sakawiType","dd","mm","getMonth","chamEventDaysConfig","YearNavigation","currentAhierYear","convertToChamDigitUnicode","currentAwalYear","currentGregoryYear","ButtonToolbar","ButtonGroup","marginRight","Button","onClick","onClickToday","onClickPreviousYear","onClickNextYear","EventCalendar","initialAhierYear","Pabuei","setSakawiType","useState","setCurrentAhierYear","React","useEffect","currentAhierMonthMatrix","matrixSakawi","init","fullSakawi","newAhierYear","onSelectSakawiType","type","Table","hover","colSpan","datesOfAhierYear","nextEvents","getEventsInAhierYear","rows","displayDateString","backgroundColor","displayEventDay","fontSize","latinName","vnName","renderRows","EventCalendarPage","setAreaType","setMatrixSakawi","matrixSakawiNT","setFullSakawi","fullSakawiNT","loading","setLoading","Spinner","animation","handleOnchangeArea","matrixSakawiBT","fullSakawiBT","Form","Check","inline","label","checked","onChange","CountDownBar","percent","setPercent","setDays","timerId","setTimeout","now","distance","clearTimeout","dateStr","variantType","displayEventName","marginBottom","fontWeight","ProgressBar","height","DayDetails","opacityValue","toLocaleDateString","currentAhierMonth","currentAwalMonth","currentGregoryMonth","tdStyle","opacity","gregoryDateClass","ahierDateClass","awalDateClass","ikasSarakMonthCellClass","showLatinNumberDate","xs","monthGregogy","displayGregoryDate","dayNumbersOfCurrentAhierMonth","getEvents","map","monthAwal","bingun","klem","margin","dayNumbersOfCurrentAwalMonth","displayAwalDate","monthAhier","displayAhierDate","MonthAhier","datesOfCurrentMonth","setDatesOfCurrentMonth","firstIndex","lastIndex","cells","bordered","tableLayout","d","MonthAwal","currentAwalMonthMatrix","MonthGregory","MonthNavigation","active","onClickPreviousMonth","onClickNextMonth","MonthCalendar","initialAhierMonth","initialGregoryDate","initialMatrixCalendarType","setCurrentAhierMonthMatrix","setCurrentAwalMonthMatrix","setCurrentGregoryMonth","setCurrentGregoryYear","setShowLatinNumberDate","MonthCalendarPage","showWarning","setShowWarning","setNextEvents","getNextEvents","Alert","onClose","dismissible","Heading","Accordion","defaultActiveKey","Card","Header","as","eventKey","Body","App","setMatrixSakawiNT","setMatrixSakawiBT","setFullSakawiNT","setFullSakawiBT","matrixNT","buildMatrixCalendar","matrixBT","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8bbada2a.chunk.js","sourcesContent":["import { Col, Container, Nav, Navbar, Row } from \"react-bootstrap\";\r\n\r\ninterface LayoutProps {\r\n    children: JSX.Element;\r\n}\r\n\r\nconst footerStyle: React.CSSProperties = {\r\n    background: \"#343A40\",\r\n    color: \"white\",\r\n    padding: \"10px\",\r\n    textAlign: \"center\",\r\n    justifyContent: \"center\"\r\n}\r\n\r\nexport const Layout = (props: LayoutProps) => {\r\n    return (\r\n        <Container fluid>\r\n            {/* Header */}\r\n            <Row>\r\n                <Col style={{ paddingRight: 0, paddingLeft: 0 }}>\r\n                    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n                        <Container>\r\n                            <Navbar.Brand href=\"/\"><label className=\"logo\">꩜</label><label className=\"branding-text\">SAKAWI</label></Navbar.Brand>\r\n                            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                                <Nav className=\"mr-auto my-2 my-lg-0\"\r\n                                    style={{ maxHeight: '100px' }}\r\n                                    navbarScroll>\r\n                                    <Nav.Link href=\"#/months\">Lịch tháng</Nav.Link>\r\n                                    <Nav.Link href=\"#/events\">Lịch sự kiện</Nav.Link>\r\n                                    <Nav.Link href=\"#/docs\">Tài liệu</Nav.Link>\r\n                                </Nav>\r\n                            </Navbar.Collapse>\r\n                        </Container>\r\n                    </Navbar>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n            {/* Body */}\r\n            <Row style={{ minHeight: 600 }}>\r\n                <Col sm={12} md={12} lg={12}>\r\n                    {props.children}\r\n                </Col>\r\n            </Row>\r\n            {/* Footer */}\r\n            <Row>\r\n                <Col style={footerStyle}>\r\n                    {`© ${new Date().getFullYear()} Sakawi - Lịch Cham`}\r\n                    <br />\r\n                    {'Dự án được phát triển bởi '}\r\n                    <a href=\"https://tanginpantangin.com/#!/converter\" target=\"_blank\" rel=\"noreferrer\">Tangin Pan Tangin</a>\r\n                    {' & '}\r\n                    <a href=\"http://shopcham.com\" target=\"_blank\" rel=\"noreferrer\">Shop Cham</a>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}","import { Container } from \"react-bootstrap\"\r\nimport { Layout } from \"../Layout\"\r\n\r\nexport const DocumentPage = () => {\r\n\r\n    return (\r\n        <Layout>\r\n            <Container>\r\n                <h6>Nội dung sẽ được cập nhật sớm</h6>\r\n            </Container>\r\n        </Layout>\r\n    )\r\n}","export declare type VariantType = 'primary' | 'info' | 'secondary' | 'success' | 'warning' | 'danger' | 'light' | 'link';\r\nexport declare type EventType = 'AkaokThun' | 'RijaNagar' | 'KatePaleiHamuTanran' | 'KateAngaokBimong' | 'CaMbur' | 'TamaRicaowRamawan' | 'TalaihAekRamawan' | 'MukTrun' | 'OngTrun' | 'IkakWaha' | 'TalaihWaha' | 'YuerYang';\r\nexport declare type SakawiType = 'sakawiAwal' | 'sakawiAhier' | 'sakawiGregory';\r\nexport declare type AreaType = 'NinhThuan' | 'BinhThuan';\r\n\r\nexport enum MonthEnum {\r\n    January = 0,\r\n    February,\r\n    March,\r\n    April,\r\n    May,\r\n    June,\r\n    July,\r\n    August,\r\n    September,\r\n    October,\r\n    November,\r\n    December\r\n}\r\n\r\nexport enum DayEnum {\r\n    Sunday = 0,\r\n    Monday,\r\n    Tuesday,\r\n    Wednesday,\r\n    Thursday,\r\n    Friday,\r\n    Saturday\r\n}\r\n\r\nexport enum IkasSarakEnum {\r\n    Liéh = 0,\r\n    Hak,\r\n    Jim,\r\n    Jây,\r\n    Dal,\r\n    Bak,\r\n    Waw,\r\n    JimLuic\r\n}\r\n\r\nexport enum NasakEnum {\r\n    Takuh = 0,\r\n    Kabaw,\r\n    Rimaong,\r\n    Tapay,\r\n    InâGirai,\r\n    UlaAnaih,\r\n    Asaih,\r\n    Pabaiy,\r\n    Kra,\r\n    Manuk,\r\n    Asau,\r\n    Pabuei\r\n}\r\n\r\nexport enum AwalMonthEnum {\r\n    Muharam = 0,\r\n    Syafar,\r\n    Rabiulawal,\r\n    Rabiulakhir,\r\n    Jamadilawal,\r\n    Jamadilakhir,\r\n    Rejab,\r\n    Sykban,\r\n    Ramadan,\r\n    Syawal,\r\n    Julkaejah,\r\n    Julhiijaah\r\n}\r\n\r\nexport enum AhierMonthEnum {\r\n    BilanSa = 0,\r\n    BilanDua,\r\n    BilanKlau,\r\n    BilanPak,\r\n    BilanLima,\r\n    BilanNem,\r\n    BilanTajuh,\r\n    BilanDalipan,\r\n    BilanSalipan,\r\n    BilanSapluh,\r\n    BilanPuis,\r\n    BilanMak,\r\n    BilanBhang\r\n}\r\n\r\nexport enum GuecTypeEnum {\r\n    None = -1,\r\n    GuecByNormalRule,\r\n    GuecByHareiButSukRule,\r\n    GuecByRijaNagarRule,\r\n    GuecByKateRamawanRule,\r\n}\r\n\r\nexport enum GuenTypeEnum {\r\n    None = -1,\r\n    GuenByNormalRule\r\n}\r\n\r\nexport function displayAhierMonthName(month: AhierMonthEnum) {\r\n    let _akharThrahName = '';\r\n    let _rumiName = '';\r\n\r\n    switch (month) {\r\n        case 0:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨧꨩ';\r\n            _rumiName = 'Bilan sa';\r\n            break;\r\n        case 1:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨕꨶꨩ';\r\n            _rumiName = 'Bilan dua';\r\n            break;\r\n        case 2:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨆꨵꨮꨭ';\r\n            _rumiName = 'Bilan klau';\r\n            break;\r\n        case 3:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨛꨩꩀ';\r\n            _rumiName = 'Bilan pak';\r\n            break;\r\n        case 4:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨤꨪꨟꨩ';\r\n            _rumiName = 'Bilan limâ';\r\n            break;\r\n        case 5:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨗꨮꩌ';\r\n            _rumiName = 'Bilan nem';\r\n            break;\r\n        case 6:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨓꨎꨭꩍ';\r\n            _rumiName = 'Bilan tajuh';\r\n            break;\r\n        case 7:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨕꨤꨪꨚꩆ';\r\n            _rumiName = 'Bilan dalipan';\r\n            break;\r\n        case 8:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨧꨤꨪꨚꩆ';\r\n            _rumiName = 'Bilan salipan';\r\n            break;\r\n        case 9:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨧꨚꨵꨭꩍ';\r\n            _rumiName = 'Bilan sapluh';\r\n            break;\r\n        case 10:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨚꨶꨪꩋ';\r\n            _rumiName = 'Bilan puis';\r\n            break;\r\n        case 11:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨠꩀ';\r\n            _rumiName = 'Bilan mak';\r\n            break;\r\n        case 12:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨞꩃ';\r\n            _rumiName = 'Bilan bhang';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return {\r\n        akharThrahName: _akharThrahName,\r\n        rumiName: _rumiName\r\n    }\r\n}\r\n\r\nexport function displayAwalMonthName(month: AwalMonthEnum) {\r\n    let _akharThrahName = '';\r\n    let _rumiName = '';\r\n\r\n    switch (month) {\r\n        case 0:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨀꨩꨟꨣꨮꩌ';\r\n            _rumiName = 'Bilan sa';\r\n            break;\r\n        case 1:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨦꩀ ꨜꨯꩉ';\r\n            _rumiName = 'Bilan dua';\r\n            break;\r\n        case 2:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨣꨩꨝꨪꨂꩊ ꨀꨥꩊ';\r\n            _rumiName = 'Bilan klau';\r\n            break;\r\n        case 3:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨣꨝꨪꨂꩊ ꨀꨨꨳꨯꨮꩉ';\r\n            _rumiName = 'Bilan pak';\r\n            break;\r\n        case 4:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨎꨩꨟꨕꨪꩆ ꨀꨥꨤꨩ';\r\n            _rumiName = 'Bilan limâ';\r\n            break;\r\n        case 5:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨎꨩꨟꨕꨪꩆ ꨀꨨꨳꨯꨮꩉ';\r\n            _rumiName = 'Bilan nem';\r\n            break;\r\n        case 6:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨣꨎꨮꩇ';\r\n            _rumiName = 'Bilan tajuh';\r\n            break;\r\n        case 7:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨦꩀ ꨝꩆ';\r\n            _rumiName = 'Bilan dalipan';\r\n            break;\r\n        case 8:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨣꨟꨥꨩꩆ';\r\n            _rumiName = 'Bilan salipan';\r\n            break;\r\n        case 9:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨦꨩꨥꩊ';\r\n            _rumiName = 'Bilan sapluh';\r\n            break;\r\n        case 10:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨕꨭꩊ ꨆꨎꨪꩍ';\r\n            _rumiName = 'Bilan puis';\r\n            break;\r\n        case 11:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨕꨭꩊ ꨆꨁꨎꨫ';\r\n            _rumiName = 'Bilan mak';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return {\r\n        akharThrahName: _akharThrahName,\r\n        rumiName: _rumiName\r\n    }\r\n}\r\n\r\nexport function displayNasakName(nasak: NasakEnum) {\r\n    let _akharThrahName = '';\r\n    let _rumiName = '';\r\n\r\n    switch (nasak) {\r\n        case 0:\r\n            _akharThrahName = 'ꨓꨆꨭꩍ';\r\n            _rumiName = 'Takuh';\r\n            break;\r\n        case 1:\r\n            _akharThrahName = 'ꨆꨝꨥ';\r\n            _rumiName = 'Kabaw';\r\n            break;\r\n        case 2:\r\n            _akharThrahName = 'ꨣꨪꨟꨯꨱꩃ';\r\n            _rumiName = 'Rimaong';\r\n            break;\r\n        case 3:\r\n            _akharThrahName = 'ꨓꨛꩈ';\r\n            _rumiName = 'Tapay';\r\n            break;\r\n        case 4:\r\n            _akharThrahName = 'ꨁꨗꨩ ꨈꨪꨣꩈ';\r\n            _rumiName = 'Inâ Giray';\r\n            break;\r\n        case 5:\r\n            _akharThrahName = 'ꨂꨤꨩ ꨗꨰꩍ';\r\n            _rumiName = 'Ula naih';\r\n            break;\r\n        case 6:\r\n            _akharThrahName = 'ꨀꨧꨰꩍ';\r\n            _rumiName = 'Asaih';\r\n            break;\r\n        case 7:\r\n            _akharThrahName = 'ꨚꨝꨰꩈ';\r\n            _rumiName = 'Pabaiy';\r\n            break;\r\n        case 8:\r\n            _akharThrahName = 'ꨆꨴꨩ';\r\n            _rumiName = 'Kra';\r\n            break;\r\n        case 9:\r\n            _akharThrahName = 'ꨟꨗꨭꩀ';\r\n            _rumiName = 'Mânuk';\r\n            break;\r\n        case 10:\r\n            _akharThrahName = 'ꨀꨧꨮꨭ';\r\n            _rumiName = 'Asau';\r\n            break;\r\n        case 11:\r\n            _akharThrahName = 'ꨚꨝꨶꨬ';\r\n            _rumiName = 'Pabuei';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return {\r\n        akharThrahName: _akharThrahName,\r\n        rumiName: _rumiName\r\n    }\r\n}\r\n\r\nexport function displayIkasSarakName(ikasSarak: IkasSarakEnum) {\r\n    let result = '';\r\n\r\n    switch (ikasSarak) {\r\n        case 0:\r\n            result = '1';\r\n            break;\r\n        case 1:\r\n            result = '5';\r\n            break;\r\n        case 2:\r\n            result = '3';\r\n            break;\r\n        case 3:\r\n            result = '7';\r\n            break;\r\n        case 4:\r\n            result = '4';\r\n            break;\r\n        case 5:\r\n            result = '2';\r\n            break;\r\n        case 6:\r\n            result = '6';\r\n            break;\r\n        case 7:\r\n            result = '3';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n","import { AwalMonthEnum, IkasSarakEnum } from \"../enums/enum\";\r\n\r\nexport const firstDateOfSakawiAwal_Lieh_1407 = new Date(1986, 8, 5);//05/09/1986\r\nexport const yearNumberOfSakawiAwal_Lieh_1407 = 1407;\r\nexport const firstDateOfSakawiAhier_InaGirai_Lieh_1988 = new Date(1988, 3, 16);//16/04/1988\r\nexport const totalDaysOf8AwalYearCycle = 2835;\r\n\r\nexport const awalYearArray: { no: number; name: IkasSarakEnum; numberOfDays: number }[] = [\r\n    { no: 1, name: IkasSarakEnum.Liéh, numberOfDays: 354 },\r\n    { no: 2, name: IkasSarakEnum.Hak, numberOfDays: 355 },\r\n    { no: 3, name: IkasSarakEnum.Jim, numberOfDays: 354 },\r\n    { no: 4, name: IkasSarakEnum.Jây, numberOfDays: 354 },\r\n    { no: 5, name: IkasSarakEnum.Dal, numberOfDays: 355 },\r\n    { no: 6, name: IkasSarakEnum.Bak, numberOfDays: 354 },\r\n    { no: 7, name: IkasSarakEnum.Waw, numberOfDays: 354 },\r\n    { no: 8, name: IkasSarakEnum.JimLuic, numberOfDays: 355 }\r\n];\r\n\r\nexport const awalMonthArray: { no: number; name: AwalMonthEnum; numberOfDays: number }[] = [\r\n    { no: 1, name: AwalMonthEnum.Muharam, numberOfDays: 30 },\r\n    { no: 2, name: AwalMonthEnum.Syafar, numberOfDays: 29 },\r\n    { no: 3, name: AwalMonthEnum.Rabiulawal, numberOfDays: 30 },\r\n    { no: 4, name: AwalMonthEnum.Rabiulakhir, numberOfDays: 29 },\r\n    { no: 5, name: AwalMonthEnum.Jamadilawal, numberOfDays: 30 },\r\n    { no: 6, name: AwalMonthEnum.Jamadilakhir, numberOfDays: 29 },\r\n    { no: 7, name: AwalMonthEnum.Rejab, numberOfDays: 30 },\r\n    { no: 8, name: AwalMonthEnum.Sykban, numberOfDays: 29 },\r\n    { no: 9, name: AwalMonthEnum.Ramadan, numberOfDays: 30 },\r\n    { no: 10, name: AwalMonthEnum.Syawal, numberOfDays: 29 },\r\n    { no: 11, name: AwalMonthEnum.Julkaejah, numberOfDays: 30 },\r\n    { no: 12, name: AwalMonthEnum.Julhiijaah, numberOfDays: 30 }\r\n]","import { CountDownBarProps } from '../components/countDownBar';\r\nimport chamEventDaysConfig from '../data/ChamEventDays.json';\r\nimport sakawiTakaiCiimConfig from '../data/SakawiTakaiCiim.json';\r\nimport { AhierMonthEnum, AreaType, AwalMonthEnum, EventType, GuecTypeEnum, GuenTypeEnum, IkasSarakEnum, NasakEnum } from \"../enums/enum\";\r\nimport { AhierDate, AhierMonth, AhierYear } from \"../model/AhierDate\";\r\nimport { AwalDate, AwalMonth, AwalYear } from '../model/AwalDate';\r\nimport { FullCalendarType } from '../model/FullCalendarType';\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport { awalMonthArray, awalYearArray, firstDateOfSakawiAhier_InaGirai_Lieh_1988, firstDateOfSakawiAwal_Lieh_1407, totalDaysOf8AwalYearCycle, yearNumberOfSakawiAwal_Lieh_1407 } from './constant';\r\n\r\nexport default class Helper {\r\n    //#region Awal\r\n    static addAwalDays(currentDate: AwalDate, addedDays: number) {\r\n        let numberOfDays = Helper.getDayNumbersOfAwalMonth(currentDate.awalMonth.year, currentDate.awalMonth.month);\r\n        let newDays = currentDate.date + addedDays;\r\n        let result: AwalDate = {\r\n            date: 1,\r\n            awalMonth: {\r\n                month: AwalMonthEnum.Jamadilakhir,\r\n                year: { ikasSarak: IkasSarakEnum.Liéh }\r\n            }\r\n        };\r\n\r\n        if (newDays > numberOfDays) {\r\n            const nextMonth = Helper.addAwalMonths(currentDate.awalMonth, 1);\r\n            result = {\r\n                date: newDays - numberOfDays,\r\n                awalMonth: nextMonth\r\n            };\r\n\r\n        } else if (newDays <= 0) {\r\n            const previousMonth = Helper.addAwalMonths(currentDate.awalMonth, -1);\r\n            result = {\r\n                date: Helper.getDayNumbersOfAwalMonth(previousMonth.year, previousMonth.month) + newDays,\r\n                awalMonth: previousMonth\r\n            };\r\n        }\r\n        else {\r\n            result = {\r\n                date: newDays,\r\n                awalMonth: currentDate.awalMonth\r\n            };\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static addAwalMonths(currentMonth: AwalMonth, addedMonths: number) {\r\n        let newMonth = currentMonth.month + addedMonths;\r\n        let quotient = Math.floor(newMonth / 12);\r\n        let remain = Helper.getMod(newMonth, 12);\r\n\r\n        let result: AwalMonth = {\r\n            month: remain,\r\n            year: Helper.addAwalYears(currentMonth.year, quotient)\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static addAwalYears(currentYear: AwalYear, addedYears: number) {\r\n        let newIkasSarak = currentYear.ikasSarak + addedYears;\r\n        let remain = Helper.getMod(newIkasSarak, 8);\r\n        let newYearNumber = (currentYear.yearNumber ?? 0) + addedYears;\r\n\r\n        let result: AwalYear = {\r\n            ikasSarak: remain,\r\n            yearNumber: newYearNumber\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static getDayNumbersOfAwalMonth(year: AwalYear, month: AwalMonthEnum) {\r\n        let numberOfDay = 0;\r\n\r\n        if (month === AwalMonthEnum.Muharam || month === AwalMonthEnum.Rabiulawal || month === AwalMonthEnum.Jamadilawal ||\r\n            month === AwalMonthEnum.Rejab || month === AwalMonthEnum.Ramadan || month === AwalMonthEnum.Julkaejah) {\r\n            // Tháng lẻ: (30 ngày), gồm: 1,3,5,7,9,11.\r\n            numberOfDay = 30;\r\n        } else if (month === AwalMonthEnum.Syafar || month === AwalMonthEnum.Rabiulakhir || month === AwalMonthEnum.Jamadilakhir ||\r\n            month === AwalMonthEnum.Sykban || month === AwalMonthEnum.Syawal) {\r\n            // Tháng chẳn: (29 ngày), gồm: 2,4,6,8,10. \r\n            numberOfDay = 29;\r\n        } else {\r\n            // Riêng tháng 12: \r\n            if (year.ikasSarak === IkasSarakEnum.Hak || year.ikasSarak === IkasSarakEnum.Dal || year.ikasSarak === IkasSarakEnum.JimLuic) {\r\n                // năm nhuận (thun \"Nâh\": Hak, Dal, Jim luic): 30 ngày\r\n                numberOfDay = 30;\r\n            } else {\r\n                // năm thường (thun \"Wak\"): 29 ngày\r\n                numberOfDay = 29;\r\n            }\r\n        }\r\n\r\n        return numberOfDay;\r\n    }\r\n\r\n    static getStartDayByAwalMonth(year: AwalYear, month: AwalMonthEnum) {\r\n        let yearName = IkasSarakEnum[year.ikasSarak];\r\n        let yearItem = sakawiTakaiCiimConfig.filter(x => x.ArabYear === yearName)[0];\r\n        let result = '';\r\n\r\n        switch (month) {\r\n            case 0:\r\n                result = yearItem['Month_01'];\r\n                break;\r\n            case 1:\r\n                result = yearItem['Month_02'];\r\n                break;\r\n            case 2:\r\n                result = yearItem['Month_03'];\r\n                break;\r\n            case 3:\r\n                result = yearItem['Month_04'];\r\n                break;\r\n            case 4:\r\n                result = yearItem['Month_05'];\r\n                break;\r\n            case 5:\r\n                result = yearItem['Month_06'];\r\n                break;\r\n            case 6:\r\n                result = yearItem['Month_07'];\r\n                break;\r\n            case 7:\r\n                result = yearItem['Month_08'];\r\n                break;\r\n            case 8:\r\n                result = yearItem['Month_09'];\r\n                break;\r\n            case 9:\r\n                result = yearItem['Month_10'];\r\n                break;\r\n            case 10:\r\n                result = yearItem['Month_11'];\r\n                break;\r\n            case 11:\r\n                result = yearItem['Month_12'];\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static getAwalDateByGregoryDate(date: Date) {\r\n        let differenceInTime = date.getTime() - firstDateOfSakawiAwal_Lieh_1407.getTime();\r\n        let differenceInDays = differenceInTime / (1000 * 3600 * 24);\r\n        let remain = Helper.getMod(differenceInDays, totalDaysOf8AwalYearCycle);\r\n        let quotient = Math.floor(Math.abs(differenceInDays) / totalDaysOf8AwalYearCycle);\r\n\r\n        let awalYearNumber = yearNumberOfSakawiAwal_Lieh_1407;\r\n        let awalYear = IkasSarakEnum.Liéh;\r\n        let awalMonth = AwalMonthEnum.Muharam;\r\n        let awalDate = 0;\r\n        let totalYears = 0;\r\n        for (let i = 0; i < awalYearArray.length; i++) {\r\n            totalYears += awalYearArray[i].numberOfDays;\r\n            if (remain < totalYears) {\r\n                awalYear = awalYearArray[i].name;\r\n\r\n                if (differenceInDays > 0) {\r\n                    awalYearNumber += (quotient * 8) + i;\r\n                } else {\r\n                    awalYearNumber -= (quotient * 8) + i;\r\n                }\r\n\r\n                let numberDaysOfCurrentYear = remain - (totalYears - awalYearArray[i].numberOfDays);\r\n                let totalMonths = 0;\r\n\r\n                for (let j = 0; j < awalMonthArray.length; j++) {\r\n                    totalMonths += awalMonthArray[j].numberOfDays;\r\n                    if (numberDaysOfCurrentYear < totalMonths) {\r\n                        awalMonth = awalMonthArray[j].name;\r\n                        let numberDaysOfCurrentMonth = numberDaysOfCurrentYear - (totalMonths - awalMonthArray[j].numberOfDays);\r\n                        awalDate = numberDaysOfCurrentMonth + 1;\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        let resultDate: AwalDate = {\r\n            date: awalDate,\r\n            awalMonth: { month: awalMonth, year: { ikasSarak: awalYear, yearNumber: awalYearNumber } }\r\n        }\r\n\r\n        return resultDate;\r\n    }\r\n    //#endregion\r\n\r\n    //#region Ahier\r\n    static addAhierDays(maxtrixCalendar: MatrixCalendarType[], currentDate: AhierDate, addedDays: number) {\r\n        const numberOfDays = Helper.getActualDayNumbersOfAhierMonth(maxtrixCalendar, currentDate.ahierMonth);\r\n        const newDays = currentDate.date + addedDays;\r\n\r\n        let result: AhierDate = {\r\n            date: 1,\r\n            ahierMonth: {\r\n                month: AhierMonthEnum.BilanSa,\r\n                year: { nasak: NasakEnum.Takuh, ikasSarak: IkasSarakEnum.Liéh, yearNumber: 0 }\r\n            }\r\n        };\r\n\r\n        if (newDays > numberOfDays) {\r\n            const nextMonth = Helper.addAhierMonths(currentDate.ahierMonth, 1);\r\n            result = {\r\n                date: newDays - numberOfDays,\r\n                ahierMonth: nextMonth\r\n            };\r\n        } else if (newDays <= 0) {\r\n            const previousMonth = Helper.addAhierMonths(currentDate.ahierMonth, -1);\r\n            const dayNumberOfPreviousMonth = Helper.getActualDayNumbersOfAhierMonth(maxtrixCalendar, previousMonth);\r\n            result = {\r\n                date: dayNumberOfPreviousMonth + newDays,\r\n                ahierMonth: previousMonth\r\n            };\r\n        }\r\n        else {\r\n            result = {\r\n                date: newDays,\r\n                ahierMonth: currentDate.ahierMonth\r\n            };\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static addAhierMonths(currentMonth: AhierMonth, addedMonths: number) {\r\n        const numberOfMonths = Helper.getMonthNumbersOfAhierYear(currentMonth.year);\r\n        const newMonth = currentMonth.month + addedMonths;\r\n        let result: AhierMonth = {\r\n            month: currentMonth.month,\r\n            year: currentMonth.year\r\n        }\r\n\r\n        if (newMonth > numberOfMonths - 1) {\r\n            const nextYear = Helper.addAhierYears(currentMonth.year, 1);\r\n            result = {\r\n                month: newMonth - numberOfMonths,\r\n                year: nextYear\r\n            }\r\n        } else if (newMonth < 0) {\r\n            const previousYear = Helper.addAhierYears(currentMonth.year, -1);\r\n            const numberOfMonthsOfPreviousYear = Helper.getMonthNumbersOfAhierYear(previousYear);\r\n\r\n            result = {\r\n                month: numberOfMonthsOfPreviousYear + newMonth,\r\n                year: previousYear\r\n            }\r\n        } else {\r\n            result = {\r\n                month: newMonth,\r\n                year: currentMonth.year\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static addAhierYears(currentYear: AhierYear, addedYears: number) {\r\n        let newNasak = (currentYear.nasak + addedYears) % 12;\r\n        let remainNasak = Helper.getMod(newNasak, 12);\r\n\r\n        let newIkasSarak = (currentYear.ikasSarak + addedYears) % 8;\r\n        let remainIkasSarak = Helper.getMod(newIkasSarak, 8);\r\n\r\n        let newYearNumber = (currentYear.yearNumber ?? 0) + addedYears;\r\n\r\n        let result: AhierYear = {\r\n            nasak: remainNasak,\r\n            ikasSarak: remainIkasSarak,\r\n            yearNumber: newYearNumber\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static getExpectedDayNumbersOfAhierMonth(year: AhierYear, month: AhierMonthEnum) {\r\n        let numberOfDay = 0;\r\n        if (month === AhierMonthEnum.BilanSa || month === AhierMonthEnum.BilanKlau || month === AhierMonthEnum.BilanLima ||\r\n            month === AhierMonthEnum.BilanTajuh || month === AhierMonthEnum.BilanSalipan || month === AhierMonthEnum.BilanPuis) {\r\n            // Tháng lẻ - \"bilan tapak\": (30 ngày), gồm: 1,3,5,7,9,11.\r\n            numberOfDay = 30;\r\n        } else if (month === AhierMonthEnum.BilanDua || month === AhierMonthEnum.BilanPak || month === AhierMonthEnum.BilanNem ||\r\n            month === AhierMonthEnum.BilanDalipan || month === AhierMonthEnum.BilanSapluh) {\r\n            // Tháng chẳn - \"bilan u\" : (29 ngày), gồm: 2,4,6,8,10. \r\n            numberOfDay = 29;\r\n        } else if (month === AhierMonthEnum.BilanMak) {\r\n            const isEndOfLongLeapPeriod144Years = Helper.checkIsEndOfLongLeapPeriod144Years(year);\r\n            if (isEndOfLongLeapPeriod144Years) {\r\n                numberOfDay = 29;\r\n            } else {\r\n                // Tháng 12:  \r\n                if (year.ikasSarak === IkasSarakEnum.Hak || year.ikasSarak === IkasSarakEnum.Dal || year.ikasSarak === IkasSarakEnum.JimLuic) {\r\n                    // năm nhuận (thun \"Nâh\": Hak, Dal, Jim luic): 30 ngày\r\n                    numberOfDay = 30;\r\n                } else {\r\n                    // năm thường (thun \"Wak\"): 29 ngày\r\n                    numberOfDay = 29;\r\n                }\r\n            }\r\n        } else if (month === AhierMonthEnum.BilanBhang) {\r\n            if (year.ikasSarak === IkasSarakEnum.Hak || year.ikasSarak === IkasSarakEnum.Dal || year.ikasSarak === IkasSarakEnum.JimLuic) {\r\n                // năm nhuận (thun \"Nâh\": Hak, Dal, Jim luic): 29 ngày\r\n                numberOfDay = 29;\r\n            }\r\n        }\r\n\r\n        return numberOfDay;\r\n    }\r\n\r\n    static getActualDayNumbersOfAhierMonth(maxtrixCalendar: MatrixCalendarType[], ahierMonth: AhierMonth) {\r\n        const index = maxtrixCalendar.findIndex(x => JSON.stringify(x.ahierMonth) === JSON.stringify(ahierMonth));\r\n        if (index !== -1) {\r\n            return maxtrixCalendar[index].dayNumbersOfAhierMonth;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    static getMonthNumbersOfAhierYear(year: AhierYear) {\r\n        const isEndOfLongLeapPeriod144Years = Helper.checkIsEndOfLongLeapPeriod144Years(year);\r\n        if (isEndOfLongLeapPeriod144Years) {\r\n            return 12;\r\n        } else if (year.ikasSarak === IkasSarakEnum.Hak\r\n            || year.ikasSarak === IkasSarakEnum.Dal\r\n            || year.ikasSarak === IkasSarakEnum.JimLuic) {\r\n            return 13;\r\n        }\r\n        return 12;\r\n    }\r\n    //#endregion\r\n\r\n    //#region Gregory\r\n    static addGregoryDays(date: Date, numberOfDays: number) {\r\n        let newDt = new Date(date);\r\n        newDt.setDate(newDt.getDate() + numberOfDays);\r\n        return newDt;\r\n    }\r\n    //#endregion\r\n\r\n    static buildMatrixCalendar(toYearAhier: number, areaType: AreaType) {\r\n        let matrixCalendar: MatrixCalendarType[] = [];\r\n        let fullCalendar: FullCalendarType[] = [];\r\n\r\n        // Choose thun 1988 as a root\r\n        const startAhierYear: AhierYear = {\r\n            nasak: NasakEnum.InâGirai,\r\n            ikasSarak: IkasSarakEnum.Liéh,\r\n            yearNumber: 1988\r\n        }\r\n\r\n        // TO-TEST\r\n        // const startAhierYear: AhierYear = {\r\n        //     nasak: NasakEnum.Rimaong,\r\n        //     ikasSarak: IkasSarakEnum.Jim,\r\n        //     yearNumber: 2022\r\n        // }\r\n\r\n        const numberOfAhierYear = toYearAhier - (startAhierYear.yearNumber ?? 0);\r\n        let newGregoryDate = firstDateOfSakawiAhier_InaGirai_Lieh_1988;\r\n        //let newGregoryDate = new Date(2022, 3, 30);//16/04/1988\r\n\r\n        for (let y = 0; y < numberOfAhierYear; y++) {\r\n            const ahierYear = Helper.addAhierYears(startAhierYear, y);\r\n            const matrixPerYear = Helper.renderMatrixPerYear(ahierYear, newGregoryDate);\r\n            const validMatrix = Helper.applyGuenGuecRules(matrixPerYear, areaType);\r\n            matrixCalendar.push(...validMatrix);\r\n\r\n            const calendarDetails = Helper.renderCalendarDetails(validMatrix);\r\n            fullCalendar.push(...calendarDetails);\r\n\r\n            const lastMonthItem = validMatrix[validMatrix.length - 1];\r\n            newGregoryDate = Helper.addGregoryDays(lastMonthItem.dateOfGregoryCalendar, lastMonthItem.dayNumbersOfAhierMonth);\r\n        }\r\n\r\n        return {\r\n            matrixCalendar,\r\n            fullCalendar\r\n        };\r\n    }\r\n\r\n    static renderMatrixPerYear(ahierYear: AhierYear, firstGregoryDate: Date) {\r\n        let matrixPerYear: MatrixCalendarType[] = [];\r\n        let newGregoryDate = firstGregoryDate;\r\n        let addedGregoryDays = 0;\r\n        const numberOfAhierMonth = Helper.getMonthNumbersOfAhierYear(ahierYear);\r\n\r\n        for (let m = 0; m < numberOfAhierMonth; m++) {\r\n            const ahierMonth: AhierMonth = { month: m, year: ahierYear };\r\n            const dayNumbersOfAhierMonth = Helper.getExpectedDayNumbersOfAhierMonth(ahierYear, m);\r\n            const firstDayOfAhierMonth = newGregoryDate.getDay();\r\n\r\n            const awalDate = Helper.getAwalDateByGregoryDate(newGregoryDate);\r\n            const awalMonth = Helper.addAwalMonths(awalDate.awalMonth, 1);\r\n            const dayNumbersOfAwalMonth = Helper.getDayNumbersOfAwalMonth(awalMonth.year, awalMonth.month);\r\n            const firstDayOfAwalMonth = Number.parseInt(Helper.getStartDayByAwalMonth(awalMonth.year, awalMonth.month)) - 1; // Sunday is 0 \r\n\r\n            let ahierMonthItem: MatrixCalendarType = {\r\n                ahierMonth: ahierMonth,\r\n                dayNumbersOfAhierMonth: dayNumbersOfAhierMonth,\r\n                hasGuen: false,\r\n                typeOfGuen: GuenTypeEnum.None,\r\n                hasGuec: false,\r\n                typeOfGuec: GuecTypeEnum.None,\r\n                firstDayOfAhierMonth: firstDayOfAhierMonth,\r\n                dateOfGregoryCalendar: newGregoryDate,\r\n                awalMonth: awalMonth,\r\n                dayNumbersOfAwalMonth: dayNumbersOfAwalMonth,\r\n                firstDayOfAwalMonth: firstDayOfAwalMonth\r\n            }\r\n\r\n            matrixPerYear.push(ahierMonthItem);\r\n\r\n            addedGregoryDays += dayNumbersOfAhierMonth;\r\n            newGregoryDate = Helper.addGregoryDays(firstGregoryDate, addedGregoryDays);\r\n        }\r\n\r\n        return matrixPerYear;\r\n    }\r\n\r\n    static applyGuenGuecRules(matrixPerYear: MatrixCalendarType[], areaType: AreaType) {\r\n        let monthGuen = -1;\r\n        let monthGuec = -1;\r\n        let guecTypeInNextYear = GuecTypeEnum.None;\r\n        let hasGuenRuleInNextYear = false;\r\n\r\n        // Check validations and fix in current year\r\n        for (let index = 0; index < matrixPerYear.length; index++) {\r\n            const element = matrixPerYear[index];\r\n\r\n            // Guen\r\n            if (monthGuen === -1 && Helper.checkIsGuenToAddDay(element.firstDayOfAhierMonth, element.firstDayOfAwalMonth)) {\r\n                if (areaType === 'BinhThuan' || (areaType === 'NinhThuan' && index >= 11)) {\r\n                    monthGuen = index;\r\n                    matrixPerYear[monthGuen - 1].dayNumbersOfAhierMonth += 1;\r\n                    matrixPerYear[monthGuen - 1].hasGuen = true;\r\n                    matrixPerYear[monthGuen - 1].typeOfGuen = GuenTypeEnum.GuenByNormalRule;\r\n                }\r\n            }\r\n\r\n            if (monthGuen !== -1 && index >= monthGuen) {\r\n                const newDate = Helper.addGregoryDays(matrixPerYear[index].dateOfGregoryCalendar, 1);\r\n                matrixPerYear[index].dateOfGregoryCalendar = newDate;\r\n                matrixPerYear[index].firstDayOfAhierMonth = newDate.getDay();\r\n            }\r\n\r\n            // Guec\r\n            if (monthGuec === -1 && Helper.checkIsGuecToMinusDay(element.firstDayOfAhierMonth, element.firstDayOfAwalMonth)) {\r\n                monthGuec = index;\r\n                matrixPerYear[monthGuec - 1].dayNumbersOfAhierMonth -= 1;\r\n                matrixPerYear[monthGuec - 1].hasGuec = true;\r\n                matrixPerYear[monthGuec - 1].typeOfGuec = GuecTypeEnum.GuecByNormalRule;\r\n            }\r\n\r\n            if (monthGuec !== -1 && index >= monthGuec) {\r\n                const newDate = Helper.addGregoryDays(matrixPerYear[index].dateOfGregoryCalendar, -1);\r\n                matrixPerYear[index].dateOfGregoryCalendar = newDate;\r\n                matrixPerYear[index].firstDayOfAhierMonth = newDate.getDay();\r\n            }\r\n        }\r\n\r\n        // Check validations in next year to fix current year\r\n        const lastMonthOfCurrentYear = matrixPerYear[matrixPerYear.length - 1];\r\n        const firstGregoryDateOfNextYear = Helper.addGregoryDays(lastMonthOfCurrentYear.dateOfGregoryCalendar, lastMonthOfCurrentYear.dayNumbersOfAhierMonth);\r\n        guecTypeInNextYear = Helper.checkHasGuecRuleInNextYear(lastMonthOfCurrentYear.ahierMonth.year, firstGregoryDateOfNextYear);\r\n        hasGuenRuleInNextYear = Helper.checkHasGuenRuleInNextYear(lastMonthOfCurrentYear.ahierMonth.year, firstGregoryDateOfNextYear);\r\n\r\n        if (guecTypeInNextYear !== GuecTypeEnum.None) {\r\n            // Bilan Mak (12)\r\n            matrixPerYear[11].dayNumbersOfAhierMonth -= 1;\r\n            matrixPerYear[11].hasGuec = true;\r\n            matrixPerYear[11].typeOfGuec = guecTypeInNextYear;\r\n\r\n            // Bilan Bhang (13)\r\n            if (matrixPerYear.length > 12) {\r\n                const newDate = Helper.addGregoryDays(matrixPerYear[12].dateOfGregoryCalendar, -1);\r\n                matrixPerYear[12].dateOfGregoryCalendar = newDate;\r\n                matrixPerYear[12].firstDayOfAhierMonth = newDate.getDay();\r\n            }\r\n        } else if (hasGuenRuleInNextYear) {\r\n            // Bilan (12) or (13)\r\n            if (Helper.getAhierAwalDaysGap(lastMonthOfCurrentYear.firstDayOfAhierMonth, lastMonthOfCurrentYear.firstDayOfAwalMonth) === 2) {\r\n                lastMonthOfCurrentYear.dayNumbersOfAhierMonth += 1;\r\n                lastMonthOfCurrentYear.hasGuen = true;\r\n                lastMonthOfCurrentYear.typeOfGuen = GuenTypeEnum.GuenByNormalRule;\r\n            }\r\n        }\r\n\r\n        return [...matrixPerYear];\r\n    }\r\n\r\n    static renderCalendarDetails(matrixPerYear: MatrixCalendarType[]) {\r\n        let fullCalendar: FullCalendarType[] = [];\r\n\r\n        for (let index = 0; index < matrixPerYear.length; index++) {\r\n            const element = matrixPerYear[index];\r\n            const firstDateOfAhierMonth: AhierDate = { date: 1, ahierMonth: element.ahierMonth };\r\n            const firstDateOfAwalMonth: AwalDate = { date: 1, awalMonth: element.awalMonth };\r\n            const firstDateOfGregoryMonth = element.dateOfGregoryCalendar;\r\n            const daysGap = Helper.getAhierAwalDaysGap(element.firstDayOfAhierMonth, element.firstDayOfAwalMonth);\r\n\r\n            for (let days = 0; days < element.dayNumbersOfAhierMonth; days++) {\r\n                const addedAhierDate = Helper.addAhierDays(matrixPerYear, firstDateOfAhierMonth, days);\r\n                const dateAhier: AhierDate = {\r\n                    date: addedAhierDate.date,\r\n                    ahierMonth: addedAhierDate.ahierMonth\r\n                }\r\n\r\n                const addedAwalDate = Helper.addAwalDays(firstDateOfAwalMonth, days - daysGap);\r\n                const dateAwal: AwalDate = {\r\n                    date: addedAwalDate.date,\r\n                    awalMonth: addedAwalDate.awalMonth\r\n                }\r\n\r\n                const dateGregory = Helper.addGregoryDays(firstDateOfGregoryMonth, days);\r\n\r\n                let monthDetailsCalendar: FullCalendarType = {\r\n                    dateAhier: dateAhier,\r\n                    dateAwal: dateAwal,\r\n                    dateGregory: dateGregory,\r\n                    typeOfGuen: days === element.dayNumbersOfAhierMonth - 1 ? element.typeOfGuen : undefined,\r\n                    typeOfGuec: days === element.dayNumbersOfAhierMonth - 1 ? element.typeOfGuec : undefined,\r\n                    hasGuen: days === element.dayNumbersOfAhierMonth - 1 ? element.hasGuen : undefined,\r\n                    hasGuec: days === element.dayNumbersOfAhierMonth - 1 ? element.hasGuec : undefined\r\n                }\r\n\r\n                fullCalendar.push(monthDetailsCalendar);\r\n            }\r\n        }\r\n\r\n        return fullCalendar;\r\n    }\r\n\r\n    static checkIsGuenToAddDay(firstDayOfAhierMonth: number, firstDayOfAwalMonth: number) {\r\n        const daysGap = Helper.getAhierAwalDaysGap(firstDayOfAhierMonth, firstDayOfAwalMonth);\r\n        return daysGap > 2;\r\n    }\r\n\r\n    static checkIsGuecToMinusDay(firstDayOfAhierMonth: number, firstDayOfAwalMonth: number) {\r\n        return firstDayOfAhierMonth === firstDayOfAwalMonth;\r\n    }\r\n\r\n    static checkHasGuecRuleInNextYear(currentYear: AhierYear, firstGregoryDateNextYear: Date) {\r\n        let result = GuecTypeEnum.None;\r\n\r\n        const nextAhierYear = Helper.addAhierYears(currentYear, 1);\r\n        const matrixNextYear = Helper.renderMatrixPerYear(nextAhierYear, firstGregoryDateNextYear);\r\n        const firstMonth = matrixNextYear[0];\r\n        const isKateRamawanConflict = matrixNextYear.some(x =>\r\n            x.ahierMonth.month === AhierMonthEnum.BilanTajuh &&\r\n            x.awalMonth.month === AwalMonthEnum.Ramadan &&\r\n            Helper.getAhierAwalDaysGap(x.firstDayOfAhierMonth, x.firstDayOfAwalMonth) === 1);\r\n        const hasNormalGuec = matrixNextYear.some(item => Helper.checkIsGuecToMinusDay(item.firstDayOfAhierMonth, item.firstDayOfAwalMonth));\r\n\r\n        if (hasNormalGuec) {\r\n            result = GuecTypeEnum.GuecByNormalRule;\r\n        } else if (nextAhierYear.ikasSarak === IkasSarakEnum.Liéh) {\r\n            if (firstMonth.firstDayOfAhierMonth === 4 && firstMonth.firstDayOfAwalMonth === 5) {\r\n                result = GuecTypeEnum.GuecByHareiButSukRule;\r\n            } else if (isKateRamawanConflict) {\r\n                result = GuecTypeEnum.GuecByKateRamawanRule;\r\n            }\r\n        } else if (firstMonth.firstDayOfAhierMonth === 5 && firstMonth.firstDayOfAwalMonth === 6) {\r\n            result = GuecTypeEnum.GuecByRijaNagarRule;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static checkHasGuenRuleInNextYear(currentYear: AhierYear, firstGregoryDateNextYear: Date) {\r\n        const nextAhierYear = Helper.addAhierYears(currentYear, 1);\r\n        const matrixNextYear = Helper.renderMatrixPerYear(nextAhierYear, firstGregoryDateNextYear);\r\n\r\n        return matrixNextYear.some(item => Helper.checkIsGuenToAddDay(item.firstDayOfAhierMonth, item.firstDayOfAwalMonth));\r\n    }\r\n\r\n    static checkIsEndOfLongLeapPeriod144Years(currentYear: AhierYear) {\r\n        return currentYear.yearNumber !== 1995 && ((currentYear.yearNumber + 1) - 1996) % 144 === 0;\r\n    }\r\n\r\n    static getMod(n: number, m: number) {\r\n        const remain = n % m;\r\n        return Math.floor(remain >= 0 ? remain : remain + m);\r\n    };\r\n\r\n    static getAhierAwalDaysGap(firstDayOfAhierMonth: number, firstDayOfAwalMonth: number) {\r\n        let daysGap = 0;\r\n\r\n        if (firstDayOfAhierMonth < firstDayOfAwalMonth) {\r\n            daysGap = firstDayOfAwalMonth - firstDayOfAhierMonth;\r\n        } else if (firstDayOfAhierMonth > firstDayOfAwalMonth) {\r\n            daysGap = firstDayOfAwalMonth + (6 - firstDayOfAhierMonth) + 1; // Sunday is 0\r\n        }\r\n\r\n        return daysGap;\r\n    }\r\n\r\n    static convertToChamDigitUnicode(latinNumber: number, showLatinNumer: boolean = false) {\r\n        if (showLatinNumer) {\r\n            return latinNumber;\r\n        }\r\n\r\n        const ChamDigitArr = ['꩐', '꩑', '꩒', '꩓', '꩔', '꩕', '꩖', '꩗', '꩘', '꩙'];\r\n        const EnglishDigits = '0123456789';\r\n        const reg = new RegExp('[' + EnglishDigits + ']', 'g');\r\n\r\n        return latinNumber.toString().replace(reg, function (c) {\r\n            return ChamDigitArr[EnglishDigits.indexOf(c)]\r\n        });\r\n    }\r\n\r\n    static getNextEvents(fullCalendar: FullCalendarType[]) {\r\n        let result: CountDownBarProps[] = [];\r\n        let addedAkaokThun = false;\r\n        let addedRijaNagar = false;\r\n        //let addedKateHamuTanran = false;\r\n        let addedKate = false;\r\n        let addedRamawan = false;\r\n        // let addedMukTrun = false;\r\n        // let addedOngTrun = false;\r\n        // let addedTalaihRamawan = false;\r\n        // let addedIkakWaha = false;\r\n        // let addedTalaihWaha = false;\r\n        // let addedYuerYang = false;\r\n\r\n        fullCalendar.forEach(function (item, index) {\r\n            if (item.dateGregory < new Date()) {\r\n                return;\r\n            }\r\n\r\n            let eventGregoryDate = item.dateGregory;\r\n\r\n            if (!addedAkaokThun && item.dateAhier.ahierMonth.month === 0 && item.dateAhier.date === 1) {\r\n                result.push({ eventType: 'AkaokThun', eventDate: eventGregoryDate });\r\n                addedAkaokThun = true;\r\n            }\r\n\r\n            // TODO\r\n            if (!addedRijaNagar && item.dateAhier.ahierMonth.month === 0 && eventGregoryDate.getDay() === 4) {\r\n                if (item.dateAwal.awalMonth.month === AwalMonthEnum.Ramadan) {\r\n                    // closet Thurday and after Muk Trun day\r\n                    if (item.dateAwal.date >= 16 && item.dateAhier.date <= 22) {\r\n                        result.push({ eventType: 'RijaNagar', eventDate: eventGregoryDate });\r\n                        addedRijaNagar = true;\r\n                    }\r\n\r\n                } else {\r\n                    if (item.dateAhier.date >= 1 && item.dateAhier.date <= 7) {\r\n                        result.push({ eventType: 'RijaNagar', eventDate: eventGregoryDate });\r\n                        addedRijaNagar = true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            /*if (!addedKateHamuTanran && item.dateAhier.ahierMonth.month === 5 && item.dateAhier.date === 29) {\r\n                result.push({ eventType: 'Katé palei Hamu Tanran', eventDate: eventGregoryDate });\r\n                addedKateHamuTanran = true;\r\n            }*/\r\n\r\n            if (!addedKate && item.dateAhier.ahierMonth.month === 6 && item.dateAhier.date === 1) {\r\n                result.push({ eventType: 'KateAngaokBimong', eventDate: eventGregoryDate });\r\n                addedKate = true;\r\n            }\r\n\r\n            /*if (item.dayNumbersOfCurrentAhierMonth === 30) {\r\n                if (item.dateAhier.ahierMonth.month === 8 && item.dateAhier.date === 16) {\r\n                    result.push('Ca-mbur');\r\n                }\r\n            } else {\r\n                if (item.dateAhier.ahierMonth.month === 8 && item.dateAhier.date === 15) {\r\n                    result.push('Ca-mbur');\r\n                }\r\n            }*/\r\n\r\n            if (!addedRamawan && item.dateAwal.awalMonth.month === 8 && item.dateAwal.date === 1) {\r\n                result.push({ eventType: 'TamaRicaowRamawan', eventDate: eventGregoryDate });\r\n                addedRamawan = true;\r\n            }\r\n\r\n            /*if (!addedMukTrun && item.dateAwal.awalMonth.month === 8 && item.dateAwal.date === 16) {\r\n                result.push({ eventType: 'Muk trun', eventDate: eventGregoryDate });\r\n                addedMukTrun = true;\r\n            }\r\n\r\n            if (!addedOngTrun && item.dateAwal.awalMonth.month === 8 && item.dateAwal.date === 21) {\r\n                result.push({ eventType: 'Ong trun', eventDate: eventGregoryDate });\r\n                addedOngTrun = true;\r\n            }\r\n\r\n            if (!addedTalaihRamawan && item.dateAwal.awalMonth.month === 9 && item.dateAwal.date === 2) {\r\n                result.push({ eventType: 'Talaih aek Ramâwan', eventDate: eventGregoryDate });\r\n                addedTalaihRamawan = true;\r\n            }\r\n\r\n            if (!addedIkakWaha && item.dateAwal.awalMonth.month === 11 && item.dateAwal.date === 1) {\r\n                result.push({ eventType: 'Ikak Waha', eventDate: eventGregoryDate });\r\n                addedIkakWaha = true;\r\n            }\r\n\r\n            if (!addedTalaihWaha && item.dateAwal.awalMonth.month === 11 && item.dateAwal.date === 11) {\r\n                result.push({ eventType: 'Talaih Waha', eventDate: eventGregoryDate });\r\n                addedTalaihWaha = true;\r\n            }\r\n\r\n            if (!addedYuerYang && item.dateAhier.ahierMonth.month === 3 && eventGregoryDate.getDay() === 0 && item.dateAhier.date < 7) {\r\n                result.push({ eventType: 'Yuer Yang', eventDate: eventGregoryDate });\r\n                addedYuerYang = true;\r\n            }*/\r\n\r\n            // Break loop: just look up in a year later (30 days x 13 months)\r\n            if (eventGregoryDate > Helper.addGregoryDays(new Date(), 390)) {\r\n                return;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    static getEventsInAhierYear(maxtrixCalendar: MatrixCalendarType[], fullCalendar: FullCalendarType[]) {\r\n        let result: CountDownBarProps[] = [];\r\n        //let addedRijaNagar = false;\r\n\r\n        fullCalendar.forEach(function (item, index) {\r\n            let eventGregoryDate = item.dateGregory;\r\n\r\n            if (item.dateAhier.ahierMonth.month === 0 && item.dateAhier.date === 1) {\r\n                result.push({ eventType: 'AkaokThun', sakawiType: 'sakawiAhier', eventDate: eventGregoryDate });\r\n            }\r\n\r\n            //TODO\r\n            if (item.dateAhier.ahierMonth.month === 0 && eventGregoryDate.getDay() === 4) {\r\n                if (item.dateAwal.awalMonth.month === AwalMonthEnum.Ramadan) {\r\n                    // closet Thurday and after Muk Trun day\r\n                    if (item.dateAwal.date >= 16 && item.dateAhier.date <= 22) {\r\n                        result.push({ eventType: 'RijaNagar', eventDate: eventGregoryDate });\r\n                    }\r\n                } else {\r\n                    if (item.dateAhier.date >= 1 && item.dateAhier.date <= 7) {\r\n                        result.push({ eventType: 'RijaNagar', sakawiType: 'sakawiAhier', eventDate: eventGregoryDate });\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (item.dateAhier.ahierMonth.month === 5 && item.dateAhier.date === 29) {\r\n                result.push({ eventType: 'KatePaleiHamuTanran', sakawiType: 'sakawiAhier', eventDate: eventGregoryDate });\r\n            }\r\n\r\n            if (item.dateAhier.ahierMonth.month === 6 && item.dateAhier.date === 1) {\r\n                result.push({ eventType: 'KateAngaokBimong', sakawiType: 'sakawiAhier', eventDate: eventGregoryDate });\r\n            }\r\n\r\n            const dayNumbersOfCurrentAhierMonth = Helper.getActualDayNumbersOfAhierMonth(maxtrixCalendar, item.dateAhier.ahierMonth);\r\n            if (dayNumbersOfCurrentAhierMonth === 30) {\r\n                if (item.dateAhier.ahierMonth.month === 8 && item.dateAhier.date === 16) {\r\n                    result.push({ eventType: 'CaMbur', sakawiType: 'sakawiAhier', eventDate: eventGregoryDate });\r\n                }\r\n            } else {\r\n                if (item.dateAhier.ahierMonth.month === 8 && item.dateAhier.date === 15) {\r\n                    result.push({ eventType: 'CaMbur', sakawiType: 'sakawiAhier', eventDate: eventGregoryDate });\r\n                }\r\n            }\r\n\r\n            if (item.dateAwal.awalMonth.month === 8 && item.dateAwal.date === 1) {\r\n                result.push({ eventType: 'TamaRicaowRamawan', sakawiType: 'sakawiAwal', eventDate: eventGregoryDate });\r\n            }\r\n\r\n            if (item.dateAwal.awalMonth.month === 8 && item.dateAwal.date === 16) {\r\n                result.push({ eventType: 'MukTrun', sakawiType: 'sakawiAwal', eventDate: eventGregoryDate });\r\n            }\r\n\r\n            if (item.dateAwal.awalMonth.month === 8 && item.dateAwal.date === 21) {\r\n                result.push({ eventType: 'OngTrun', sakawiType: 'sakawiAwal', eventDate: eventGregoryDate });\r\n            }\r\n\r\n            if (item.dateAwal.awalMonth.month === 9 && item.dateAwal.date === 2) {\r\n                result.push({ eventType: 'TalaihAekRamawan', sakawiType: 'sakawiAwal', eventDate: eventGregoryDate });\r\n            }\r\n\r\n            if (item.dateAwal.awalMonth.month === 11 && item.dateAwal.date === 1) {\r\n                result.push({ eventType: 'IkakWaha', sakawiType: 'sakawiAwal', eventDate: eventGregoryDate });\r\n            }\r\n\r\n            if (item.dateAwal.awalMonth.month === 11 && item.dateAwal.date === 11) {\r\n                result.push({ eventType: 'TalaihWaha', sakawiType: 'sakawiAwal', eventDate: eventGregoryDate });\r\n            }\r\n\r\n            if (item.dateAhier.ahierMonth.month === 3 && eventGregoryDate.getDay() === 0 && item.dateAhier.date < 7) {\r\n                result.push({ eventType: 'YuerYang', sakawiType: 'sakawiAhier', eventDate: eventGregoryDate });\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    static displayDateString(date: Date) {\r\n        let dd = date.getDate();\r\n        let mm = date.getMonth() + 1;\r\n        const yyyy = date.getFullYear();\r\n        const ddStr = dd < 10 ? '0' + dd : dd;\r\n        const mmStr = mm < 10 ? '0' + mm : mm;\r\n        return ddStr + '/' + mmStr + '/' + yyyy;\r\n    }\r\n\r\n    static displayEventDay(eventType: EventType) {\r\n        return chamEventDaysConfig.filter(x => x.eventType === eventType)[0];\r\n    }\r\n}","import { Button, ButtonGroup, ButtonToolbar, Col } from \"react-bootstrap\";\r\nimport { displayIkasSarakName, displayNasakName, IkasSarakEnum, SakawiType } from \"../enums/enum\";\r\nimport { AhierYear } from \"../model/AhierDate\";\r\nimport { AwalYear } from \"../model/AwalDate\";\r\nimport Helper from \"../utility/helper\";\r\n\r\ninterface YearNavigationProps {\r\n    sakawiType: SakawiType;\r\n    currentAhierYear?: AhierYear;\r\n    currentAwalYear?: AwalYear;\r\n    currentGregoryYear?: number;\r\n    onSelectSakawiType: (type: SakawiType) => void\r\n    onClickToday: (type: SakawiType) => void;\r\n    onClickPreviousYear: (type: SakawiType) => void;\r\n    onClickNextYear: (type: SakawiType) => void;\r\n}\r\n\r\nexport const YearNavigation = (props: YearNavigationProps) => {\r\n    return (\r\n        <>\r\n            <Col md={4}>\r\n                {/* <ButtonToolbar aria-label=\"Toolbar with button groups\" style={{ justifyContent: \"flex-start\" }}>\r\n                    <ButtonGroup aria-label=\"Type of calendar\">\r\n                        <Button variant=\"outline-secondary\" active={props.sakawiType === 'sakawiAhier'} onClick={() => props.onSelectSakawiType('sakawiAhier')}>Lịch Chăm</Button>\r\n                        <Button variant=\"outline-secondary\" active={props.sakawiType === 'sakawiAwal'} onClick={() => props.onSelectSakawiType('sakawiAwal')}>Lịch Arab</Button>\r\n                        <Button variant=\"outline-secondary\" active={props.sakawiType === 'sakawiGregory'} onClick={() => props.onSelectSakawiType('sakawiGregory')}>Dương lịch</Button>\r\n                    </ButtonGroup>\r\n                </ButtonToolbar> */}\r\n            </Col>\r\n            <Col md={5} style={{ textAlign: \"center\" }}>\r\n                {props.sakawiType === 'sakawiAhier' && props.currentAhierYear &&\r\n                    <>\r\n                        <div className='bilan-title'>\r\n                            {displayNasakName(props.currentAhierYear.nasak).akharThrahName}\r\n                            {' - '}<label className='ikasSarak-title'>{displayIkasSarakName(props.currentAhierYear.ikasSarak)}</label>\r\n                            {' - '}{Helper.convertToChamDigitUnicode(props.currentAhierYear.yearNumber ?? 0)}\r\n                        </div>\r\n                        <div className='bilan-latin-title'>\r\n                            {displayNasakName(props.currentAhierYear.nasak).rumiName} {IkasSarakEnum[props.currentAhierYear.ikasSarak]}\r\n                            {' - '}{props.currentAhierYear.yearNumber}\r\n                        </div>\r\n                    </>\r\n                }\r\n                {props.sakawiType === 'sakawiAwal' && props.currentAwalYear &&\r\n                    <div className='bilan-latin-title'>\r\n                        {IkasSarakEnum[props.currentAwalYear.ikasSarak]}\r\n                        {' - '}{props.currentAwalYear.yearNumber}\r\n                    </div>\r\n                }\r\n                {props.sakawiType === 'sakawiGregory' &&\r\n                    <div className='bilan-latin-title'>\r\n                        {`Năm ${props.currentGregoryYear}`}\r\n                    </div>\r\n                }\r\n            </Col>\r\n            <Col md={3}>\r\n                <ButtonToolbar aria-label=\"Toolbar with button groups\" style={{ justifyContent: \"flex-end\" }}>\r\n                    <ButtonGroup aria-label=\"Third group\" style={{ marginRight: \".75em\" }}>\r\n                        <Button variant=\"secondary\" onClick={() => props.onClickToday(props.sakawiType)}>Năm nay</Button>\r\n                    </ButtonGroup>\r\n                    <ButtonGroup aria-label=\"Navigate months\">\r\n                        <Button variant=\"secondary\" className=\"fa fa-chevron-left\" onClick={() => props.onClickPreviousYear(props.sakawiType)} />\r\n                        <Button variant=\"secondary\" className=\"fa fa-chevron-right\" onClick={() => props.onClickNextYear(props.sakawiType)} />\r\n                    </ButtonGroup>\r\n                </ButtonToolbar>\r\n            </Col>\r\n        </>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { Col, Container, Row, Table } from \"react-bootstrap\";\r\nimport { IkasSarakEnum, NasakEnum, SakawiType } from \"../enums/enum\";\r\nimport { AhierYear } from \"../model/AhierDate\";\r\nimport { FullCalendarType } from \"../model/FullCalendarType\";\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport Helper from \"../utility/helper\";\r\nimport { YearNavigation } from \"./yearNavigation\";\r\n\r\ninterface EventCalendarProps {\r\n    matrixSakawi: MatrixCalendarType[],\r\n    fullSakawi: FullCalendarType[]\r\n}\r\n\r\nexport const EventCalendar = (props: EventCalendarProps) => {\r\n    const initialAhierYear: AhierYear = { nasak: NasakEnum.Pabuei, ikasSarak: IkasSarakEnum.JimLuic, yearNumber: 2019 };\r\n    const [sakawiType, setSakawiType] = useState<SakawiType>('sakawiAhier');\r\n    const [currentAhierYear, setCurrentAhierYear] = useState<AhierYear>(initialAhierYear);\r\n\r\n    React.useEffect(() => {\r\n        function init() {\r\n            // Set current matrix item \r\n            const currentAhierMonthMatrix = props.matrixSakawi.filter(m =>\r\n                Helper.addGregoryDays(m.dateOfGregoryCalendar, m.dayNumbersOfAhierMonth) > new Date())[0];\r\n            if (currentAhierMonthMatrix) {\r\n                setCurrentAhierYear(currentAhierMonthMatrix.ahierMonth.year);\r\n            }\r\n\r\n            // TODO\r\n            // const datesOfAhierYear = props.fullSakawi.filter(x => JSON.stringify(x.dateAhier.ahierMonth.year) === JSON.stringify(currentAhierMonthMatrix.ahierMonth.year));\r\n            // const nextEvents = Helper.getEventsInAhierYear(props.matrixSakawi, datesOfAhierYear);\r\n            // setEvents(nextEvents);\r\n        }\r\n\r\n        init();\r\n    }, [props.fullSakawi, props.matrixSakawi]);\r\n\r\n    function handleOnClickToCurrentYear() {\r\n        if (sakawiType === \"sakawiAhier\") {\r\n            const currentAhierMonthMatrix = props.matrixSakawi.filter(m =>\r\n                Helper.addGregoryDays(m.dateOfGregoryCalendar, m.dayNumbersOfAhierMonth) > new Date())[0];\r\n            if (currentAhierMonthMatrix) {\r\n                setCurrentAhierYear(currentAhierMonthMatrix.ahierMonth.year);\r\n            }\r\n        }\r\n    }\r\n\r\n    function handleOnClickPreviousYear() {\r\n        if (sakawiType === \"sakawiAhier\") {\r\n            const newAhierYear = Helper.addAhierYears(currentAhierYear, -1);\r\n            setCurrentAhierYear(newAhierYear);\r\n        }\r\n    }\r\n\r\n    function handleOnClickNextYear() {\r\n        if (sakawiType === \"sakawiAhier\") {\r\n            const newAhierYear = Helper.addAhierYears(currentAhierYear, 1);\r\n            setCurrentAhierYear(newAhierYear);\r\n        }\r\n    }\r\n\r\n    function renderRows(currentAhierYear: AhierYear) {\r\n        const datesOfAhierYear = props.fullSakawi.filter(x => JSON.stringify(x.dateAhier.ahierMonth.year) === JSON.stringify(currentAhierYear));\r\n        const nextEvents = Helper.getEventsInAhierYear(props.matrixSakawi, datesOfAhierYear);\r\n\r\n        let rows: JSX.Element[] = [];\r\n        nextEvents.forEach((item, index) => {\r\n            rows.push(\r\n                <tr key={`event-row-${index}`}>\r\n                    <td>{Helper.displayDateString(item.eventDate)}</td>\r\n                    <td>\r\n                        <span style={{ backgroundColor: Helper.displayEventDay(item.eventType)?.sakawiType === 'sakawiAhier' ? '#F15A25' : '#007A3D' }} className='circle-event-type'></span>\r\n                    </td>\r\n                    <td>\r\n                        <div className='event-cham-name'>\r\n                            {Helper.displayEventDay(item.eventType)?.akharThrahName}\r\n                        </div>\r\n                        <br />\r\n                        <span style={{ fontSize: '0.8rem' }}>{Helper.displayEventDay(item.eventType)?.latinName}</span>\r\n                    </td>\r\n                    <td>{Helper.displayEventDay(item.eventType)?.vnName}</td>\r\n                </tr>);\r\n        });\r\n\r\n        return rows;\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <YearNavigation\r\n                    sakawiType={sakawiType}\r\n                    currentAhierYear={currentAhierYear}\r\n                    onClickToday={handleOnClickToCurrentYear}\r\n                    onClickPreviousYear={handleOnClickPreviousYear}\r\n                    onClickNextYear={handleOnClickNextYear}\r\n                    onSelectSakawiType={type => setSakawiType(type)}\r\n                />\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Table hover>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Ngày Dương lịch</th>\r\n                                <th></th>\r\n                                <th colSpan={2}>Sự kiện / Lễ hội</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {renderRows(currentAhierYear)}\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}","import { useState } from \"react\";\r\nimport { Col, Container, Form, Row, Spinner } from \"react-bootstrap\";\r\nimport { EventCalendar } from \"../components/eventCanlendar\";\r\nimport { Layout } from \"../Layout\";\r\nimport { FullCalendarType } from \"../model/FullCalendarType\";\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\n\r\nexport declare type AreaType = 'NinhThuan' | 'BinhThuan';\r\n\r\nexport interface EventCalendarPageProps {\r\n    matrixSakawiNT: MatrixCalendarType[];\r\n    matrixSakawiBT: MatrixCalendarType[];\r\n    fullSakawiNT: FullCalendarType[];\r\n    fullSakawiBT: FullCalendarType[];\r\n}\r\n\r\nexport const EventCalendarPage = (props: EventCalendarPageProps) => {\r\n    const [areaType, setAreaType] = useState<AreaType>('NinhThuan');\r\n    const [matrixSakawi, setMatrixSakawi] = useState(props.matrixSakawiNT);\r\n    const [fullSakawi, setFullSakawi] = useState(props.fullSakawiNT);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    if (loading) {\r\n        return <Spinner animation=\"border\" />\r\n    }\r\n\r\n    function handleOnchangeArea(areaType: AreaType) {\r\n        setLoading(true);\r\n        setAreaType(areaType);\r\n        setMatrixSakawi(areaType === \"NinhThuan\" ? props.matrixSakawiNT : props.matrixSakawiBT);\r\n        setFullSakawi(areaType === \"NinhThuan\" ? props.fullSakawiNT : props.fullSakawiBT);\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <Container>\r\n                <Row>\r\n                    <Col sm={12} md={12} lg={1}></Col>\r\n                    <Col sm={12} md={12} lg={10}>\r\n                        <Form>\r\n                            <div className=\"mb-3\">\r\n                                <Form.Check\r\n                                    inline\r\n                                    type={\"radio\"}\r\n                                    label={`Sakawi Ninh Thuận`}\r\n                                    checked={areaType === \"NinhThuan\"}\r\n                                    onChange={() => { handleOnchangeArea('NinhThuan') }}\r\n                                />\r\n                                <Form.Check\r\n                                    inline\r\n                                    type={\"radio\"}\r\n                                    label={`Sakawi Bình Thuận`}\r\n                                    checked={areaType === \"BinhThuan\"}\r\n                                    onChange={() => { handleOnchangeArea('BinhThuan') }}\r\n                                />\r\n                            </div>\r\n                        </Form>\r\n                    </Col>\r\n                    <Col sm={12} md={12} lg={1}></Col>\r\n                </Row>\r\n                {\r\n                    matrixSakawi.length > 0 &&\r\n                    <Row>\r\n                        <Col sm={12} md={12} lg={1}></Col>\r\n                        <Col sm={12} md={12} lg={10}>\r\n                            <EventCalendar\r\n                                matrixSakawi={matrixSakawi}\r\n                                fullSakawi={fullSakawi}\r\n                            />\r\n                        </Col>\r\n                        <Col sm={12} md={12} lg={1}></Col>\r\n                    </Row>\r\n                }\r\n            </Container>\r\n        </Layout>\r\n    );\r\n}","import { useEffect, useState } from \"react\";\r\nimport { Col, ProgressBar, Row } from \"react-bootstrap\";\r\nimport { EventType, SakawiType, VariantType } from \"../enums/enum\";\r\nimport Helper from \"../utility/helper\";\r\n\r\nexport interface CountDownBarProps {\r\n    eventType: EventType;\r\n    eventDate: Date;\r\n    sakawiType?: SakawiType;\r\n}\r\n\r\nexport const CountDownBar = (props: CountDownBarProps) => {\r\n    const [percent, setPercent] = useState(100);\r\n    const [days, setDays] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const timerId = setTimeout(() => {\r\n            init();\r\n        }, 1000);\r\n\r\n        // Cleanup function for the timeout\r\n        return () => {\r\n            clearTimeout(timerId);\r\n        };\r\n    });\r\n\r\n    function init() {\r\n        if (!props.eventDate) {\r\n            return;\r\n        }\r\n\r\n        const now = new Date().getTime();\r\n        const distance = props.eventDate.getTime() - now;\r\n        const timeOfYear = 365 * 24 * 60 * 60 * 1000;\r\n        const percent = distance / timeOfYear * 100;\r\n        setPercent(percent);\r\n\r\n        // Time calculations for days, hours, minutes and seconds\r\n        const days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n\r\n        setDays(days);\r\n    }\r\n\r\n    const dateStr = Helper.displayDateString(props.eventDate);\r\n\r\n    let variantType: VariantType;\r\n    let displayEventName = '';\r\n    switch (props.eventType) {\r\n        case \"AkaokThun\":\r\n            variantType = 'primary';\r\n            displayEventName = 'Năm mới';\r\n            break;\r\n        case \"RijaNagar\":\r\n            variantType = 'danger';\r\n            displayEventName = 'Rija Nagar';\r\n            break;\r\n        case \"KateAngaokBimong\":\r\n            variantType = 'warning';\r\n            displayEventName = 'Katé';\r\n            break;\r\n        case \"TamaRicaowRamawan\":\r\n            variantType = 'success';\r\n            displayEventName = 'Ramâwan';\r\n            break;\r\n        default:\r\n            variantType = 'warning';\r\n            displayEventName = props.eventType;\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col sm={6} md={12} lg={12}>\r\n                <div style={{ marginBottom: \"0.1rem\" }}>\r\n                    <span style={{ fontWeight: \"bold\" }}>{`${displayEventName}:`}</span>\r\n                    <span>{` ${dateStr}`}</span>\r\n                    <span>{` - Còn: ${days} ngày`}</span>\r\n                </div>\r\n                <ProgressBar style={{ height: \"0.3rem\", marginBottom: \"5px\" }} variant={variantType.toString()} now={percent} />\r\n            </Col>\r\n        </Row>\r\n    );\r\n}","import { Col, Row } from \"react-bootstrap\";\r\nimport { AwalMonthEnum, displayIkasSarakName, IkasSarakEnum, SakawiType } from \"../enums/enum\";\r\nimport { AhierDate, AhierMonth } from \"../model/AhierDate\";\r\nimport { AwalDate, AwalMonth } from \"../model/AwalDate\";\r\nimport Helper from \"../utility/helper\";\r\n\r\ninterface DayDetailsProps {\r\n    sakawiType: SakawiType;\r\n    dateGregory: Date;\r\n    dateAwal: AwalDate;\r\n    dateAhier: AhierDate;\r\n    currentAhierMonth?: AhierMonth;\r\n    currentAwalMonth?: AwalMonth;\r\n    currentGregoryMonth?: number;\r\n    currentGregoryYear?: number;\r\n    dayNumbersOfCurrentAhierMonth: number;\r\n    dayNumbersOfCurrentAwalMonth: number;\r\n    showLatinNumberDate: boolean;\r\n}\r\n\r\nexport const DayDetails = (props: DayDetailsProps) => {\r\n    let opacityValue = 1;\r\n    let backgroundColor = '';\r\n\r\n    if (props.dateGregory.toLocaleDateString() === new Date().toLocaleDateString()) {\r\n        backgroundColor = '#FFEFBF';\r\n    }\r\n\r\n    if (props.sakawiType === \"sakawiAhier\") {\r\n        if (JSON.stringify(props.dateAhier.ahierMonth) !== JSON.stringify(props.currentAhierMonth)) {\r\n            backgroundColor = '#F2F2F2';\r\n            opacityValue = 0.3;\r\n        }\r\n    } else if (props.sakawiType === \"sakawiAwal\") {\r\n        if (JSON.stringify(props.dateAwal.awalMonth) !== JSON.stringify(props.currentAwalMonth)) {\r\n            backgroundColor = '#F2F2F2';\r\n            opacityValue = 0.3;\r\n        }\r\n    } else if (props.sakawiType === \"sakawiGregory\") {\r\n        if (props.dateGregory.getMonth() !== props.currentGregoryMonth\r\n            || props.dateGregory.getFullYear() !== props.currentGregoryYear) {\r\n            backgroundColor = '#F2F2F2';\r\n            opacityValue = 0.3;\r\n        }\r\n    }\r\n\r\n    const tdStyle: React.CSSProperties = {\r\n        opacity: opacityValue,\r\n        backgroundColor: backgroundColor\r\n    }\r\n\r\n    let gregoryDateClass = 'gregory-date';\r\n    let ahierDateClass = 'ahier-date';\r\n    let awalDateClass = 'awal-date';\r\n    let ikasSarakMonthCellClass = props.showLatinNumberDate ? '' : 'ikasSarak-month-cell';\r\n\r\n    if (props.showLatinNumberDate) {\r\n        ahierDateClass += ' display-latin-number';\r\n        awalDateClass += ' display-latin-number';\r\n    }\r\n\r\n    switch (props.sakawiType) {\r\n        case \"sakawiGregory\":\r\n            gregoryDateClass += ' active'\r\n            break;\r\n\r\n        case \"sakawiAhier\":\r\n            ahierDateClass += ' active'\r\n            break;\r\n\r\n        case \"sakawiAwal\":\r\n            awalDateClass += ' active'\r\n            ikasSarakMonthCellClass += ' active'\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n\r\n    function displayGregoryDate(sakawiType: SakawiType, dateAhier: AhierDate, dateAwal: AwalDate, dateGregory: Date) {\r\n        const monthGregogy = dateGregory.getMonth() + 1;\r\n\r\n        if ((sakawiType === \"sakawiAwal\" && dateAwal.date === 1) || (sakawiType === \"sakawiAhier\" && dateAhier.date === 1)) {\r\n            return dateGregory.getDate() + \".\" + monthGregogy;\r\n        } else {\r\n            return dateGregory.getDate();\r\n        }\r\n    }\r\n\r\n    function displayAhierDate(dateAhier: AhierDate) {\r\n        const monthAhier = dateAhier.ahierMonth.month + 1;\r\n        const bingun = props.showLatinNumberDate ? '' : 'ꩃ';\r\n        const klem = props.showLatinNumberDate ? '\\'' : 'ꩌ';\r\n\r\n        if (dateAhier.date === 1 && props.sakawiType !== 'sakawiAhier') {\r\n            return (\r\n                <label style={{ margin: 0 }} >{Helper.convertToChamDigitUnicode(dateAhier.date, props.showLatinNumberDate) + bingun + \".\" + Helper.convertToChamDigitUnicode(monthAhier, props.showLatinNumberDate)}</label>\r\n            )\r\n        } else {\r\n            if (props.dayNumbersOfCurrentAhierMonth === 30) {\r\n                if (dateAhier.date <= 15) {\r\n                    return Helper.convertToChamDigitUnicode(dateAhier.date, props.showLatinNumberDate) + bingun;\r\n                } else {\r\n                    return Helper.convertToChamDigitUnicode(dateAhier.date - 15, props.showLatinNumberDate) + klem;\r\n                }\r\n            } else {\r\n                if (dateAhier.date <= 14) {\r\n                    if (dateAhier.date <= 5) {\r\n                        return Helper.convertToChamDigitUnicode(dateAhier.date, props.showLatinNumberDate) + bingun;\r\n                    } else {\r\n                        return Helper.convertToChamDigitUnicode(dateAhier.date + 1, props.showLatinNumberDate) + bingun;\r\n                    }\r\n                } else {\r\n                    return Helper.convertToChamDigitUnicode(dateAhier.date - 14, props.showLatinNumberDate) + klem;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    function displayAwalDate(dateAwal: AwalDate) {\r\n        const monthAwal = dateAwal.awalMonth.month + 1;\r\n        const bingun = props.showLatinNumberDate ? '' : 'ꩃ';\r\n        const klem = props.showLatinNumberDate ? '\\'' : 'ꩌ';\r\n\r\n        if (dateAwal.date === 1 && props.sakawiType !== 'sakawiAwal') {\r\n            return (\r\n                <>\r\n                    <label style={{ margin: 0 }} >{Helper.convertToChamDigitUnicode(dateAwal.date, props.showLatinNumberDate) + bingun + \".\" + Helper.convertToChamDigitUnicode(monthAwal, props.showLatinNumberDate) + \".\"}</label>\r\n                    <label style={{ margin: 0 }} className={ikasSarakMonthCellClass}>\r\n                        {props.showLatinNumberDate ? IkasSarakEnum[dateAwal.awalMonth.year.ikasSarak] : displayIkasSarakName(dateAwal.awalMonth.year.ikasSarak)}\r\n                    </label>\r\n                </>\r\n            )\r\n        } else {\r\n            if (props.dayNumbersOfCurrentAwalMonth === 30) {\r\n                if (dateAwal.date <= 15) {\r\n                    return Helper.convertToChamDigitUnicode(dateAwal.date, props.showLatinNumberDate) + bingun;\r\n                } else {\r\n                    return Helper.convertToChamDigitUnicode(dateAwal.date - 15, props.showLatinNumberDate) + klem;\r\n                }\r\n            } else {\r\n                if (dateAwal.date <= 14) {\r\n                    return Helper.convertToChamDigitUnicode(dateAwal.date, props.showLatinNumberDate) + bingun;\r\n                } else {\r\n                    return Helper.convertToChamDigitUnicode(dateAwal.date - 14, props.showLatinNumberDate) + klem;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function getEvents() {\r\n        let result: string[] = [];\r\n\r\n        if (props.dateAhier.ahierMonth.month === 0 && props.dateAhier.date === 1) {\r\n            result.push('Akaok thun');\r\n        }\r\n\r\n        //TODO\r\n        if (props.dateAhier.ahierMonth.month === 0 && props.dateGregory.getDay() === 4) {\r\n            if (props.dateAwal.awalMonth.month === AwalMonthEnum.Ramadan) {\r\n                // closet Thurday and after Muk Trun day\r\n                if (props.dateAwal.date >= 16 && props.dateAhier.date <= 22) {\r\n                    result.push('Rija Nagar');\r\n                }\r\n            } else {\r\n                if (props.dateAhier.date >= 1 && props.dateAhier.date <= 7) {\r\n                    result.push('Rija Nagar');\r\n                }\r\n            }\r\n        }\r\n\r\n        if (props.dateAhier.ahierMonth.month === 5 && props.dateAhier.date === props.dayNumbersOfCurrentAhierMonth) {\r\n            result.push('Katé palei Hamu Tanran');\r\n        }\r\n\r\n        if (props.dateAhier.ahierMonth.month === 6 && props.dateAhier.date === 1) {\r\n            result.push('Katé angaok bimong');\r\n        }\r\n\r\n        if (props.dayNumbersOfCurrentAhierMonth === 30) {\r\n            if (props.dateAhier.ahierMonth.month === 8 && props.dateAhier.date === 16) {\r\n                result.push('Ca-mbur');\r\n            }\r\n        } else {\r\n            if (props.dateAhier.ahierMonth.month === 8 && props.dateAhier.date === 15) {\r\n                result.push('Ca-mbur');\r\n            }\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month === 8 && props.dateAwal.date === 1) {\r\n            result.push('Tamâ ricaow Ramâwan');\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month === 8 && props.dateAwal.date === 16) {\r\n            result.push('Muk trun');\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month === 8 && props.dateAwal.date === 21) {\r\n            result.push('Ong trun');\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month === 9 && props.dateAwal.date === 2) {\r\n            result.push('Talaih aek Ramâwan');\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month === 11 && props.dateAwal.date === 1) {\r\n            result.push('Ikak Waha');\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month === 11 && props.dateAwal.date === 11) {\r\n            result.push('Talaih Waha');\r\n        }\r\n\r\n        if (props.dateAhier.ahierMonth.month === 3 && props.dateGregory.getDay() === 0 && props.dateAhier.date < 7) {\r\n            result.push('Yuer Yang');\r\n        }\r\n\r\n        // TODO: \r\n        // if (props.dateAhier.ahierMonth.month === 10 && props.dateGregory.getDay() === 2 && props.dateAhier.date <= 15) {\r\n        //     result.push('Peh ba-mbeng Yang');\r\n        // }\r\n\r\n        if ((props.dateAhier.ahierMonth.month === 2\r\n            || props.dateAhier.ahierMonth.month === 5\r\n            || props.dateAhier.ahierMonth.month === 7\r\n            || props.dateAhier.ahierMonth.month === 9\r\n            || props.dateAhier.ahierMonth.month === 10) && props.dateGregory.getDay() === 3) {\r\n\r\n            if (props.dayNumbersOfCurrentAhierMonth === 30) {\r\n                if (props.dateAhier.date > 15 && (props.dateAhier.date - 15) % 2 === 0) {\r\n                    result.push('♥️ Lakhah');\r\n                }\r\n            } else {\r\n                if (props.dateAhier.date > 14 && (props.dateAhier.date - 14) % 2 === 0) {\r\n                    result.push('♥️ Lakhah');\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    return (\r\n        <td style={tdStyle}>\r\n            <Row>\r\n                <Col xs={6} sm={6} md={6}></Col>\r\n                <Col className={gregoryDateClass} xs={6} sm={6} md={6}>\r\n                    {displayGregoryDate(props.sakawiType, props.dateAhier, props.dateAwal, props.dateGregory)}\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={12} sm={12} md={12} style={{ minHeight: \"30px\" }}>\r\n                    {getEvents().map((item, index) => {\r\n                        return <span key={index} className='event-name'>{item}</span>\r\n                    })}\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className={awalDateClass} xs={6} sm={6} md={6}>\r\n                    {displayAwalDate(props.dateAwal)}\r\n                </Col>\r\n                <Col className={ahierDateClass} xs={6} sm={6} md={6}>\r\n                    {displayAhierDate(props.dateAhier)}\r\n                </Col>\r\n            </Row>\r\n        </td>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { FullCalendarType } from \"../model/FullCalendarType\";\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport Helper from \"../utility/helper\";\r\nimport { DayDetails } from \"./dayDetails\";\r\n\r\ninterface MonthAhierProps {\r\n    matrixSakawi: MatrixCalendarType[];\r\n    fullSakawi: FullCalendarType[];\r\n    currentAhierMonthMatrix: MatrixCalendarType;\r\n    showLatinNumberDate: boolean;\r\n}\r\n\r\nexport const MonthAhier = (props: MonthAhierProps) => {\r\n    const [datesOfCurrentMonth, setDatesOfCurrentMonth] = useState<FullCalendarType[]>([]);\r\n\r\n    React.useEffect(() => {\r\n        function init() {\r\n            // Get date list will be display at current month\r\n            const firstDayOfCurrentAhierMonthIndex = props.fullSakawi.findIndex(x => x.dateAhier.date === 1\r\n                && JSON.stringify(x.dateAhier.ahierMonth) === JSON.stringify(props.currentAhierMonthMatrix.ahierMonth));\r\n            const firstIndex = firstDayOfCurrentAhierMonthIndex - props.currentAhierMonthMatrix.firstDayOfAhierMonth;\r\n            const lastIndex = firstIndex + 41; // 42 - 1 cells\r\n            const datesOfCurrentMonth = props.fullSakawi.filter((item, index) => index >= firstIndex && index <= lastIndex);\r\n            setDatesOfCurrentMonth(datesOfCurrentMonth);\r\n        }\r\n\r\n        init();\r\n    }, [props.currentAhierMonthMatrix.ahierMonth, props.currentAhierMonthMatrix.firstDayOfAhierMonth, props.fullSakawi]);\r\n\r\n    // draw Calendar Table\r\n    let cells: JSX.Element[] = [];\r\n    let rows: JSX.Element[] = [];\r\n\r\n    datesOfCurrentMonth.forEach((item, index) => {\r\n        const dayNumbersOfCurrentAhierMonth = Helper.getActualDayNumbersOfAhierMonth(props.matrixSakawi, item.dateAhier.ahierMonth);\r\n        const dayNumbersOfCurrentAwalMonth = Helper.getDayNumbersOfAwalMonth(item.dateAwal.awalMonth.year, item.dateAwal.awalMonth.month);\r\n\r\n        cells.push(\r\n            <DayDetails\r\n                sakawiType=\"sakawiAhier\"\r\n                key={`sakawiAhier-cell-${index}`}\r\n                dateAhier={item.dateAhier}\r\n                dateAwal={item.dateAwal}\r\n                dateGregory={item.dateGregory}\r\n                currentAhierMonth={props.currentAhierMonthMatrix.ahierMonth}\r\n                currentAwalMonth={props.currentAhierMonthMatrix.awalMonth}\r\n                dayNumbersOfCurrentAhierMonth={dayNumbersOfCurrentAhierMonth}\r\n                dayNumbersOfCurrentAwalMonth={dayNumbersOfCurrentAwalMonth}\r\n                showLatinNumberDate={props.showLatinNumberDate}\r\n            />\r\n        );\r\n\r\n        if ((index + 1) % 7 === 0) {\r\n            rows.push(<tr key={`sakawiAhier-row-${index}`}>{cells}</tr>);\r\n            cells = [];\r\n        }\r\n    })\r\n\r\n    const dayNames = [\"Adit\", \"Thom\", \"Angar\", \"But\", \"Jip\", \"Suk\", \"Sanacar\"]\r\n    const tableStyle: React.CSSProperties = {\r\n        height: \"400px\",\r\n        tableLayout: \"fixed\"\r\n    }\r\n\r\n    return (\r\n        <Table bordered hover style={tableStyle}>\r\n            <thead>\r\n                <tr>\r\n                    {dayNames.map((d, index) =>\r\n                        <th className=\"day-name\" key={index}>{d}</th>\r\n                    )}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {rows}\r\n            </tbody>\r\n        </Table>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { FullCalendarType } from \"../model/FullCalendarType\";\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport Helper from '../utility/helper';\r\nimport { DayDetails } from \"./dayDetails\";\r\n\r\ninterface MonthAwalProps {\r\n    matrixSakawi: MatrixCalendarType[];\r\n    fullSakawi: FullCalendarType[];\r\n    currentAwalMonthMatrix: MatrixCalendarType;\r\n    showLatinNumberDate: boolean;\r\n}\r\n\r\nexport const MonthAwal = (props: MonthAwalProps) => {\r\n    const [datesOfCurrentMonth, setDatesOfCurrentMonth] = useState<FullCalendarType[]>([]);\r\n\r\n    React.useEffect(() => {\r\n        function init() {\r\n            // Get date list will be display at current month\r\n            const firstDayOfCurrentAwalMonthIndex = props.fullSakawi.findIndex(x => x.dateAwal.date === 1\r\n                && JSON.stringify(x.dateAwal.awalMonth) === JSON.stringify(props.currentAwalMonthMatrix.awalMonth));\r\n            const firstIndex = firstDayOfCurrentAwalMonthIndex - props.currentAwalMonthMatrix.firstDayOfAwalMonth;\r\n            const lastIndex = firstIndex + 41; // 42 - 1 cells\r\n            const datesOfCurrentMonth = props.fullSakawi.filter((item, index) => index >= firstIndex && index <= lastIndex);\r\n            setDatesOfCurrentMonth(datesOfCurrentMonth);\r\n        }\r\n\r\n        init();\r\n    }, [props.currentAwalMonthMatrix.awalMonth, props.currentAwalMonthMatrix.firstDayOfAwalMonth, props.fullSakawi]);\r\n\r\n    // draw Calendar Table\r\n    let cells: JSX.Element[] = [];\r\n    let rows: JSX.Element[] = [];\r\n\r\n    datesOfCurrentMonth.forEach((item, index) => {\r\n        const dayNumbersOfCurrentAhierMonth = Helper.getActualDayNumbersOfAhierMonth(props.matrixSakawi, item.dateAhier.ahierMonth);\r\n        const dayNumbersOfCurrentAwalMonth = Helper.getDayNumbersOfAwalMonth(item.dateAwal.awalMonth.year, item.dateAwal.awalMonth.month);\r\n\r\n        cells.push(\r\n            <DayDetails\r\n                sakawiType=\"sakawiAwal\"\r\n                key={`sakawiAwal-cell-${index}`}\r\n                dateAhier={item.dateAhier}\r\n                dateAwal={item.dateAwal}\r\n                dateGregory={item.dateGregory}\r\n                currentAhierMonth={props.currentAwalMonthMatrix.ahierMonth}\r\n                currentAwalMonth={props.currentAwalMonthMatrix.awalMonth}\r\n                dayNumbersOfCurrentAhierMonth={dayNumbersOfCurrentAhierMonth}\r\n                dayNumbersOfCurrentAwalMonth={dayNumbersOfCurrentAwalMonth}\r\n                showLatinNumberDate={props.showLatinNumberDate}\r\n            />\r\n        );\r\n\r\n        if ((index + 1) % 7 === 0) {\r\n            rows.push(<tr key={`sakawiAwal-row-${index}`}>{cells}</tr>);\r\n            cells = [];\r\n        }\r\n    })\r\n\r\n    const dayNames = [\"Adit\", \"Thom\", \"Angar\", \"But\", \"Jip\", \"Suk\", \"Sanacar\"]\r\n    const tableStyle: React.CSSProperties = {\r\n        height: \"400px\",\r\n        tableLayout: \"fixed\"\r\n    }\r\n\r\n    return (\r\n        <Table bordered hover style={tableStyle}>\r\n            <thead>\r\n                <tr>\r\n                    {dayNames.map((d, index) =>\r\n                        <th className=\"day-name\" key={index}>{d}</th>\r\n                    )}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {rows}\r\n            </tbody>\r\n        </Table>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { FullCalendarType } from \"../model/FullCalendarType\";\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport Helper from '../utility/helper';\r\nimport { DayDetails } from \"./dayDetails\";\r\n\r\ninterface MonthGregoryProps {\r\n    matrixSakawi: MatrixCalendarType[];\r\n    fullSakawi: FullCalendarType[];\r\n    currentGregoryMonth: number;\r\n    currentGregoryYear: number;\r\n    showLatinNumberDate: boolean;\r\n}\r\n\r\nexport const MonthGregory = (props: MonthGregoryProps) => {\r\n    const [datesOfCurrentMonth, setDatesOfCurrentMonth] = useState<FullCalendarType[]>([]);\r\n\r\n    React.useEffect(() => {\r\n        function init() {\r\n            // Gregory Date\r\n            const firstGregoryDate = new Date(props.currentGregoryYear, props.currentGregoryMonth, 1);\r\n\r\n            // Get date list will be display at current month\r\n            const firstDayOfCurrentGregoryMonthIndex = props.fullSakawi.findIndex(x =>\r\n                x.dateGregory.getDate() === 1\r\n                && x.dateGregory.getMonth() === props.currentGregoryMonth\r\n                && x.dateGregory.getFullYear() === props.currentGregoryYear);\r\n            const firstIndex = firstDayOfCurrentGregoryMonthIndex - firstGregoryDate.getDay();\r\n            const lastIndex = firstIndex + 41; // 42 - 1 cells\r\n            const datesOfCurrentMonth = props.fullSakawi.filter((item, index) => index >= firstIndex && index <= lastIndex);\r\n            setDatesOfCurrentMonth(datesOfCurrentMonth);\r\n        }\r\n\r\n        init();\r\n    }, [props.currentGregoryMonth, props.currentGregoryYear, props.fullSakawi]);\r\n\r\n    // draw Calendar Table\r\n    let cells: JSX.Element[] = [];\r\n    let rows: JSX.Element[] = [];\r\n\r\n    datesOfCurrentMonth.forEach((item, index) => {\r\n        const dayNumbersOfCurrentAhierMonth = Helper.getActualDayNumbersOfAhierMonth(props.matrixSakawi, item.dateAhier.ahierMonth);\r\n        const dayNumbersOfCurrentAwalMonth = Helper.getDayNumbersOfAwalMonth(item.dateAwal.awalMonth.year, item.dateAwal.awalMonth.month);\r\n\r\n        cells.push(\r\n            <DayDetails\r\n                sakawiType=\"sakawiGregory\"\r\n                key={`sakawiGregory-cell-${index}`}\r\n                dateAhier={item.dateAhier}\r\n                dateAwal={item.dateAwal}\r\n                dateGregory={item.dateGregory}\r\n                currentGregoryMonth={props.currentGregoryMonth}\r\n                currentGregoryYear={props.currentGregoryYear}\r\n                dayNumbersOfCurrentAhierMonth={dayNumbersOfCurrentAhierMonth}\r\n                dayNumbersOfCurrentAwalMonth={dayNumbersOfCurrentAwalMonth}\r\n                showLatinNumberDate={props.showLatinNumberDate}\r\n            />\r\n        );\r\n\r\n        if ((index + 1) % 7 === 0) {\r\n            rows.push(<tr key={`sakawiGregory-row-${index}`}>{cells}</tr>);\r\n            cells = [];\r\n        }\r\n    })\r\n\r\n    const dayNames = [\"CN\", \"Hai\", \"Ba\", \"Tư\", \"Năm\", \"Sáu\", \"Bảy\"];\r\n    const tableStyle: React.CSSProperties = {\r\n        height: \"400px\",\r\n        tableLayout: \"fixed\"\r\n    }\r\n\r\n    return (\r\n        <Table bordered hover style={tableStyle}>\r\n            <thead>\r\n                <tr>\r\n                    {dayNames.map((d, index) =>\r\n                        <th className=\"day-name\" key={index}>{d}</th>\r\n                    )}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {rows}\r\n            </tbody>\r\n        </Table>\r\n    );\r\n}\r\n","import { Button, ButtonGroup, ButtonToolbar, Col } from \"react-bootstrap\";\r\nimport { AwalMonthEnum, displayAhierMonthName, displayAwalMonthName, displayIkasSarakName, displayNasakName, IkasSarakEnum, SakawiType } from \"../enums/enum\";\r\nimport { AhierMonth } from \"../model/AhierDate\";\r\nimport { AwalMonth } from \"../model/AwalDate\";\r\nimport Helper from \"../utility/helper\";\r\n\r\ninterface MonthNavigationProps {\r\n    sakawiType: SakawiType;\r\n    currentAhierMonth?: AhierMonth;\r\n    currentAwalMonth?: AwalMonth;\r\n    currentGregoryMonth?: number;\r\n    currentGregoryYear?: number;\r\n    onSelectSakawiType: (type: SakawiType) => void\r\n    onClickToday: () => void;\r\n    onClickPreviousMonth: () => void;\r\n    onClickNextMonth: () => void;\r\n}\r\n\r\nexport const MonthNavigation = (props: MonthNavigationProps) => {\r\n    const currentGregoryMonth = props.currentGregoryMonth ? props.currentGregoryMonth + 1 : 1;\r\n\r\n    return (\r\n        <>\r\n            <Col md={4}>\r\n                <ButtonToolbar aria-label=\"Toolbar with button groups\" style={{ justifyContent: \"flex-start\" }}>\r\n                    <ButtonGroup aria-label=\"Type of calendar\">\r\n                        <Button variant=\"outline-secondary\" active={props.sakawiType === 'sakawiAhier'} onClick={() => props.onSelectSakawiType('sakawiAhier')}>Lịch Cham</Button>\r\n                        <Button variant=\"outline-secondary\" active={props.sakawiType === 'sakawiAwal'} onClick={() => props.onSelectSakawiType('sakawiAwal')}>Lịch Awal</Button>\r\n                        <Button variant=\"outline-secondary\" active={props.sakawiType === 'sakawiGregory'} onClick={() => props.onSelectSakawiType('sakawiGregory')}>Dương lịch</Button>\r\n                    </ButtonGroup>\r\n                </ButtonToolbar>\r\n            </Col>\r\n            <Col md={5} style={{ textAlign: \"center\" }}>\r\n                {props.sakawiType === 'sakawiAhier' && props.currentAhierMonth &&\r\n                    <>\r\n                        <div className='bilan-title'>\r\n                            {displayAhierMonthName(props.currentAhierMonth.month).akharThrahName}\r\n                            {' - '}{displayNasakName(props.currentAhierMonth.year.nasak).akharThrahName}\r\n                            {'   '}<label className='ikasSarak-title'>{displayIkasSarakName(props.currentAhierMonth.year.ikasSarak)}</label>\r\n                            {' - '}{Helper.convertToChamDigitUnicode(props.currentAhierMonth.year.yearNumber ?? 0)}\r\n                        </div>\r\n                        <div className='bilan-latin-title'>\r\n                            {displayAhierMonthName(props.currentAhierMonth.month).rumiName} {`(${(props.currentAhierMonth.month + 1)})`}\r\n                            {' - '}{displayNasakName(props.currentAhierMonth.year.nasak).rumiName} {IkasSarakEnum[props.currentAhierMonth.year.ikasSarak]}\r\n                            {' - '}{props.currentAhierMonth.year.yearNumber}\r\n                        </div>\r\n                    </>\r\n                }\r\n                {props.sakawiType === 'sakawiAwal' && props.currentAwalMonth &&\r\n                    <>\r\n                        <div className='bilan-title'>\r\n                            {displayAwalMonthName(props.currentAwalMonth.month).akharThrahName}\r\n                            {' - '}<label className='ikasSarak-title'>{displayIkasSarakName(props.currentAwalMonth.year.ikasSarak)}</label>\r\n                            {' - '}{Helper.convertToChamDigitUnicode(props.currentAwalMonth.year.yearNumber ?? 0)}\r\n                        </div>\r\n                        <div className='bilan-latin-title'>\r\n                            {AwalMonthEnum[props.currentAwalMonth.month]} {`(${(props.currentAwalMonth.month + 1)})`}\r\n                            {' - '}{IkasSarakEnum[props.currentAwalMonth.year.ikasSarak]}\r\n                            {' - '}{props.currentAwalMonth.year.yearNumber}\r\n                        </div>\r\n                    </>\r\n                }\r\n                {props.sakawiType === 'sakawiGregory' &&\r\n                    <>\r\n                        <div className='bilan-latin-title'>\r\n                            {`Tháng ${currentGregoryMonth} - ${props.currentGregoryYear}`}\r\n                        </div>\r\n                        <br />\r\n                    </>\r\n                }\r\n            </Col>\r\n            <Col md={3}>\r\n                <ButtonToolbar aria-label=\"Toolbar with button groups\" style={{ justifyContent: \"flex-end\" }}>\r\n                    <ButtonGroup aria-label=\"Third group\" style={{ marginRight: \".75em\" }}>\r\n                        <Button variant=\"secondary\" onClick={props.onClickToday}>Hôm nay</Button>\r\n                    </ButtonGroup>\r\n                    <ButtonGroup aria-label=\"Navigate months\">\r\n                        <Button variant=\"secondary\" className=\"fa fa-chevron-left\" onClick={props.onClickPreviousMonth} />\r\n                        <Button variant=\"secondary\" className=\"fa fa-chevron-right\" onClick={props.onClickNextMonth} />\r\n                    </ButtonGroup>\r\n                </ButtonToolbar>\r\n            </Col>\r\n        </>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { Col, Container, Form, Row } from \"react-bootstrap\";\r\nimport { AhierMonthEnum, GuecTypeEnum, GuenTypeEnum, IkasSarakEnum, NasakEnum, SakawiType } from \"../enums/enum\";\r\nimport { AhierMonth } from \"../model/AhierDate\";\r\nimport { AwalMonth } from \"../model/AwalDate\";\r\nimport { FullCalendarType } from \"../model/FullCalendarType\";\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport Helper from \"../utility/helper\";\r\nimport { MonthAhier } from \"./monthAhier\";\r\nimport { MonthAwal } from \"./monthAwal\";\r\nimport { MonthGregory } from \"./monthGregory\";\r\nimport { MonthNavigation } from \"./monthNavigation\";\r\n\r\ninterface MonthCalendarProps {\r\n    matrixSakawi: MatrixCalendarType[],\r\n    fullSakawi: FullCalendarType[]\r\n}\r\n\r\nexport const MonthCalendar = (props: MonthCalendarProps) => {\r\n    const initialAhierMonth: AhierMonth = { month: AhierMonthEnum.BilanSa, year: { nasak: NasakEnum.Pabuei, ikasSarak: IkasSarakEnum.JimLuic, yearNumber: 2019 } };\r\n    const initialAwalMonth: AwalMonth = { month: 0, year: { ikasSarak: 0, yearNumber: 1400 } };\r\n    const initialGregoryDate: Date = new Date();\r\n\r\n    const initialMatrixCalendarType: MatrixCalendarType = {\r\n        ahierMonth: initialAhierMonth,\r\n        dayNumbersOfAhierMonth: 0,\r\n        firstDayOfAhierMonth: 0,\r\n        hasGuen: false,\r\n        typeOfGuen: GuenTypeEnum.None,\r\n        hasGuec: false,\r\n        typeOfGuec: GuecTypeEnum.None,\r\n        dateOfGregoryCalendar: initialGregoryDate,\r\n        awalMonth: initialAwalMonth,\r\n        dayNumbersOfAwalMonth: 0,\r\n        firstDayOfAwalMonth: 0\r\n    }\r\n\r\n    const [sakawiType, setSakawiType] = useState<SakawiType>('sakawiAhier');\r\n    const [currentAhierMonthMatrix, setCurrentAhierMonthMatrix] = useState<MatrixCalendarType>(initialMatrixCalendarType);\r\n    const [currentAwalMonthMatrix, setCurrentAwalMonthMatrix] = useState<MatrixCalendarType>(initialMatrixCalendarType);\r\n    const [currentGregoryMonth, setCurrentGregoryMonth] = useState(new Date().getMonth());\r\n    const [currentGregoryYear, setCurrentGregoryYear] = useState(new Date().getFullYear());\r\n    const [showLatinNumberDate, setShowLatinNumberDate] = useState(false);\r\n\r\n    React.useEffect(() => {\r\n        function init() {\r\n            // Set current matrix item \r\n            const currentAhierMonthMatrix = props.matrixSakawi.filter(m =>\r\n                Helper.addGregoryDays(m.dateOfGregoryCalendar, m.dayNumbersOfAhierMonth) > new Date())[0];\r\n            if (currentAhierMonthMatrix) {\r\n                setCurrentAhierMonthMatrix(currentAhierMonthMatrix);\r\n            }\r\n\r\n            const currentAwalMonthMatrix = props.matrixSakawi.filter(m =>\r\n                Helper.addGregoryDays(m.dateOfGregoryCalendar, m.dayNumbersOfAwalMonth) > new Date())[0];\r\n            if (currentAwalMonthMatrix) {\r\n                setCurrentAwalMonthMatrix(currentAwalMonthMatrix);\r\n            }\r\n        }\r\n\r\n        init();\r\n    }, [props.matrixSakawi]);\r\n\r\n    function handleOnClickToCurrentMonth() {\r\n        if (sakawiType === \"sakawiAhier\") {\r\n            const currentAhierMonth = props.matrixSakawi.filter(m =>\r\n                Helper.addGregoryDays(m.dateOfGregoryCalendar, m.dayNumbersOfAhierMonth) >= new Date())[0];\r\n            if (currentAhierMonth) {\r\n                setCurrentAhierMonthMatrix(currentAhierMonth);\r\n            }\r\n        } else if (sakawiType === \"sakawiAwal\") {\r\n            const currentAwalMonth = props.matrixSakawi.filter(m =>\r\n                Helper.addGregoryDays(m.dateOfGregoryCalendar, m.dayNumbersOfAwalMonth) >= new Date())[0];\r\n            if (currentAwalMonth) {\r\n                setCurrentAwalMonthMatrix(currentAwalMonth);\r\n            }\r\n        } else {\r\n            setCurrentGregoryMonth(new Date().getMonth());\r\n            setCurrentGregoryYear(new Date().getFullYear());\r\n        }\r\n    }\r\n\r\n    function handleOnClickPreviousMonth() {\r\n        if (sakawiType === \"sakawiAhier\") {\r\n            const index = props.matrixSakawi.findIndex(x => JSON.stringify(x) === JSON.stringify(currentAhierMonthMatrix));\r\n            setCurrentAhierMonthMatrix(props.matrixSakawi[index - 1]);\r\n        } else if (sakawiType === \"sakawiAwal\") {\r\n            const index = props.matrixSakawi.findIndex(x => JSON.stringify(x) === JSON.stringify(currentAwalMonthMatrix));\r\n            setCurrentAwalMonthMatrix(props.matrixSakawi[index - 1]);\r\n        } else {\r\n            if (currentGregoryMonth === 0) {\r\n                setCurrentGregoryMonth(11);\r\n                setCurrentGregoryYear(currentGregoryYear - 1);\r\n            } else {\r\n                setCurrentGregoryMonth(currentGregoryMonth - 1);\r\n                setCurrentGregoryYear(currentGregoryYear);\r\n            }\r\n        }\r\n    }\r\n\r\n    function handleOnClickNextMonth() {\r\n        if (sakawiType === \"sakawiAhier\") {\r\n            const index = props.matrixSakawi.findIndex(x => JSON.stringify(x) === JSON.stringify(currentAhierMonthMatrix));\r\n            setCurrentAhierMonthMatrix(props.matrixSakawi[index + 1]);\r\n        } else if (sakawiType === \"sakawiAwal\") {\r\n            const index = props.matrixSakawi.findIndex(x => JSON.stringify(x) === JSON.stringify(currentAwalMonthMatrix));\r\n            setCurrentAwalMonthMatrix(props.matrixSakawi[index + 1]);\r\n        } else {\r\n            if (currentGregoryMonth === 11) {\r\n                setCurrentGregoryMonth(0);\r\n                setCurrentGregoryYear(currentGregoryYear + 1);\r\n            } else {\r\n                setCurrentGregoryMonth(currentGregoryMonth + 1);\r\n                setCurrentGregoryYear(currentGregoryYear);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col md={4}>\r\n                    <Form>\r\n                        <div className=\"mb-3\">\r\n                            <Form.Check\r\n                                inline\r\n                                type={\"checkbox\"}\r\n                                label={`Hiển thị ngày bằng số latin`}\r\n                                checked={showLatinNumberDate}\r\n                                onChange={() => setShowLatinNumberDate(!showLatinNumberDate)}\r\n                            />\r\n                        </div>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <MonthNavigation\r\n                    sakawiType={sakawiType}\r\n                    currentAhierMonth={currentAhierMonthMatrix.ahierMonth}\r\n                    currentAwalMonth={currentAwalMonthMatrix.awalMonth}\r\n                    currentGregoryMonth={currentGregoryMonth}\r\n                    currentGregoryYear={currentGregoryYear}\r\n                    onClickToday={handleOnClickToCurrentMonth}\r\n                    onClickPreviousMonth={handleOnClickPreviousMonth}\r\n                    onClickNextMonth={handleOnClickNextMonth}\r\n                    onSelectSakawiType={type => setSakawiType(type)}\r\n                />\r\n            </Row>\r\n            <Row>\r\n                <Col md={12}>\r\n                    {sakawiType === 'sakawiAhier' &&\r\n                        <MonthAhier\r\n                            matrixSakawi={props.matrixSakawi}\r\n                            fullSakawi={props.fullSakawi}\r\n                            currentAhierMonthMatrix={currentAhierMonthMatrix}\r\n                            showLatinNumberDate={showLatinNumberDate}\r\n                        />\r\n                    }\r\n                    {sakawiType === 'sakawiAwal' &&\r\n                        <MonthAwal\r\n                            matrixSakawi={props.matrixSakawi}\r\n                            fullSakawi={props.fullSakawi}\r\n                            currentAwalMonthMatrix={currentAwalMonthMatrix}\r\n                            showLatinNumberDate={showLatinNumberDate}\r\n                        />\r\n                    }\r\n                    {sakawiType === 'sakawiGregory' &&\r\n                        <MonthGregory\r\n                            matrixSakawi={props.matrixSakawi}\r\n                            fullSakawi={props.fullSakawi}\r\n                            currentGregoryMonth={currentGregoryMonth ?? 0}\r\n                            currentGregoryYear={currentGregoryYear ?? new Date().getFullYear()}\r\n                            showLatinNumberDate={showLatinNumberDate}\r\n                        />\r\n                    }\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <div style={{ fontWeight: \"bold\" }}>Chú thích:</div>\r\n                    <div className=\"notice\">\r\n                        <li><span className=\"ahier-date\">꩑ꩃ / ꩑ꩌ</span> [bingun/klem]: ngày trước/sau trăng rằm của lịch Cham</li>\r\n                        <li><span className=\"awal-date\">꩑ꩃ / ꩑ꩌ</span> [bingun/klem]: ngày trước/sau trăng rằm của lịch Awal</li>\r\n                        <li>1: ngày Dương lịch</li>\r\n                        <li>Các tháng thiếu (29 ngày) của lịch Cham, không có ngày <span className=\"ahier-date\">꩖ꩃ</span> [6 bingun], mà từ <span className=\"ahier-date\">꩕ꩃ</span> [5 bingun] tới <span className=\"ahier-date\">꩗ꩃ</span> [7 bingun]</li>\r\n                    </div>\r\n                    <br />\r\n                </Col>\r\n            </Row>\r\n        </Container >\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { Accordion, Alert, Button, Card, Col, Container, Form, Row, Spinner } from \"react-bootstrap\";\r\nimport { CountDownBar, CountDownBarProps } from \"../components/countDownBar\";\r\nimport { MonthCalendar } from \"../components/monthCalendar\";\r\nimport { AreaType } from \"../enums/enum\";\r\nimport { Layout } from \"../Layout\";\r\nimport { FullCalendarType } from \"../model/FullCalendarType\";\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport Helper from \"../utility/helper\";\r\n\r\nexport interface MonthCalendarPageProps {\r\n    matrixSakawiNT: MatrixCalendarType[];\r\n    matrixSakawiBT: MatrixCalendarType[];\r\n    fullSakawiNT: FullCalendarType[];\r\n    fullSakawiBT: FullCalendarType[];\r\n}\r\n\r\nexport const MonthCalendarPage = (props: MonthCalendarPageProps) => {\r\n    const [showWarning, setShowWarning] = useState(true);\r\n    const [areaType, setAreaType] = useState<AreaType>('NinhThuan');\r\n    const [matrixSakawi, setMatrixSakawi] = useState<MatrixCalendarType[]>([]);\r\n    const [fullSakawi, setFullSakawi] = useState<FullCalendarType[]>([]);\r\n    const [nextEvents, setNextEvents] = useState<CountDownBarProps[]>([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    React.useEffect(() => {\r\n        setLoading(true);\r\n\r\n        function init() {\r\n            setMatrixSakawi(areaType === \"NinhThuan\" ? props.matrixSakawiNT : props.matrixSakawiBT);\r\n            setFullSakawi(areaType === \"NinhThuan\" ? props.fullSakawiNT : props.fullSakawiBT);\r\n\r\n            const nextEvents = Helper.getNextEvents(areaType === \"NinhThuan\" ? props.fullSakawiNT : props.fullSakawiBT);\r\n            setNextEvents(nextEvents);\r\n        }\r\n\r\n        init();\r\n        setLoading(false);\r\n        \r\n        // Cleanup function for asynchronous operations\r\n        return () => {\r\n            setLoading(false);\r\n        };\r\n    }, [areaType, props.fullSakawiBT, props.fullSakawiNT, props.matrixSakawiBT, props.matrixSakawiNT]);\r\n\r\n    React.useEffect(() => {\r\n        const timerId = setTimeout(() => {\r\n            setShowWarning(false);\r\n        }, 30000);\r\n\r\n        // Cleanup function for the timeout\r\n        return () => {\r\n            clearTimeout(timerId);\r\n        };\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <Spinner animation=\"border\" />\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <Container>\r\n                {showWarning &&\r\n                    <Row>\r\n                        <Col sm={12} md={12} lg={12}>\r\n                            <Alert variant='info' onClose={() => setShowWarning(false)} dismissible>\r\n                                <Alert.Heading>Lưu ý!</Alert.Heading>\r\n                                - Ứng dụng đang trong quá trình phát triển nên còn những thiếu sót, rất mong nhận được nhiều góp ý để sản phẩm được hoàn thiện hơn.\r\n                                <br />- Ứng dụng này chỉ mang tính chất tham khảo, Sakawi chính thức được Hội đồng Chức sắc phát hành từng năm.\r\n                            </Alert>\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                <Row>\r\n                    <Col md={4}>\r\n                        <Form>\r\n                            <div className=\"mb-3\">\r\n                                <Form.Check\r\n                                    inline\r\n                                    type={\"radio\"}\r\n                                    label={`Sakawi Ninh Thuận`}\r\n                                    checked={areaType === \"NinhThuan\"}\r\n                                    onChange={() => { setAreaType('NinhThuan') }}\r\n                                />\r\n                                <Form.Check\r\n                                    inline\r\n                                    type={\"radio\"}\r\n                                    label={`Sakawi Bình Thuận`}\r\n                                    checked={areaType === \"BinhThuan\"}\r\n                                    onChange={() => { setAreaType('BinhThuan') }}\r\n                                />\r\n                            </div>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm={12} md={12} lg={12}>\r\n                        <Accordion defaultActiveKey=\"0\">\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                                        [Các sự kiện sắp diễn ra]\r\n                                    </Accordion.Toggle>\r\n                                </Card.Header>\r\n                                <Accordion.Collapse eventKey=\"0\">\r\n                                    <Card.Body>\r\n                                        {nextEvents.map((item, index) =>\r\n                                            <CountDownBar key={index} eventType={item.eventType} eventDate={item.eventDate} />\r\n                                        )}\r\n                                    </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                        </Accordion>\r\n                    </Col>\r\n                </Row>\r\n                <br />\r\n                {\r\n                    matrixSakawi.length > 0 &&\r\n                    <Row>\r\n                        <MonthCalendar\r\n                            matrixSakawi={matrixSakawi}\r\n                            fullSakawi={fullSakawi}\r\n                        />\r\n                    </Row>\r\n                }\r\n                {/*{\r\n                <Row>\r\n                    <YearCalendar\r\n                        matrixSakawi={matrixSakawi}\r\n                        fullSakawi={fullSakawi}\r\n                    />\r\n                </Row>\r\n            }*/}\r\n            </Container>\r\n        </Layout>\r\n    );\r\n}","//import logo from './logo.svg';\r\nimport { useEffect, useState } from \"react\";\r\nimport { HashRouter, Route, Routes } from \"react-router-dom\";\r\nimport './App.css';\r\nimport { FullCalendarType } from \"./model/FullCalendarType\";\r\nimport { MatrixCalendarType } from \"./model/MatrixCalendarType\";\r\nimport { DocumentPage } from \"./pages/documentPage\";\r\nimport { EventCalendarPage } from './pages/eventCalendarPage';\r\nimport { MonthCalendarPage } from './pages/monthCalendarPage';\r\nimport Helper from \"./utility/helper\";\r\n\r\nfunction App() {\r\n  const [matrixSakawiNT, setMatrixSakawiNT] = useState<MatrixCalendarType[]>([]);\r\n  const [matrixSakawiBT, setMatrixSakawiBT] = useState<MatrixCalendarType[]>([]);\r\n  const [fullSakawiNT, setFullSakawiNT] = useState<FullCalendarType[]>([]);\r\n  const [fullSakawiBT, setFullSakawiBT] = useState<FullCalendarType[]>([]);\r\n\r\n  useEffect(() => {\r\n    function init() {\r\n      const toYear = 2429;//2046\r\n\r\n      // Build matrix Calendar\r\n      let matrixNT = Helper.buildMatrixCalendar(toYear, 'NinhThuan');\r\n      setMatrixSakawiNT(matrixNT.matrixCalendar);\r\n      setFullSakawiNT(matrixNT.fullCalendar);\r\n\r\n\r\n      let matrixBT = Helper.buildMatrixCalendar(toYear, 'BinhThuan');\r\n      setMatrixSakawiBT(matrixBT.matrixCalendar);\r\n      setFullSakawiBT(matrixBT.fullCalendar);\r\n\r\n      // set localStorage\r\n      // localStorage.setItem('matrixSakawiNT', JSON.stringify(matrixSakawiNT));\r\n      // localStorage.setItem('matrixSakawiBT', JSON.stringify(matrixSakawiBT));\r\n      // localStorage.setItem('fullSakawiNT', JSON.stringify(fullSakawiNT));\r\n      // localStorage.setItem('fullSakawiBT', JSON.stringify(fullSakawiBT));\r\n\r\n      //console.log('matrixBT', matrixBT.matrixCalendar);\r\n    }\r\n\r\n    init();\r\n  }, []);\r\n\r\n  return (\r\n    <HashRouter>\r\n      <div className=\"App\">\r\n        <Routes>\r\n          <Route path=\"/\"\r\n            element={\r\n              <MonthCalendarPage\r\n                matrixSakawiNT={matrixSakawiNT}\r\n                matrixSakawiBT={matrixSakawiBT}\r\n                fullSakawiNT={fullSakawiNT}\r\n                fullSakawiBT={fullSakawiBT}\r\n              />\r\n            } />\r\n          <Route path=\"/months\"\r\n            element={\r\n              <MonthCalendarPage\r\n                matrixSakawiNT={matrixSakawiNT}\r\n                matrixSakawiBT={matrixSakawiBT}\r\n                fullSakawiNT={fullSakawiNT}\r\n                fullSakawiBT={fullSakawiBT}\r\n              />\r\n            } />\r\n          <Route path=\"/events\"\r\n            element={\r\n              <EventCalendarPage\r\n                matrixSakawiNT={matrixSakawiNT}\r\n                matrixSakawiBT={matrixSakawiBT}\r\n                fullSakawiNT={fullSakawiNT}\r\n                fullSakawiBT={fullSakawiBT}\r\n              />\r\n            }\r\n          />\r\n          <Route path=\"/docs\" element={<DocumentPage />} />\r\n        </Routes>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}