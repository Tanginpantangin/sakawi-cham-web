{"version":3,"sources":["enums/enum.ts","utility/constant.ts","utility/helper.ts","components/countDownBar.tsx","components/dayDetails.tsx","components/monthAhier.tsx","components/monthAwal.tsx","components/monthGregory.tsx","components/monthNavigation.tsx","components/monthCalendar.tsx","components/calendar.tsx","Layout.tsx","App.tsx","index.tsx"],"names":["MonthEnum","DayEnum","IkasSarakEnum","NasakEnum","AwalMonthEnum","AhierMonthEnum","GuecTypeEnum","GuenTypeEnum","displayMonthName","month","_akharThrahName","_rumiName","akharThrahName","rumiName","displayNasakName","nasak","displayIkasSarakName","ikasSarak","result","firstDateOfSakawiAwal_Lieh_1407","Date","firstDateOfSakawiAhier_InaGirai_Lieh_1988","awalYearArray","no","name","Liéh","numberOfDays","Hak","Jim","Jây","Dal","Bak","Waw","JimLuic","awalMonthArray","Muharam","Syafar","Rabiulawal","Rabiulakhir","Jamadilawal","Jamadilakhir","Rejab","Sykban","Ramadan","Syawal","Julkaejah","Julhiijaah","Helper","currentDate","addedDays","getDayNumbersOfAwalMonth","awalMonth","year","newDays","date","addAwalMonths","previousMonth","currentMonth","addedMonths","newMonth","quotient","Math","floor","getMod","addAwalYears","currentYear","addedYears","newIkasSarak","yearNumber","yearName","yearItem","sakawiTakaiCiimConfig","filter","x","ArabYear","differenceInDays","getTime","remain","abs","awalYearNumber","awalYear","awalDate","totalYears","i","length","numberDaysOfCurrentYear","totalMonths","j","maxtrixCalendar","getActualDayNumbersOfAhierMonth","ahierMonth","BilanSa","Takuh","addAhierMonths","numberOfMonths","getMonthNumbersOfAhierYear","addAhierYears","previousYear","newNasak","remainNasak","numberOfDay","BilanKlau","BilanLima","BilanTajuh","BilanSalipan","BilanPuis","BilanDua","BilanPak","BilanNem","BilanDalipan","BilanSapluh","BilanMak","BilanBhang","index","findIndex","JSON","stringify","dayNumbersOfAhierMonth","newDt","setDate","getDate","toYearAhier","areaType","matrixCalendar","fullCalendar","startAhierYear","InâGirai","numberOfAhierYear","newGregoryDate","y","ahierYear","matrixPerYear","renderMatrixPerYear","validMatrix","applyGuenGuecRules","push","calendarDetails","renderCalendarDetails","lastMonthItem","addGregoryDays","dateOfGregoryCalendar","firstGregoryDate","addedGregoryDays","numberOfAhierMonth","m","getExpectedDayNumbersOfAhierMonth","firstDayOfAhierMonth","getDay","getAwalDateByGregoryDate","dayNumbersOfAwalMonth","firstDayOfAwalMonth","Number","parseInt","getStartDayByAwalMonth","ahierMonthItem","hasGuen","typeOfGuen","None","hasGuec","typeOfGuec","hasGuenRuleInNextYear","monthGuen","monthGuec","guecTypeInNextYear","element","checkIsGuenToAddDay","GuenByNormalRule","newDate","checkIsGuecToMinusDay","GuecByNormalRule","lastMonthOfCurrentYear","firstGregoryDateOfNextYear","checkHasGuecRuleInNextYear","checkHasGuenRuleInNextYear","getAhierAwalDaysGap","firstDateOfAhierMonth","firstDateOfAwalMonth","firstDateOfGregoryMonth","daysGap","days","addedAhierDate","addAhierDays","dateAhier","addedAwalDate","addAwalDays","monthDetailsCalendar","dateAwal","dateGregory","undefined","firstGregoryDateNextYear","nextAhierYear","matrixNextYear","firstMonth","isKateRamawanConflict","some","item","GuecByHareiButSukRule","GuecByKateRamawanRule","GuecByRijaNagarRule","n","latinNumber","ChamDigitArr","EnglishDigits","reg","RegExp","toString","replace","c","indexOf","addedAkaokThun","addedRijaNagar","addedKate","addedRamawan","forEach","eventGregoryDate","eventType","eventDate","sakawiType","CountDownBar","props","useState","percent","setPercent","setDays","useEffect","setTimeout","now","distance","init","variantType","dd","mm","getMonth","dateStr","getFullYear","displayEventName","Row","Col","sm","md","lg","style","marginBottom","fontWeight","ProgressBar","height","variant","DayDetails","opacityValue","backgroundColor","toLocaleDateString","currentAhierMonth","currentAwalMonth","currentGregoryMonth","currentGregoryYear","tdStyle","opacity","gregoryDateClass","ahierDateClass","awalDateClass","ikasSarakMonthCellClass","xs","className","monthGregogy","displayGregoryDate","minHeight","maxHeight","dayNumbersOfCurrentAhierMonth","getEvents","map","monthAwal","margin","convertToChamDigitUnicode","dayNumbersOfCurrentAwalMonth","displayAwalDate","MonthAhier","datesOfCurrentMonth","setDatesOfCurrentMonth","React","firstIndex","fullSakawi","currentAhierMonthMatrix","lastIndex","cells","rows","matrixSakawi","Table","bordered","hover","tableLayout","d","MonthAwal","currentAwalMonthMatrix","MonthGregory","MonthNavigation","ButtonToolbar","justifyContent","ButtonGroup","Button","active","onClick","onSelectSakawiType","textAlign","marginRight","onClickToday","onClickPreviousMonth","onClickNextMonth","MonthCalendar","initialAhierMonth","Pabuei","initialGregoryDate","initialMatrixCalendarType","setSakawiType","setCurrentAhierMonthMatrix","setCurrentAwalMonthMatrix","setCurrentGregoryMonth","setCurrentGregoryYear","Container","type","Calendar","showWarning","setShowWarning","setAreaType","setMatrixSakawi","setFullSakawi","nextEvents","setNextEvents","matrix","buildMatrixCalendar","getNextEvents","Alert","onClose","dismissible","Heading","Form","Check","inline","label","checked","onChange","footerStyle","background","color","padding","Layout","fluid","paddingRight","paddingLeft","Navbar","bg","expand","Brand","href","Toggle","Collapse","id","Nav","navbarScroll","Link","children","target","rel","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2df1b40.chunk.js","sourcesContent":["export declare type VariantType = 'primary' | 'info' | 'secondary' | 'success' | 'warning' | 'danger' | 'light' | 'link';\r\nexport declare type EventType = 'Akaok thun' | 'Rija Nagar' | 'Katé palei Hamu Tanran' | 'Katé angaok bimong' | 'Ca-mbur' | 'Tamâ ricaow Ramâwan' | 'Talaih aek Ramâwan' | 'Muk trun' | 'Ong trun' | 'Ikak Waha' | 'Talaih Waha' | 'Yuer Yang';\r\n\r\nexport enum MonthEnum {\r\n    January = 0,\r\n    February,\r\n    March,\r\n    April,\r\n    May,\r\n    June,\r\n    July,\r\n    August,\r\n    September,\r\n    October,\r\n    November,\r\n    December\r\n}\r\n\r\nexport enum DayEnum {\r\n    Sunday = 0,\r\n    Monday,\r\n    Tuesday,\r\n    Wednesday,\r\n    Thursday,\r\n    Friday,\r\n    Saturday\r\n}\r\n\r\nexport enum IkasSarakEnum {\r\n    Liéh = 0,\r\n    Hak,\r\n    Jim,\r\n    Jây,\r\n    Dal,\r\n    Bak,\r\n    Waw,\r\n    JimLuic\r\n}\r\n\r\nexport enum NasakEnum {\r\n    Takuh = 0,\r\n    Kabaw,\r\n    Rimaong,\r\n    Tapay,\r\n    InâGirai,\r\n    UlaAnaih,\r\n    Asaih,\r\n    Pabaiy,\r\n    Kra,\r\n    Manuk,\r\n    Asau,\r\n    Pabuei\r\n}\r\n\r\nexport enum AwalMonthEnum {\r\n    Muharam = 0,\r\n    Syafar,\r\n    Rabiulawal,\r\n    Rabiulakhir,\r\n    Jamadilawal,\r\n    Jamadilakhir,\r\n    Rejab,\r\n    Sykban,\r\n    Ramadan,\r\n    Syawal,\r\n    Julkaejah,\r\n    Julhiijaah\r\n}\r\n\r\nexport enum AhierMonthEnum {\r\n    BilanSa = 0,\r\n    BilanDua,\r\n    BilanKlau,\r\n    BilanPak,\r\n    BilanLima,\r\n    BilanNem,\r\n    BilanTajuh,\r\n    BilanDalipan,\r\n    BilanSalipan,\r\n    BilanSapluh,\r\n    BilanPuis,\r\n    BilanMak,\r\n    BilanBhang\r\n}\r\n\r\nexport enum GuecTypeEnum {\r\n    None = -1,\r\n    GuecByNormalRule,\r\n    GuecByHareiButSukRule,\r\n    GuecByRijaNagarRule,\r\n    GuecByKateRamawanRule,\r\n}\r\n\r\nexport enum GuenTypeEnum {\r\n    None = -1,\r\n    GuenByNormalRule\r\n}\r\n\r\nexport function displayMonthName(month: AhierMonthEnum) {\r\n    let _akharThrahName = '';\r\n    let _rumiName = '';\r\n\r\n    switch (month) {\r\n        case 0:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨧꨩ';\r\n            _rumiName = 'Bilan sa';\r\n            break;\r\n        case 1:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨕꨶꨩ';\r\n            _rumiName = 'Bilan dua';\r\n            break;\r\n        case 2:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨆꨵꨮꨭ';\r\n            _rumiName = 'Bilan klau';\r\n            break;\r\n        case 3:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨛꨩꩀ';\r\n            _rumiName = 'Bilan pak';\r\n            break;\r\n        case 4:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨤꨪꨟꨩ';\r\n            _rumiName = 'Bilan limâ';\r\n            break;\r\n        case 5:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨗꨮꩌ';\r\n            _rumiName = 'Bilan nem';\r\n            break;\r\n        case 6:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨓꨎꨭꩍ';\r\n            _rumiName = 'Bilan tajuh';\r\n            break;\r\n        case 7:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨕꨤꨪꨚꩆ';\r\n            _rumiName = 'Bilan dalipan';\r\n            break;\r\n        case 8:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨧꨤꨪꨚꩆ';\r\n            _rumiName = 'Bilan salipan';\r\n            break;\r\n        case 9:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨧꨚꨵꨭꩍ';\r\n            _rumiName = 'Bilan sapluh';\r\n            break;\r\n        case 10:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨚꨶꨪꩋ';\r\n            _rumiName = 'Bilan puis';\r\n            break;\r\n        case 11:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨠꩀ';\r\n            _rumiName = 'Bilan mak';\r\n            break;\r\n        case 12:\r\n            _akharThrahName = 'ꨝꨪꨤꩆ ꨞꩃ';\r\n            _rumiName = 'Bilan bhang';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return {\r\n        akharThrahName: _akharThrahName,\r\n        rumiName: _rumiName\r\n    }\r\n}\r\n\r\nexport function displayNasakName(nasak: NasakEnum) {\r\n    let _akharThrahName = '';\r\n    let _rumiName = '';\r\n\r\n    switch (nasak) {\r\n        case 0:\r\n            _akharThrahName = 'ꨓꨆꨭꩍ';\r\n            _rumiName = 'Takuh';\r\n            break;\r\n        case 1:\r\n            _akharThrahName = 'ꨆꨝꨥ';\r\n            _rumiName = 'Kabaw';\r\n            break;\r\n        case 2:\r\n            _akharThrahName = 'ꨣꨪꨟꨯꨱꩃ';\r\n            _rumiName = 'Rimaong';\r\n            break;\r\n        case 3:\r\n            _akharThrahName = 'ꨓꨛꩈ';\r\n            _rumiName = 'Tapay';\r\n            break;\r\n        case 4:\r\n            _akharThrahName = 'ꨁꨗꨩ ꨈꨪꨣꩈ';\r\n            _rumiName = 'Inâ Giray';\r\n            break;\r\n        case 5:\r\n            _akharThrahName = 'ꨂꨤꨩ ꨗꨰꩍ';\r\n            _rumiName = 'Ula naih';\r\n            break;\r\n        case 6:\r\n            _akharThrahName = 'ꨀꨧꨰꩍ';\r\n            _rumiName = 'Asaih';\r\n            break;\r\n        case 7:\r\n            _akharThrahName = 'ꨚꨝꨰꩈ';\r\n            _rumiName = 'Pabaiy';\r\n            break;\r\n        case 8:\r\n            _akharThrahName = 'ꨆꨴꨩ';\r\n            _rumiName = 'Kra';\r\n            break;\r\n        case 9:\r\n            _akharThrahName = 'ꨟꨗꨭꩀ';\r\n            _rumiName = 'Mânuk';\r\n            break;\r\n        case 10:\r\n            _akharThrahName = 'ꨀꨧꨮꨭ';\r\n            _rumiName = 'Asau';\r\n            break;\r\n        case 11:\r\n            _akharThrahName = 'ꨚꨝꨶꨬ';\r\n            _rumiName = 'Pabuei';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return {\r\n        akharThrahName: _akharThrahName,\r\n        rumiName: _rumiName\r\n    }\r\n}\r\n\r\nexport function displayIkasSarakName(ikasSarak: IkasSarakEnum) {\r\n    let result = '';\r\n\r\n    switch (ikasSarak) {\r\n        case 0:\r\n            result = '1';\r\n            break;\r\n        case 1:\r\n            result = '5';\r\n            break;\r\n        case 2:\r\n            result = '3';\r\n            break;\r\n        case 3:\r\n            result = '7';\r\n            break;\r\n        case 4:\r\n            result = '4';\r\n            break;\r\n        case 5:\r\n            result = '2';\r\n            break;\r\n        case 6:\r\n            result = '6';\r\n            break;\r\n        case 7:\r\n            result = '3';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n","import { AwalMonthEnum, IkasSarakEnum } from \"../enums/enum\";\r\n\r\nexport const firstDateOfSakawiAwal_Lieh_1407 = new Date(1986, 8, 5);//05/09/1986\r\nexport const yearNumberOfSakawiAwal_Lieh_1407 = 1407;\r\nexport const firstDateOfSakawiAhier_InaGirai_Lieh_1988 = new Date(1988, 3, 16);//16/04/1988\r\nexport const totalDaysOf8AwalYearCycle = 2835;\r\n\r\nexport const awalYearArray: { no: number; name: IkasSarakEnum; numberOfDays: number }[] = [\r\n    { no: 1, name: IkasSarakEnum.Liéh, numberOfDays: 354 },\r\n    { no: 2, name: IkasSarakEnum.Hak, numberOfDays: 355 },\r\n    { no: 3, name: IkasSarakEnum.Jim, numberOfDays: 354 },\r\n    { no: 4, name: IkasSarakEnum.Jây, numberOfDays: 354 },\r\n    { no: 5, name: IkasSarakEnum.Dal, numberOfDays: 355 },\r\n    { no: 6, name: IkasSarakEnum.Bak, numberOfDays: 354 },\r\n    { no: 7, name: IkasSarakEnum.Waw, numberOfDays: 354 },\r\n    { no: 8, name: IkasSarakEnum.JimLuic, numberOfDays: 355 }\r\n];\r\n\r\nexport const awalMonthArray: { no: number; name: AwalMonthEnum; numberOfDays: number }[] = [\r\n    { no: 1, name: AwalMonthEnum.Muharam, numberOfDays: 30 },\r\n    { no: 2, name: AwalMonthEnum.Syafar, numberOfDays: 29 },\r\n    { no: 3, name: AwalMonthEnum.Rabiulawal, numberOfDays: 30 },\r\n    { no: 4, name: AwalMonthEnum.Rabiulakhir, numberOfDays: 29 },\r\n    { no: 5, name: AwalMonthEnum.Jamadilawal, numberOfDays: 30 },\r\n    { no: 6, name: AwalMonthEnum.Jamadilakhir, numberOfDays: 29 },\r\n    { no: 7, name: AwalMonthEnum.Rejab, numberOfDays: 30 },\r\n    { no: 8, name: AwalMonthEnum.Sykban, numberOfDays: 29 },\r\n    { no: 9, name: AwalMonthEnum.Ramadan, numberOfDays: 30 },\r\n    { no: 10, name: AwalMonthEnum.Syawal, numberOfDays: 29 },\r\n    { no: 11, name: AwalMonthEnum.Julkaejah, numberOfDays: 30 },\r\n    { no: 12, name: AwalMonthEnum.Julhiijaah, numberOfDays: 30 }\r\n]","import { AreaType } from '../components/calendar';\r\nimport { CountDownBarProps } from '../components/countDownBar';\r\nimport sakawiTakaiCiimConfig from '../data/SakawiTakaiCiim.json';\r\nimport { AhierMonthEnum, AwalMonthEnum, GuecTypeEnum, GuenTypeEnum, IkasSarakEnum, NasakEnum } from \"../enums/enum\";\r\nimport { AhierDate, AhierMonth, AhierYear } from \"../model/AhierDate\";\r\nimport { AwalDate, AwalMonth, AwalYear } from '../model/AwalDate';\r\nimport { FullCalendarType } from '../model/FullCalendarType';\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport { awalMonthArray, awalYearArray, firstDateOfSakawiAhier_InaGirai_Lieh_1988, firstDateOfSakawiAwal_Lieh_1407, totalDaysOf8AwalYearCycle, yearNumberOfSakawiAwal_Lieh_1407 } from './constant';\r\n\r\nexport default class Helper {\r\n    //#region Awal\r\n    static addAwalDays(currentDate: AwalDate, addedDays: number) {\r\n        let numberOfDays = Helper.getDayNumbersOfAwalMonth(currentDate.awalMonth.year, currentDate.awalMonth.month);\r\n        let newDays = currentDate.date + addedDays;\r\n        let result: AwalDate = {\r\n            date: 1,\r\n            awalMonth: {\r\n                month: AwalMonthEnum.Jamadilakhir,\r\n                year: { ikasSarak: IkasSarakEnum.Liéh }\r\n            }\r\n        };\r\n\r\n        if (newDays > numberOfDays) {\r\n            const nextMonth = Helper.addAwalMonths(currentDate.awalMonth, 1);\r\n            result = {\r\n                date: newDays - numberOfDays,\r\n                awalMonth: nextMonth\r\n            };\r\n\r\n        } else if (newDays <= 0) {\r\n            const previousMonth = Helper.addAwalMonths(currentDate.awalMonth, -1);\r\n            result = {\r\n                date: Helper.getDayNumbersOfAwalMonth(previousMonth.year, previousMonth.month) + newDays,\r\n                awalMonth: previousMonth\r\n            };\r\n        }\r\n        else {\r\n            result = {\r\n                date: newDays,\r\n                awalMonth: currentDate.awalMonth\r\n            };\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static addAwalMonths(currentMonth: AwalMonth, addedMonths: number) {\r\n        let newMonth = currentMonth.month + addedMonths;\r\n        let quotient = Math.floor(newMonth / 12);\r\n        let remain = Helper.getMod(newMonth, 12);\r\n\r\n        let result: AwalMonth = {\r\n            month: remain,\r\n            year: Helper.addAwalYears(currentMonth.year, quotient)\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static addAwalYears(currentYear: AwalYear, addedYears: number) {\r\n        let newIkasSarak = currentYear.ikasSarak + addedYears;\r\n        let remain = Helper.getMod(newIkasSarak, 8);\r\n        let newYearNumber = (currentYear.yearNumber ?? 0) + addedYears;\r\n\r\n        let result: AwalYear = {\r\n            ikasSarak: remain,\r\n            yearNumber: newYearNumber\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static getDayNumbersOfAwalMonth(year: AwalYear, month: AwalMonthEnum) {\r\n        let numberOfDay = 0;\r\n\r\n        if (month === AwalMonthEnum.Muharam || month === AwalMonthEnum.Rabiulawal || month === AwalMonthEnum.Jamadilawal ||\r\n            month === AwalMonthEnum.Rejab || month === AwalMonthEnum.Ramadan || month === AwalMonthEnum.Julkaejah) {\r\n            // Tháng lẻ: (30 ngày), gồm: 1,3,5,7,9,11.\r\n            numberOfDay = 30;\r\n        } else if (month === AwalMonthEnum.Syafar || month === AwalMonthEnum.Rabiulakhir || month === AwalMonthEnum.Jamadilakhir ||\r\n            month === AwalMonthEnum.Sykban || month === AwalMonthEnum.Syawal) {\r\n            // Tháng chẳn: (29 ngày), gồm: 2,4,6,8,10. \r\n            numberOfDay = 29;\r\n        } else {\r\n            // Riêng tháng 12: \r\n            if (year.ikasSarak === IkasSarakEnum.Hak || year.ikasSarak === IkasSarakEnum.Dal || year.ikasSarak === IkasSarakEnum.JimLuic) {\r\n                // năm nhuận (thun \"Nâh\": Hak, Dal, Jim luic): 30 ngày\r\n                numberOfDay = 30;\r\n            } else {\r\n                // năm thường (thun \"Wak\"): 29 ngày\r\n                numberOfDay = 29;\r\n            }\r\n        }\r\n\r\n        return numberOfDay;\r\n    }\r\n\r\n    static getStartDayByAwalMonth(year: AwalYear, month: AwalMonthEnum) {\r\n        let yearName = IkasSarakEnum[year.ikasSarak];\r\n        let yearItem = sakawiTakaiCiimConfig.filter(x => x.ArabYear === yearName)[0];\r\n        let result = '';\r\n\r\n        switch (month) {\r\n            case 0:\r\n                result = yearItem['Month_01'];\r\n                break;\r\n            case 1:\r\n                result = yearItem['Month_02'];\r\n                break;\r\n            case 2:\r\n                result = yearItem['Month_03'];\r\n                break;\r\n            case 3:\r\n                result = yearItem['Month_04'];\r\n                break;\r\n            case 4:\r\n                result = yearItem['Month_05'];\r\n                break;\r\n            case 5:\r\n                result = yearItem['Month_06'];\r\n                break;\r\n            case 6:\r\n                result = yearItem['Month_07'];\r\n                break;\r\n            case 7:\r\n                result = yearItem['Month_08'];\r\n                break;\r\n            case 8:\r\n                result = yearItem['Month_09'];\r\n                break;\r\n            case 9:\r\n                result = yearItem['Month_10'];\r\n                break;\r\n            case 10:\r\n                result = yearItem['Month_11'];\r\n                break;\r\n            case 11:\r\n                result = yearItem['Month_12'];\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static getAwalDateByGregoryDate(date: Date) {\r\n        let differenceInTime = date.getTime() - firstDateOfSakawiAwal_Lieh_1407.getTime();\r\n        let differenceInDays = differenceInTime / (1000 * 3600 * 24);\r\n        let remain = Helper.getMod(differenceInDays, totalDaysOf8AwalYearCycle);\r\n        let quotient = Math.floor(Math.abs(differenceInDays) / totalDaysOf8AwalYearCycle);\r\n\r\n        let awalYearNumber = yearNumberOfSakawiAwal_Lieh_1407;\r\n        let awalYear = IkasSarakEnum.Liéh;\r\n        let awalMonth = AwalMonthEnum.Muharam;\r\n        let awalDate = 0;\r\n        let totalYears = 0;\r\n        for (let i = 0; i < awalYearArray.length; i++) {\r\n            totalYears += awalYearArray[i].numberOfDays;\r\n            if (remain < totalYears) {\r\n                awalYear = awalYearArray[i].name;\r\n\r\n                if (differenceInDays > 0) {\r\n                    awalYearNumber += (quotient * 8) + i;\r\n                } else {\r\n                    awalYearNumber -= (quotient * 8) + i;\r\n                }\r\n\r\n                let numberDaysOfCurrentYear = remain - (totalYears - awalYearArray[i].numberOfDays);\r\n                let totalMonths = 0;\r\n\r\n                for (let j = 0; j < awalMonthArray.length; j++) {\r\n                    totalMonths += awalMonthArray[j].numberOfDays;\r\n                    if (numberDaysOfCurrentYear < totalMonths) {\r\n                        awalMonth = awalMonthArray[j].name;\r\n                        let numberDaysOfCurrentMonth = numberDaysOfCurrentYear - (totalMonths - awalMonthArray[j].numberOfDays);\r\n                        awalDate = numberDaysOfCurrentMonth + 1;\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        let resultDate: AwalDate = {\r\n            date: awalDate,\r\n            awalMonth: { month: awalMonth, year: { ikasSarak: awalYear, yearNumber: awalYearNumber } }\r\n        }\r\n\r\n        return resultDate;\r\n    }\r\n    //#endregion\r\n\r\n    //#region Ahier\r\n    static addAhierDays(maxtrixCalendar: MatrixCalendarType[], currentDate: AhierDate, addedDays: number) {\r\n        const numberOfDays = Helper.getActualDayNumbersOfAhierMonth(maxtrixCalendar, currentDate.ahierMonth);\r\n        const newDays = currentDate.date + addedDays;\r\n\r\n        let result: AhierDate = {\r\n            date: 1,\r\n            ahierMonth: {\r\n                month: AhierMonthEnum.BilanSa,\r\n                year: { nasak: NasakEnum.Takuh, ikasSarak: IkasSarakEnum.Liéh }\r\n            }\r\n        };\r\n\r\n        if (newDays > numberOfDays) {\r\n            const nextMonth = Helper.addAhierMonths(currentDate.ahierMonth, 1);\r\n            result = {\r\n                date: newDays - numberOfDays,\r\n                ahierMonth: nextMonth\r\n            };\r\n        } else if (newDays <= 0) {\r\n            const previousMonth = Helper.addAhierMonths(currentDate.ahierMonth, -1);\r\n            const dayNumberOfPreviousMonth = Helper.getActualDayNumbersOfAhierMonth(maxtrixCalendar, previousMonth);\r\n            result = {\r\n                date: dayNumberOfPreviousMonth + newDays,\r\n                ahierMonth: previousMonth\r\n            };\r\n        }\r\n        else {\r\n            result = {\r\n                date: newDays,\r\n                ahierMonth: currentDate.ahierMonth\r\n            };\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static addAhierMonths(currentMonth: AhierMonth, addedMonths: number) {\r\n        const numberOfMonths = Helper.getMonthNumbersOfAhierYear(currentMonth.year);\r\n        const newMonth = currentMonth.month + addedMonths;\r\n        let result: AhierMonth = {\r\n            month: currentMonth.month,\r\n            year: currentMonth.year\r\n        }\r\n\r\n        if (newMonth > numberOfMonths - 1) {\r\n            const nextYear = Helper.addAhierYears(currentMonth.year, 1);\r\n            result = {\r\n                month: newMonth - numberOfMonths,\r\n                year: nextYear\r\n            }\r\n        } else if (newMonth < 0) {\r\n            const previousYear = Helper.addAhierYears(currentMonth.year, -1);\r\n            const numberOfMonthsOfPreviousYear = Helper.getMonthNumbersOfAhierYear(previousYear);\r\n\r\n            result = {\r\n                month: numberOfMonthsOfPreviousYear + newMonth,\r\n                year: previousYear\r\n            }\r\n        } else {\r\n            result = {\r\n                month: newMonth,\r\n                year: currentMonth.year\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static addAhierYears(currentYear: AhierYear, addedYears: number) {\r\n        let newNasak = (currentYear.nasak + addedYears) % 12;\r\n        let remainNasak = Helper.getMod(newNasak, 12);\r\n\r\n        let newIkasSarak = (currentYear.ikasSarak + addedYears) % 8;\r\n        let remainIkasSarak = Helper.getMod(newIkasSarak, 8);\r\n\r\n        let newYearNumber = (currentYear.yearNumber ?? 0) + addedYears;\r\n\r\n        let result: AhierYear = {\r\n            nasak: remainNasak,\r\n            ikasSarak: remainIkasSarak,\r\n            yearNumber: newYearNumber\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static getExpectedDayNumbersOfAhierMonth(year: AhierYear, month: AhierMonthEnum) {\r\n        let numberOfDay = 0;\r\n        if (month === AhierMonthEnum.BilanSa || month === AhierMonthEnum.BilanKlau || month === AhierMonthEnum.BilanLima ||\r\n            month === AhierMonthEnum.BilanTajuh || month === AhierMonthEnum.BilanSalipan || month === AhierMonthEnum.BilanPuis) {\r\n            // Tháng lẻ - \"bilan tapak\": (30 ngày), gồm: 1,3,5,7,9,11.\r\n            numberOfDay = 30;\r\n        } else if (month === AhierMonthEnum.BilanDua || month === AhierMonthEnum.BilanPak || month === AhierMonthEnum.BilanNem ||\r\n            month === AhierMonthEnum.BilanDalipan || month === AhierMonthEnum.BilanSapluh) {\r\n            // Tháng chẳn - \"bilan u\" : (29 ngày), gồm: 2,4,6,8,10. \r\n            numberOfDay = 29;\r\n        } else if (month === AhierMonthEnum.BilanMak) {\r\n            // Tháng 12:  \r\n            if (year.ikasSarak === IkasSarakEnum.Hak || year.ikasSarak === IkasSarakEnum.Dal || year.ikasSarak === IkasSarakEnum.JimLuic) {\r\n                // năm nhuận (thun \"Nâh\": Hak, Dal, Jim luic): 30 ngày\r\n                numberOfDay = 30;\r\n            } else {\r\n                // năm thường (thun \"Wak\"): 29 ngày\r\n                numberOfDay = 29;\r\n            }\r\n        } else if (month === AhierMonthEnum.BilanBhang) {\r\n            if (year.ikasSarak === IkasSarakEnum.Hak || year.ikasSarak === IkasSarakEnum.Dal || year.ikasSarak === IkasSarakEnum.JimLuic) {\r\n                // năm nhuận (thun \"Nâh\": Hak, Dal, Jim luic): 29 ngày\r\n                numberOfDay = 29;\r\n            }\r\n        }\r\n\r\n        return numberOfDay;\r\n    }\r\n\r\n    static getActualDayNumbersOfAhierMonth(maxtrixCalendar: MatrixCalendarType[], ahierMonth: AhierMonth) {\r\n        const index = maxtrixCalendar.findIndex(x => JSON.stringify(x.ahierMonth) === JSON.stringify(ahierMonth));\r\n        if (index !== -1) {\r\n            return maxtrixCalendar[index].dayNumbersOfAhierMonth;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    static getMonthNumbersOfAhierYear(year: AhierYear) {\r\n        if (year.ikasSarak === IkasSarakEnum.Hak\r\n            || year.ikasSarak === IkasSarakEnum.Dal\r\n            || year.ikasSarak === IkasSarakEnum.JimLuic) {\r\n            return 13;\r\n        }\r\n        return 12;\r\n    }\r\n    //#endregion\r\n\r\n    //#region Gregory\r\n    static addGregoryDays(date: Date, numberOfDays: number) {\r\n        let newDt = new Date(date);\r\n        newDt.setDate(newDt.getDate() + numberOfDays);\r\n        return newDt;\r\n    }\r\n    //#endregion\r\n\r\n    static buildMatrixCalendar(toYearAhier: number, areaType: AreaType) {\r\n        let matrixCalendar: MatrixCalendarType[] = [];\r\n        let fullCalendar: FullCalendarType[] = [];\r\n\r\n        // Choose thun 1988 as a root\r\n        const startAhierYear: AhierYear = {\r\n            nasak: NasakEnum.InâGirai,\r\n            ikasSarak: IkasSarakEnum.Liéh,\r\n            yearNumber: 1988\r\n        }\r\n\r\n        // TO-TEST\r\n        // const startAhierYear: AhierYear = {\r\n        //     nasak: NasakEnum.Rimaong,\r\n        //     ikasSarak: IkasSarakEnum.Jim,\r\n        //     yearNumber: 2022\r\n        // }\r\n\r\n        const numberOfAhierYear = toYearAhier - (startAhierYear.yearNumber ?? 0);\r\n        let newGregoryDate = firstDateOfSakawiAhier_InaGirai_Lieh_1988;\r\n        //let newGregoryDate = new Date(2022, 3, 30);//16/04/1988\r\n\r\n        for (let y = 0; y < numberOfAhierYear; y++) {\r\n            const ahierYear = Helper.addAhierYears(startAhierYear, y);\r\n            const matrixPerYear = Helper.renderMatrixPerYear(ahierYear, newGregoryDate);\r\n            const validMatrix = Helper.applyGuenGuecRules(matrixPerYear, areaType);\r\n            matrixCalendar.push(...validMatrix);\r\n\r\n            const calendarDetails = Helper.renderCalendarDetails(validMatrix);\r\n            fullCalendar.push(...calendarDetails);\r\n\r\n            const lastMonthItem = validMatrix[validMatrix.length - 1];\r\n            newGregoryDate = Helper.addGregoryDays(lastMonthItem.dateOfGregoryCalendar, lastMonthItem.dayNumbersOfAhierMonth);\r\n        }\r\n\r\n        return {\r\n            matrixCalendar,\r\n            fullCalendar\r\n        };\r\n    }\r\n\r\n    static renderMatrixPerYear(ahierYear: AhierYear, firstGregoryDate: Date) {\r\n        let matrixPerYear: MatrixCalendarType[] = [];\r\n        let newGregoryDate = firstGregoryDate;\r\n        let addedGregoryDays = 0;\r\n        const numberOfAhierMonth = Helper.getMonthNumbersOfAhierYear(ahierYear);\r\n\r\n        for (let m = 0; m < numberOfAhierMonth; m++) {\r\n            const ahierMonth: AhierMonth = { month: m, year: ahierYear };\r\n            const dayNumbersOfAhierMonth = Helper.getExpectedDayNumbersOfAhierMonth(ahierYear, m);\r\n            const firstDayOfAhierMonth = newGregoryDate.getDay();\r\n\r\n            const awalDate = Helper.getAwalDateByGregoryDate(newGregoryDate);\r\n            const awalMonth = Helper.addAwalMonths(awalDate.awalMonth, 1);\r\n            const dayNumbersOfAwalMonth = Helper.getDayNumbersOfAwalMonth(awalMonth.year, awalMonth.month);\r\n            const firstDayOfAwalMonth = Number.parseInt(Helper.getStartDayByAwalMonth(awalMonth.year, awalMonth.month)) - 1; // Sunday is 0 \r\n\r\n            let ahierMonthItem: MatrixCalendarType = {\r\n                ahierMonth: ahierMonth,\r\n                dayNumbersOfAhierMonth: dayNumbersOfAhierMonth,\r\n                hasGuen: false,\r\n                typeOfGuen: GuenTypeEnum.None,\r\n                hasGuec: false,\r\n                typeOfGuec: GuecTypeEnum.None,\r\n                firstDayOfAhierMonth: firstDayOfAhierMonth,\r\n                dateOfGregoryCalendar: newGregoryDate,\r\n                awalMonth: awalMonth,\r\n                dayNumbersOfAwalMonth: dayNumbersOfAwalMonth,\r\n                firstDayOfAwalMonth: firstDayOfAwalMonth\r\n            }\r\n\r\n            matrixPerYear.push(ahierMonthItem);\r\n\r\n            addedGregoryDays += dayNumbersOfAhierMonth;\r\n            newGregoryDate = Helper.addGregoryDays(firstGregoryDate, addedGregoryDays);\r\n        }\r\n\r\n        return matrixPerYear;\r\n    }\r\n\r\n    static applyGuenGuecRules(matrixPerYear: MatrixCalendarType[], areaType: AreaType) {\r\n        let monthGuen = -1;\r\n        let monthGuec = -1;\r\n        let guecTypeInNextYear = GuecTypeEnum.None;\r\n        let hasGuenRuleInNextYear = false;\r\n\r\n        // Check validations and fix in current year\r\n        for (let index = 0; index < matrixPerYear.length; index++) {\r\n            const element = matrixPerYear[index];\r\n\r\n            // Guen\r\n            if (monthGuen === -1 && Helper.checkIsGuenToAddDay(element.firstDayOfAhierMonth, element.firstDayOfAwalMonth)) {\r\n                if (areaType === 'BinhThuan' || (areaType === 'NinhThuan' && index >= 11)) {\r\n                    monthGuen = index;\r\n                    matrixPerYear[monthGuen - 1].dayNumbersOfAhierMonth += 1;\r\n                    matrixPerYear[monthGuen - 1].hasGuen = true;\r\n                    matrixPerYear[monthGuen - 1].typeOfGuen = GuenTypeEnum.GuenByNormalRule;\r\n                }\r\n            }\r\n\r\n            if (monthGuen !== -1 && index >= monthGuen) {\r\n                const newDate = Helper.addGregoryDays(matrixPerYear[index].dateOfGregoryCalendar, 1);\r\n                matrixPerYear[index].dateOfGregoryCalendar = newDate;\r\n                matrixPerYear[index].firstDayOfAhierMonth = newDate.getDay();\r\n            }\r\n\r\n            // Guec\r\n            if (monthGuec === -1 && Helper.checkIsGuecToMinusDay(element.firstDayOfAhierMonth, element.firstDayOfAwalMonth)) {\r\n                monthGuec = index;\r\n                matrixPerYear[monthGuec - 1].dayNumbersOfAhierMonth -= 1;\r\n                matrixPerYear[monthGuec - 1].hasGuec = true;\r\n                matrixPerYear[monthGuec - 1].typeOfGuec = GuecTypeEnum.GuecByNormalRule;\r\n            }\r\n\r\n            if (monthGuec !== -1 && index >= monthGuec) {\r\n                const newDate = Helper.addGregoryDays(matrixPerYear[index].dateOfGregoryCalendar, -1);\r\n                matrixPerYear[index].dateOfGregoryCalendar = newDate;\r\n                matrixPerYear[index].firstDayOfAhierMonth = newDate.getDay();\r\n            }\r\n        }\r\n\r\n        // Check validations in next year to fix current year\r\n        const lastMonthOfCurrentYear = matrixPerYear[matrixPerYear.length - 1];\r\n        const firstGregoryDateOfNextYear = Helper.addGregoryDays(lastMonthOfCurrentYear.dateOfGregoryCalendar, lastMonthOfCurrentYear.dayNumbersOfAhierMonth);\r\n        guecTypeInNextYear = Helper.checkHasGuecRuleInNextYear(lastMonthOfCurrentYear.ahierMonth.year, firstGregoryDateOfNextYear);\r\n        hasGuenRuleInNextYear = Helper.checkHasGuenRuleInNextYear(lastMonthOfCurrentYear.ahierMonth.year, firstGregoryDateOfNextYear);\r\n\r\n        if (guecTypeInNextYear !== GuecTypeEnum.None) {\r\n            // Bilan Mak (12)\r\n            matrixPerYear[11].dayNumbersOfAhierMonth -= 1;\r\n            matrixPerYear[11].hasGuec = true;\r\n            matrixPerYear[11].typeOfGuec = guecTypeInNextYear;\r\n\r\n            // Bilan Bhang (13)\r\n            const newDate = Helper.addGregoryDays(matrixPerYear[12].dateOfGregoryCalendar, -1);\r\n            matrixPerYear[12].dateOfGregoryCalendar = newDate;\r\n            matrixPerYear[12].firstDayOfAhierMonth = newDate.getDay();\r\n        } else if (hasGuenRuleInNextYear) {\r\n            // Bilan (12) or (13)\r\n            if (Helper.getAhierAwalDaysGap(lastMonthOfCurrentYear.firstDayOfAhierMonth, lastMonthOfCurrentYear.firstDayOfAwalMonth) === 2) {\r\n                lastMonthOfCurrentYear.dayNumbersOfAhierMonth += 1;\r\n                lastMonthOfCurrentYear.hasGuen = true;\r\n                lastMonthOfCurrentYear.typeOfGuen = GuenTypeEnum.GuenByNormalRule;\r\n            }\r\n        }\r\n\r\n        return [...matrixPerYear];\r\n    }\r\n\r\n    static renderCalendarDetails(matrixPerYear: MatrixCalendarType[]) {\r\n        let fullCalendar: FullCalendarType[] = [];\r\n\r\n        for (let index = 0; index < matrixPerYear.length; index++) {\r\n            const element = matrixPerYear[index];\r\n            const firstDateOfAhierMonth: AhierDate = { date: 1, ahierMonth: element.ahierMonth };\r\n            const firstDateOfAwalMonth: AwalDate = { date: 1, awalMonth: element.awalMonth };\r\n            const firstDateOfGregoryMonth = element.dateOfGregoryCalendar;\r\n            const daysGap = Helper.getAhierAwalDaysGap(element.firstDayOfAhierMonth, element.firstDayOfAwalMonth);\r\n\r\n            for (let days = 0; days < element.dayNumbersOfAhierMonth; days++) {\r\n                const addedAhierDate = Helper.addAhierDays(matrixPerYear, firstDateOfAhierMonth, days);\r\n                const dateAhier: AhierDate = {\r\n                    date: addedAhierDate.date,\r\n                    ahierMonth: addedAhierDate.ahierMonth\r\n                }\r\n\r\n                const addedAwalDate = Helper.addAwalDays(firstDateOfAwalMonth, days - daysGap);\r\n                const dateAwal: AwalDate = {\r\n                    date: addedAwalDate.date,\r\n                    awalMonth: addedAwalDate.awalMonth\r\n                }\r\n\r\n                const dateGregory = Helper.addGregoryDays(firstDateOfGregoryMonth, days);\r\n\r\n                let monthDetailsCalendar: FullCalendarType = {\r\n                    dateAhier: dateAhier,\r\n                    dateAwal: dateAwal,\r\n                    dateGregory: dateGregory,\r\n                    typeOfGuen: days === element.dayNumbersOfAhierMonth - 1 ? element.typeOfGuen : undefined,\r\n                    typeOfGuec: days === element.dayNumbersOfAhierMonth - 1 ? element.typeOfGuec : undefined,\r\n                    hasGuen: days === element.dayNumbersOfAhierMonth - 1 ? element.hasGuen : undefined,\r\n                    hasGuec: days === element.dayNumbersOfAhierMonth - 1 ? element.hasGuec : undefined\r\n                }\r\n\r\n                fullCalendar.push(monthDetailsCalendar);\r\n            }\r\n        }\r\n\r\n        return fullCalendar;\r\n    }\r\n\r\n    static checkIsGuenToAddDay(firstDayOfAhierMonth: number, firstDayOfAwalMonth: number) {\r\n        const daysGap = Helper.getAhierAwalDaysGap(firstDayOfAhierMonth, firstDayOfAwalMonth);\r\n        return daysGap > 2;\r\n    }\r\n\r\n    static checkIsGuecToMinusDay(firstDayOfAhierMonth: number, firstDayOfAwalMonth: number) {\r\n        return firstDayOfAhierMonth === firstDayOfAwalMonth;\r\n    }\r\n\r\n    static checkHasGuecRuleInNextYear(currentYear: AhierYear, firstGregoryDateNextYear: Date) {\r\n        let result = GuecTypeEnum.None;\r\n\r\n        const nextAhierYear = Helper.addAhierYears(currentYear, 1);\r\n        const matrixNextYear = Helper.renderMatrixPerYear(nextAhierYear, firstGregoryDateNextYear);\r\n        const firstMonth = matrixNextYear[0];\r\n        const isKateRamawanConflict = matrixNextYear.some(x =>\r\n            x.ahierMonth.month === AhierMonthEnum.BilanTajuh &&\r\n            x.awalMonth.month === AwalMonthEnum.Ramadan &&\r\n            Helper.getAhierAwalDaysGap(x.firstDayOfAhierMonth, x.firstDayOfAwalMonth) === 1);\r\n        const hasNormalGuec = matrixNextYear.some(item => Helper.checkIsGuecToMinusDay(item.firstDayOfAhierMonth, item.firstDayOfAwalMonth));\r\n\r\n        if (hasNormalGuec) {\r\n            result = GuecTypeEnum.GuecByNormalRule;\r\n        } else if (nextAhierYear.ikasSarak === IkasSarakEnum.Liéh) {\r\n            if (firstMonth.firstDayOfAhierMonth === 4 && firstMonth.firstDayOfAwalMonth === 5) {\r\n                result = GuecTypeEnum.GuecByHareiButSukRule;\r\n            } else if (isKateRamawanConflict) {\r\n                result = GuecTypeEnum.GuecByKateRamawanRule;\r\n            }\r\n        } else if (firstMonth.firstDayOfAhierMonth === 5 && firstMonth.firstDayOfAwalMonth === 6) {\r\n            result = GuecTypeEnum.GuecByRijaNagarRule;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static checkHasGuenRuleInNextYear(currentYear: AhierYear, firstGregoryDateNextYear: Date) {\r\n        const nextAhierYear = Helper.addAhierYears(currentYear, 1);\r\n        const matrixNextYear = Helper.renderMatrixPerYear(nextAhierYear, firstGregoryDateNextYear);\r\n\r\n        return matrixNextYear.some(item => Helper.checkIsGuenToAddDay(item.firstDayOfAhierMonth, item.firstDayOfAwalMonth));\r\n    }\r\n\r\n    static getMod(n: number, m: number) {\r\n        const remain = n % m;\r\n        return Math.floor(remain >= 0 ? remain : remain + m);\r\n    };\r\n\r\n    static getAhierAwalDaysGap(firstDayOfAhierMonth: number, firstDayOfAwalMonth: number) {\r\n        let daysGap = 0;\r\n\r\n        if (firstDayOfAhierMonth < firstDayOfAwalMonth) {\r\n            daysGap = firstDayOfAwalMonth - firstDayOfAhierMonth;\r\n        } else if (firstDayOfAhierMonth > firstDayOfAwalMonth) {\r\n            daysGap = firstDayOfAwalMonth + (6 - firstDayOfAhierMonth) + 1; // Sunday is 0\r\n        }\r\n\r\n        return daysGap;\r\n    }\r\n\r\n    static convertToChamDigitUnicode(latinNumber: number) {\r\n        const ChamDigitArr = ['꩐', '꩑', '꩒', '꩓', '꩔', '꩕', '꩖', '꩗', '꩘', '꩙'];\r\n        const EnglishDigits = '0123456789';\r\n        const reg = new RegExp('[' + EnglishDigits + ']', 'g');\r\n\r\n        return latinNumber.toString().replace(reg, function (c) {\r\n            return ChamDigitArr[EnglishDigits.indexOf(c)]\r\n        });\r\n    }\r\n\r\n    static getNextEvents(fullCalendar: FullCalendarType[]) {\r\n        let result: CountDownBarProps[] = [];\r\n        let addedAkaokThun = false;\r\n        let addedRijaNagar = false;\r\n        //let addedKateHamuTanran = false;\r\n        let addedKate = false;\r\n        let addedRamawan = false;\r\n        // let addedMukTrun = false;\r\n        // let addedOngTrun = false;\r\n        // let addedTalaihRamawan = false;\r\n        // let addedIkakWaha = false;\r\n        // let addedTalaihWaha = false;\r\n        // let addedYuerYang = false;\r\n\r\n        fullCalendar.forEach(function (item, index) {\r\n            if (item.dateGregory < new Date()) {\r\n                return;\r\n            }\r\n\r\n            let eventGregoryDate = item.dateGregory;\r\n\r\n            if (!addedAkaokThun && item.dateAhier.ahierMonth.month === 0 && item.dateAhier.date === 1) {\r\n                result.push({ eventType: 'Akaok thun', eventDate: eventGregoryDate });\r\n                addedAkaokThun = true;\r\n            }\r\n\r\n            if (!addedRijaNagar && item.dateAhier.ahierMonth.month === 0 && eventGregoryDate.getDay() === 4) {\r\n                if (item.dateAwal.awalMonth.month !== AwalMonthEnum.Ramadan) {\r\n                    if (item.dateAhier.date < 7 || (item.dateAhier.date > 14 && item.dateAhier.date < 20)) {\r\n                        result.push({ eventType: 'Rija Nagar', eventDate: eventGregoryDate });\r\n                        addedRijaNagar = true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            /*if (!addedKateHamuTanran && item.dateAhier.ahierMonth.month === 5 && item.dateAhier.date === 29) {\r\n                result.push({ eventType: 'Katé palei Hamu Tanran', eventDate: eventGregoryDate });\r\n                addedKateHamuTanran = true;\r\n            }*/\r\n\r\n            if (!addedKate && item.dateAhier.ahierMonth.month === 6 && item.dateAhier.date === 1) {\r\n                result.push({ eventType: 'Katé angaok bimong', eventDate: eventGregoryDate });\r\n                addedKate = true;\r\n            }\r\n\r\n            /*if (item.dayNumbersOfCurrentAhierMonth === 30) {\r\n                if (item.dateAhier.ahierMonth.month === 8 && item.dateAhier.date === 16) {\r\n                    result.push('Ca-mbur');\r\n                }\r\n            } else {\r\n                if (item.dateAhier.ahierMonth.month === 8 && item.dateAhier.date === 15) {\r\n                    result.push('Ca-mbur');\r\n                }\r\n            }*/\r\n\r\n            if (!addedRamawan && item.dateAwal.awalMonth.month === 8 && item.dateAwal.date === 1) {\r\n                result.push({ eventType: 'Tamâ ricaow Ramâwan', eventDate: eventGregoryDate });\r\n                addedRamawan = true;\r\n            }\r\n\r\n            /*if (!addedMukTrun && item.dateAwal.awalMonth.month === 8 && item.dateAwal.date === 16) {\r\n                result.push({ eventType: 'Muk trun', eventDate: eventGregoryDate });\r\n                addedMukTrun = true;\r\n            }\r\n\r\n            if (!addedOngTrun && item.dateAwal.awalMonth.month === 8 && item.dateAwal.date === 21) {\r\n                result.push({ eventType: 'Ong trun', eventDate: eventGregoryDate });\r\n                addedOngTrun = true;\r\n            }\r\n\r\n            if (!addedTalaihRamawan && item.dateAwal.awalMonth.month === 9 && item.dateAwal.date === 2) {\r\n                result.push({ eventType: 'Talaih aek Ramâwan', eventDate: eventGregoryDate });\r\n                addedTalaihRamawan = true;\r\n            }\r\n\r\n            if (!addedIkakWaha && item.dateAwal.awalMonth.month === 11 && item.dateAwal.date === 1) {\r\n                result.push({ eventType: 'Ikak Waha', eventDate: eventGregoryDate });\r\n                addedIkakWaha = true;\r\n            }\r\n\r\n            if (!addedTalaihWaha && item.dateAwal.awalMonth.month === 11 && item.dateAwal.date === 11) {\r\n                result.push({ eventType: 'Talaih Waha', eventDate: eventGregoryDate });\r\n                addedTalaihWaha = true;\r\n            }\r\n\r\n            if (!addedYuerYang && item.dateAhier.ahierMonth.month === 3 && eventGregoryDate.getDay() === 0 && item.dateAhier.date < 7) {\r\n                result.push({ eventType: 'Yuer Yang', eventDate: eventGregoryDate });\r\n                addedYuerYang = true;\r\n            }*/\r\n\r\n            // Break loop: just look up in a year later (30 days x 13 months)\r\n            if (eventGregoryDate > Helper.addGregoryDays(new Date(), 390)) {\r\n                return;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    static getEventsInAhierYear(maxtrixCalendar: MatrixCalendarType[], item: FullCalendarType) {\r\n        let result: CountDownBarProps[] = [];\r\n        let eventGregoryDate = item.dateGregory;\r\n\r\n        if (item.dateAhier.ahierMonth.month === 0 && item.dateAhier.date === 1) {\r\n            result.push({ eventType: 'Akaok thun', sakawiType: 'sakawiAhier', eventDate: eventGregoryDate });\r\n        }\r\n\r\n        if (item.dateAhier.ahierMonth.month === 0 && eventGregoryDate.getDay() === 4) {\r\n            if (item.dateAwal.awalMonth.month !== AwalMonthEnum.Ramadan) {\r\n                if (item.dateAhier.date < 7 || (item.dateAhier.date > 14 && item.dateAhier.date < 20)) {\r\n                    result.push({ eventType: 'Rija Nagar', sakawiType: 'sakawiAhier', eventDate: eventGregoryDate });\r\n                }\r\n            }\r\n        }\r\n\r\n        if (item.dateAhier.ahierMonth.month === 5 && item.dateAhier.date === 29) {\r\n            result.push({ eventType: 'Katé palei Hamu Tanran', sakawiType: 'sakawiAhier', eventDate: eventGregoryDate });\r\n        }\r\n\r\n        if (item.dateAhier.ahierMonth.month === 6 && item.dateAhier.date === 1) {\r\n            result.push({ eventType: 'Katé angaok bimong', sakawiType: 'sakawiAhier', eventDate: eventGregoryDate });\r\n        }\r\n\r\n        const dayNumbersOfCurrentAhierMonth = Helper.getActualDayNumbersOfAhierMonth(maxtrixCalendar, item.dateAhier.ahierMonth);\r\n        if (dayNumbersOfCurrentAhierMonth === 30) {\r\n            if (item.dateAhier.ahierMonth.month === 8 && item.dateAhier.date === 16) {\r\n                result.push({ eventType: 'Ca-mbur', sakawiType: 'sakawiAhier', eventDate: eventGregoryDate });\r\n            }\r\n        } else {\r\n            if (item.dateAhier.ahierMonth.month === 8 && item.dateAhier.date === 15) {\r\n                result.push({ eventType: 'Ca-mbur', sakawiType: 'sakawiAhier', eventDate: eventGregoryDate });\r\n            }\r\n        }\r\n\r\n        if (item.dateAwal.awalMonth.month === 8 && item.dateAwal.date === 1) {\r\n            result.push({ eventType: 'Tamâ ricaow Ramâwan', sakawiType: 'sakawiAwal', eventDate: eventGregoryDate });\r\n        }\r\n\r\n        if (item.dateAwal.awalMonth.month === 8 && item.dateAwal.date === 16) {\r\n            result.push({ eventType: 'Muk trun', sakawiType: 'sakawiAwal', eventDate: eventGregoryDate });\r\n        }\r\n\r\n        if (item.dateAwal.awalMonth.month === 8 && item.dateAwal.date === 21) {\r\n            result.push({ eventType: 'Ong trun', sakawiType: 'sakawiAwal', eventDate: eventGregoryDate });\r\n        }\r\n\r\n        if (item.dateAwal.awalMonth.month === 9 && item.dateAwal.date === 2) {\r\n            result.push({ eventType: 'Talaih aek Ramâwan', sakawiType: 'sakawiAwal', eventDate: eventGregoryDate });\r\n        }\r\n\r\n        if (item.dateAwal.awalMonth.month === 11 && item.dateAwal.date === 1) {\r\n            result.push({ eventType: 'Ikak Waha', sakawiType: 'sakawiAwal', eventDate: eventGregoryDate });\r\n        }\r\n\r\n        if (item.dateAwal.awalMonth.month === 11 && item.dateAwal.date === 11) {\r\n            result.push({ eventType: 'Talaih Waha', sakawiType: 'sakawiAwal', eventDate: eventGregoryDate });\r\n        }\r\n\r\n        if (item.dateAhier.ahierMonth.month === 3 && eventGregoryDate.getDay() === 0 && item.dateAhier.date < 7) {\r\n            result.push({ eventType: 'Yuer Yang', sakawiType: 'sakawiAhier', eventDate: eventGregoryDate });\r\n        }\r\n\r\n        return result;\r\n    }\r\n}","import { useEffect, useState } from \"react\";\r\nimport { Col, ProgressBar, Row } from \"react-bootstrap\";\r\nimport { EventType, VariantType } from \"../enums/enum\";\r\nimport { SakawiType } from \"./calendar\";\r\n\r\nexport interface CountDownBarProps {\r\n    eventType: EventType;\r\n    eventDate: Date;\r\n    sakawiType?: SakawiType;\r\n}\r\n\r\nexport const CountDownBar = (props: CountDownBarProps) => {\r\n    const [percent, setPercent] = useState(100);\r\n    const [days, setDays] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            init();\r\n        }, 1000);\r\n    });\r\n\r\n    function init() {\r\n        if (!props.eventDate) {\r\n            return;\r\n        }\r\n\r\n        const now = new Date().getTime();\r\n        const distance = props.eventDate.getTime() - now;\r\n        const timeOfYear = 365 * 24 * 60 * 60 * 1000;\r\n        const percent = distance / timeOfYear * 100;\r\n        setPercent(percent);\r\n\r\n        // Time calculations for days, hours, minutes and seconds\r\n        const days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n\r\n        setDays(days);\r\n    }\r\n\r\n    let dd = props.eventDate.getDate();\r\n    let mm = props.eventDate.getMonth() + 1;\r\n    const yyyy = props.eventDate.getFullYear();\r\n    const ddStr = dd < 10 ? '0' + dd : dd;\r\n    const mmStr = mm < 10 ? '0' + mm : mm;\r\n    const dateStr = ddStr + '/' + mmStr + '/' + yyyy;\r\n\r\n    let variantType: VariantType;\r\n    let displayEventName = '';\r\n    switch (props.eventType) {\r\n        case \"Akaok thun\":\r\n            variantType = 'primary';\r\n            displayEventName = 'Năm mới';\r\n            break;\r\n        case \"Rija Nagar\":\r\n            variantType = 'danger';\r\n            displayEventName = props.eventType;\r\n            break;\r\n        case \"Katé angaok bimong\":\r\n            variantType = 'warning';\r\n            displayEventName = 'Katé';\r\n            break;\r\n        case \"Tamâ ricaow Ramâwan\":\r\n            variantType = 'success';\r\n            displayEventName = 'Ramâwan';\r\n            break;\r\n        default:\r\n            variantType = 'warning';\r\n            displayEventName = props.eventType;\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col sm={6} md={12} lg={12}>\r\n                <div style={{ marginBottom: \"0.1rem\" }}>\r\n                    <span style={{ fontWeight: \"bold\" }}>{`${displayEventName}:`}</span>\r\n                    <span>{` ${dateStr}`}</span>\r\n                    <span>{` - Còn: ${days} ngày`}</span>\r\n                </div>\r\n                <ProgressBar style={{ height: \"0.3rem\", marginBottom: \"5px\" }} variant={variantType.toString()} now={percent} />\r\n            </Col>\r\n        </Row>\r\n    );\r\n}","import { Col, Row } from \"react-bootstrap\";\r\nimport { AwalMonthEnum, displayIkasSarakName } from \"../enums/enum\";\r\nimport { AhierDate, AhierMonth } from \"../model/AhierDate\";\r\nimport { AwalDate, AwalMonth } from \"../model/AwalDate\";\r\nimport Helper from \"../utility/helper\";\r\nimport { SakawiType } from \"./calendar\";\r\n\r\ninterface DayDetailsProps {\r\n    sakawiType: SakawiType;\r\n    dateGregory: Date;\r\n    dateAwal: AwalDate;\r\n    dateAhier: AhierDate;\r\n    currentAhierMonth?: AhierMonth;\r\n    currentAwalMonth?: AwalMonth;\r\n    currentGregoryMonth?: number;\r\n    currentGregoryYear?: number;\r\n    dayNumbersOfCurrentAhierMonth: number;\r\n    dayNumbersOfCurrentAwalMonth: number;\r\n}\r\n\r\nexport const DayDetails = (props: DayDetailsProps) => {\r\n    let opacityValue = 1;\r\n    let backgroundColor = '';\r\n\r\n    if (props.dateGregory.toLocaleDateString() === new Date().toLocaleDateString()) {\r\n        backgroundColor = '#FFEFBF';\r\n    }\r\n\r\n    if (props.sakawiType === \"sakawiAhier\") {\r\n        if (JSON.stringify(props.dateAhier.ahierMonth) !== JSON.stringify(props.currentAhierMonth)) {\r\n            backgroundColor = '#F2F2F2';\r\n            opacityValue = 0.3;\r\n        }\r\n    } else if (props.sakawiType === \"sakawiAwal\") {\r\n        if (JSON.stringify(props.dateAwal.awalMonth) !== JSON.stringify(props.currentAwalMonth)) {\r\n            backgroundColor = '#F2F2F2';\r\n            opacityValue = 0.3;\r\n        }\r\n    } else if (props.sakawiType === \"sakawiGregory\") {\r\n        if (props.dateGregory.getMonth() !== props.currentGregoryMonth\r\n            || props.dateGregory.getFullYear() !== props.currentGregoryYear) {\r\n            backgroundColor = '#F2F2F2';\r\n            opacityValue = 0.3;\r\n        }\r\n    }\r\n\r\n    const tdStyle: React.CSSProperties = {\r\n        opacity: opacityValue,\r\n        backgroundColor: backgroundColor\r\n    }\r\n\r\n    let gregoryDateClass = 'gregory-date';\r\n    let ahierDateClass = 'ahier-date';\r\n    let awalDateClass = 'awal-date';\r\n    let ikasSarakMonthCellClass = 'ikasSarak-month-cell';\r\n\r\n    switch (props.sakawiType) {\r\n        case \"sakawiGregory\":\r\n            gregoryDateClass += ' active'\r\n            break;\r\n\r\n        case \"sakawiAhier\":\r\n            ahierDateClass += ' active'\r\n            break;\r\n\r\n        case \"sakawiAwal\":\r\n            awalDateClass += ' active'\r\n            ikasSarakMonthCellClass += ' active'\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n\r\n    function displayGregoryDate(sakawiType: SakawiType, dateAhier: AhierDate, dateAwal: AwalDate, dateGregory: Date) {\r\n        const monthGregogy = dateGregory.getMonth() + 1;\r\n\r\n        if (dateGregory.getDate() === 1 ||\r\n            (sakawiType === \"sakawiAwal\" && dateAwal.date === 1) ||\r\n            (sakawiType === \"sakawiAhier\" && dateAhier.date === 1)) {\r\n            return dateGregory.getDate() + \".\" + monthGregogy;\r\n        } else {\r\n            return dateGregory.getDate();\r\n        }\r\n    }\r\n\r\n    function displayAhierDate(dateAhier: AhierDate) {\r\n        const bingun = 'ꩃ';\r\n        const klem = 'ꩌ';\r\n\r\n        if (props.dayNumbersOfCurrentAhierMonth === 30) {\r\n            if (dateAhier.date <= 15) {\r\n                return Helper.convertToChamDigitUnicode(dateAhier.date) + bingun;\r\n            } else {\r\n                return Helper.convertToChamDigitUnicode(dateAhier.date - 15) + klem;\r\n            }\r\n        } else {\r\n            if (dateAhier.date <= 14) {\r\n                if (dateAhier.date <= 5) {\r\n                    return Helper.convertToChamDigitUnicode(dateAhier.date) + bingun;\r\n                } else {\r\n                    return Helper.convertToChamDigitUnicode(dateAhier.date + 1) + bingun;\r\n                }\r\n            } else {\r\n                return Helper.convertToChamDigitUnicode(dateAhier.date - 14) + klem;\r\n            }\r\n        }\r\n    };\r\n\r\n    function displayAwalDate(dateAwal: AwalDate) {\r\n        const monthAwal = dateAwal.awalMonth.month + 1;\r\n        const bingun = 'ꩃ';\r\n        const klem = 'ꩌ';\r\n\r\n        if (dateAwal.date === 1) {\r\n            return (\r\n                <>\r\n                    <label style={{ margin: 0 }} >{Helper.convertToChamDigitUnicode(dateAwal.date) + bingun + \".\" + Helper.convertToChamDigitUnicode(monthAwal) + \".\"}</label>\r\n                    <label style={{ margin: 0 }} className={ikasSarakMonthCellClass}>{displayIkasSarakName(dateAwal.awalMonth.year.ikasSarak)}</label>\r\n                </>\r\n            )\r\n        } else {\r\n            if (props.dayNumbersOfCurrentAwalMonth === 30) {\r\n                if (dateAwal.date <= 15) {\r\n                    return Helper.convertToChamDigitUnicode(dateAwal.date) + bingun;\r\n                } else {\r\n                    return Helper.convertToChamDigitUnicode(dateAwal.date - 15) + klem;\r\n                }\r\n            } else {\r\n                if (dateAwal.date <= 14) {\r\n                    return Helper.convertToChamDigitUnicode(dateAwal.date) + bingun;\r\n                } else {\r\n                    return Helper.convertToChamDigitUnicode(dateAwal.date - 14) + klem;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function getEvents() {\r\n        let result: string[] = [];\r\n\r\n        if (props.dateAhier.ahierMonth.month === 0 && props.dateAhier.date === 1) {\r\n            result.push('Akaok thun');\r\n        }\r\n\r\n        if (props.dateAhier.ahierMonth.month === 0 && props.dateGregory.getDay() === 4) {\r\n            if (props.dateAwal.awalMonth.month !== AwalMonthEnum.Ramadan) {\r\n                if (props.dateAhier.date < 7 || (props.dateAhier.date > 14 && props.dateAhier.date < 20)) {\r\n                    result.push('Rija Nagar');\r\n                }\r\n            }\r\n        }\r\n\r\n        if (props.dateAhier.ahierMonth.month === 5 && props.dateAhier.date === props.dayNumbersOfCurrentAhierMonth) {\r\n            result.push('Katé palei Hamu Tanran');\r\n        }\r\n\r\n        if (props.dateAhier.ahierMonth.month === 6 && props.dateAhier.date === 1) {\r\n            result.push('Katé angaok bimong');\r\n        }\r\n\r\n        if (props.dayNumbersOfCurrentAhierMonth === 30) {\r\n            if (props.dateAhier.ahierMonth.month === 8 && props.dateAhier.date === 16) {\r\n                result.push('Ca-mbur');\r\n            }\r\n        } else {\r\n            if (props.dateAhier.ahierMonth.month === 8 && props.dateAhier.date === 15) {\r\n                result.push('Ca-mbur');\r\n            }\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month === 8 && props.dateAwal.date === 1) {\r\n            result.push('Tamâ ricaow Ramâwan');\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month === 8 && props.dateAwal.date === 16) {\r\n            result.push('Muk trun');\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month === 8 && props.dateAwal.date === 21) {\r\n            result.push('Ong trun');\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month === 9 && props.dateAwal.date === 2) {\r\n            result.push('Talaih aek Ramâwan');\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month === 11 && props.dateAwal.date === 1) {\r\n            result.push('Ikak Waha');\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month === 11 && props.dateAwal.date === 11) {\r\n            result.push('Talaih Waha');\r\n        }\r\n\r\n        if (props.dateAhier.ahierMonth.month === 3 && props.dateGregory.getDay() === 0 && props.dateAhier.date < 7) {\r\n            result.push('Yuer Yang');\r\n        }\r\n\r\n        // TODO: \r\n        // if (props.dateAhier.ahierMonth.month === 10 && props.dateGregory.getDay() === 2 && props.dateAhier.date <= 15) {\r\n        //     result.push('Peh ba-mbeng Yang');\r\n        // }\r\n\r\n        if ((props.dateAhier.ahierMonth.month === 2\r\n            || props.dateAhier.ahierMonth.month === 5\r\n            || props.dateAhier.ahierMonth.month === 7\r\n            || props.dateAhier.ahierMonth.month === 9\r\n            || props.dateAhier.ahierMonth.month === 10) && props.dateGregory.getDay() === 3) {\r\n\r\n            if (props.dayNumbersOfCurrentAhierMonth === 30) {\r\n                if (props.dateAhier.date > 15 && (props.dateAhier.date - 15) % 2 === 0) {\r\n                    result.push('♥️ Lakhah');\r\n                }\r\n            } else {\r\n                if (props.dateAhier.date > 14 && (props.dateAhier.date - 14) % 2 === 0) {\r\n                    result.push('♥️ Lakhah');\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    return (\r\n        <td style={tdStyle}>\r\n            <Row>\r\n                <Col xs={6} sm={6} md={6}></Col>\r\n                <Col className={gregoryDateClass} xs={6} sm={6} md={6}>\r\n                    {displayGregoryDate(props.sakawiType, props.dateAhier, props.dateAwal, props.dateGregory)}\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={12} sm={12} md={12} style={{ minHeight: \"10px\", maxHeight: \"25px\" }}>\r\n                    {getEvents().map((item, index) => {\r\n                        return <p key={index} className='event-name'>{item}</p>\r\n                    })}\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className={awalDateClass} xs={6} sm={6} md={6}>\r\n                    {displayAwalDate(props.dateAwal)}\r\n                </Col>\r\n                <Col className={ahierDateClass} xs={6} sm={6} md={6}>\r\n                    {displayAhierDate(props.dateAhier)}\r\n                </Col>\r\n            </Row>\r\n        </td>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { FullCalendarType } from \"../model/FullCalendarType\";\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport Helper from \"../utility/helper\";\r\nimport { DayDetails } from \"./dayDetails\";\r\n\r\ninterface MonthAhierProps {\r\n    matrixSakawi: MatrixCalendarType[],\r\n    fullSakawi: FullCalendarType[],\r\n    currentAhierMonthMatrix: MatrixCalendarType\r\n}\r\n\r\nexport const MonthAhier = (props: MonthAhierProps) => {\r\n    const [datesOfCurrentMonth, setDatesOfCurrentMonth] = useState<FullCalendarType[]>([]);\r\n\r\n    React.useEffect(() => {\r\n        function init() {\r\n            // Get date list will be display at current month\r\n            const firstDayOfCurrentAhierMonthIndex = props.fullSakawi.findIndex(x => x.dateAhier.date === 1\r\n                && JSON.stringify(x.dateAhier.ahierMonth) === JSON.stringify(props.currentAhierMonthMatrix.ahierMonth));\r\n            const firstIndex = firstDayOfCurrentAhierMonthIndex - props.currentAhierMonthMatrix.firstDayOfAhierMonth;\r\n            const lastIndex = firstIndex + 41; // 42 - 1 cells\r\n            const datesOfCurrentMonth = props.fullSakawi.filter((item, index) => index >= firstIndex && index <= lastIndex);\r\n            setDatesOfCurrentMonth(datesOfCurrentMonth);\r\n        }\r\n\r\n        init();\r\n    }, [props.currentAhierMonthMatrix.ahierMonth, props.currentAhierMonthMatrix.firstDayOfAhierMonth, props.fullSakawi]);\r\n\r\n    // draw Calendar Table\r\n    let cells: JSX.Element[] = [];\r\n    let rows: JSX.Element[] = [];\r\n\r\n    datesOfCurrentMonth.forEach((item, index) => {\r\n        const dayNumbersOfCurrentAhierMonth = Helper.getActualDayNumbersOfAhierMonth(props.matrixSakawi, item.dateAhier.ahierMonth);\r\n        const dayNumbersOfCurrentAwalMonth = Helper.getDayNumbersOfAwalMonth(item.dateAwal.awalMonth.year, item.dateAwal.awalMonth.month);\r\n\r\n        cells.push(\r\n            <DayDetails\r\n                sakawiType=\"sakawiAhier\"\r\n                key={`sakawiAhier-cell-${index}`}\r\n                dateAhier={item.dateAhier}\r\n                dateAwal={item.dateAwal}\r\n                dateGregory={item.dateGregory}\r\n                currentAhierMonth={props.currentAhierMonthMatrix.ahierMonth}\r\n                currentAwalMonth={props.currentAhierMonthMatrix.awalMonth}\r\n                dayNumbersOfCurrentAhierMonth={dayNumbersOfCurrentAhierMonth}\r\n                dayNumbersOfCurrentAwalMonth={dayNumbersOfCurrentAwalMonth}\r\n            />\r\n        );\r\n\r\n        if ((index + 1) % 7 === 0) {\r\n            rows.push(<tr key={`sakawiAhier-row-${index}`}>{cells}</tr>);\r\n            cells = [];\r\n        }\r\n    })\r\n\r\n    const dayNames = [\"Adit\", \"Thom\", \"Angar\", \"But\", \"Jip\", \"Suk\", \"Sanacar\"]\r\n    const tableStyle: React.CSSProperties = {\r\n        height: \"400px\",\r\n        tableLayout: \"fixed\"\r\n    }\r\n\r\n    return (\r\n        <Table bordered hover style={tableStyle}>\r\n            <thead>\r\n                <tr>\r\n                    {dayNames.map((d, index) =>\r\n                        <th className=\"day-name\" key={index}>{d}</th>\r\n                    )}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {rows}\r\n            </tbody>\r\n        </Table>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { FullCalendarType } from \"../model/FullCalendarType\";\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport Helper from '../utility/helper';\r\nimport { DayDetails } from \"./dayDetails\";\r\n\r\ninterface MonthAwalProps {\r\n    matrixSakawi: MatrixCalendarType[],\r\n    fullSakawi: FullCalendarType[],\r\n    currentAwalMonthMatrix: MatrixCalendarType\r\n}\r\n\r\nexport const MonthAwal = (props: MonthAwalProps) => {\r\n    const [datesOfCurrentMonth, setDatesOfCurrentMonth] = useState<FullCalendarType[]>([]);\r\n\r\n    React.useEffect(() => {\r\n        function init() {\r\n            // Get date list will be display at current month\r\n            const firstDayOfCurrentAwalMonthIndex = props.fullSakawi.findIndex(x => x.dateAwal.date === 1\r\n                && JSON.stringify(x.dateAwal.awalMonth) === JSON.stringify(props.currentAwalMonthMatrix.awalMonth));\r\n            const firstIndex = firstDayOfCurrentAwalMonthIndex - props.currentAwalMonthMatrix.firstDayOfAwalMonth;\r\n            const lastIndex = firstIndex + 41; // 42 - 1 cells\r\n            const datesOfCurrentMonth = props.fullSakawi.filter((item, index) => index >= firstIndex && index <= lastIndex);\r\n            setDatesOfCurrentMonth(datesOfCurrentMonth);\r\n        }\r\n\r\n        init();\r\n    }, [props.currentAwalMonthMatrix.awalMonth, props.currentAwalMonthMatrix.firstDayOfAwalMonth, props.fullSakawi]);\r\n\r\n    // draw Calendar Table\r\n    let cells: JSX.Element[] = [];\r\n    let rows: JSX.Element[] = [];\r\n\r\n    datesOfCurrentMonth.forEach((item, index) => {\r\n        const dayNumbersOfCurrentAhierMonth = Helper.getActualDayNumbersOfAhierMonth(props.matrixSakawi, item.dateAhier.ahierMonth);\r\n        const dayNumbersOfCurrentAwalMonth = Helper.getDayNumbersOfAwalMonth(item.dateAwal.awalMonth.year, item.dateAwal.awalMonth.month);\r\n\r\n        cells.push(\r\n            <DayDetails\r\n                sakawiType=\"sakawiAwal\"\r\n                key={`sakawiAwal-cell-${index}`}\r\n                dateAhier={item.dateAhier}\r\n                dateAwal={item.dateAwal}\r\n                dateGregory={item.dateGregory}\r\n                currentAhierMonth={props.currentAwalMonthMatrix.ahierMonth}\r\n                currentAwalMonth={props.currentAwalMonthMatrix.awalMonth}\r\n                dayNumbersOfCurrentAhierMonth={dayNumbersOfCurrentAhierMonth}\r\n                dayNumbersOfCurrentAwalMonth={dayNumbersOfCurrentAwalMonth}\r\n            />\r\n        );\r\n\r\n        if ((index + 1) % 7 === 0) {\r\n            rows.push(<tr key={`sakawiAwal-row-${index}`}>{cells}</tr>);\r\n            cells = [];\r\n        }\r\n    })\r\n\r\n    const dayNames = [\"Adit\", \"Thom\", \"Angar\", \"But\", \"Jip\", \"Suk\", \"Sanacar\"]\r\n    const tableStyle: React.CSSProperties = {\r\n        height: \"400px\",\r\n        tableLayout: \"fixed\"\r\n    }\r\n\r\n    return (\r\n        <Table bordered hover style={tableStyle}>\r\n            <thead>\r\n                <tr>\r\n                    {dayNames.map((d, index) =>\r\n                        <th className=\"day-name\" key={index}>{d}</th>\r\n                    )}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {rows}\r\n            </tbody>\r\n        </Table>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { FullCalendarType } from \"../model/FullCalendarType\";\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport Helper from '../utility/helper';\r\nimport { DayDetails } from \"./dayDetails\";\r\n\r\ninterface MonthGregoryProps {\r\n    matrixSakawi: MatrixCalendarType[],\r\n    fullSakawi: FullCalendarType[],\r\n    currentGregoryMonth: number,\r\n    currentGregoryYear: number\r\n}\r\n\r\nexport const MonthGregory = (props: MonthGregoryProps) => {\r\n    const [datesOfCurrentMonth, setDatesOfCurrentMonth] = useState<FullCalendarType[]>([]);\r\n\r\n    React.useEffect(() => {\r\n        function init() {\r\n            // Gregory Date\r\n            const firstGregoryDate = new Date(props.currentGregoryYear, props.currentGregoryMonth, 1);\r\n\r\n            // Get date list will be display at current month\r\n            const firstDayOfCurrentGregoryMonthIndex = props.fullSakawi.findIndex(x =>\r\n                x.dateGregory.getDate() === 1\r\n                && x.dateGregory.getMonth() === props.currentGregoryMonth\r\n                && x.dateGregory.getFullYear() === props.currentGregoryYear);\r\n            const firstIndex = firstDayOfCurrentGregoryMonthIndex - firstGregoryDate.getDay();\r\n            const lastIndex = firstIndex + 41; // 42 - 1 cells\r\n            const datesOfCurrentMonth = props.fullSakawi.filter((item, index) => index >= firstIndex && index <= lastIndex);\r\n            setDatesOfCurrentMonth(datesOfCurrentMonth);\r\n        }\r\n\r\n        init();\r\n    }, [props.currentGregoryMonth, props.currentGregoryYear, props.fullSakawi]);\r\n\r\n    // draw Calendar Table\r\n    let cells: JSX.Element[] = [];\r\n    let rows: JSX.Element[] = [];\r\n\r\n    datesOfCurrentMonth.forEach((item, index) => {\r\n        const dayNumbersOfCurrentAhierMonth = Helper.getActualDayNumbersOfAhierMonth(props.matrixSakawi, item.dateAhier.ahierMonth);\r\n        const dayNumbersOfCurrentAwalMonth = Helper.getDayNumbersOfAwalMonth(item.dateAwal.awalMonth.year, item.dateAwal.awalMonth.month);\r\n\r\n        cells.push(\r\n            <DayDetails\r\n                sakawiType=\"sakawiGregory\"\r\n                key={`sakawiGregory-cell-${index}`}\r\n                dateAhier={item.dateAhier}\r\n                dateAwal={item.dateAwal}\r\n                dateGregory={item.dateGregory}\r\n                currentGregoryMonth={props.currentGregoryMonth}\r\n                currentGregoryYear={props.currentGregoryYear}\r\n                dayNumbersOfCurrentAhierMonth={dayNumbersOfCurrentAhierMonth}\r\n                dayNumbersOfCurrentAwalMonth={dayNumbersOfCurrentAwalMonth}\r\n            />\r\n        );\r\n\r\n        if ((index + 1) % 7 === 0) {\r\n            rows.push(<tr key={`sakawiGregory-row-${index}`}>{cells}</tr>);\r\n            cells = [];\r\n        }\r\n    })\r\n\r\n    const dayNames = [\"CN\", \"Hai\", \"Ba\", \"Tư\", \"Năm\", \"Sáu\", \"Bảy\"];\r\n    const tableStyle: React.CSSProperties = {\r\n        height: \"400px\",\r\n        tableLayout: \"fixed\"\r\n    }\r\n\r\n    return (\r\n        <Table bordered hover style={tableStyle}>\r\n            <thead>\r\n                <tr>\r\n                    {dayNames.map((d, index) =>\r\n                        <th className=\"day-name\" key={index}>{d}</th>\r\n                    )}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {rows}\r\n            </tbody>\r\n        </Table>\r\n    );\r\n}\r\n","import { Button, ButtonGroup, ButtonToolbar, Col } from \"react-bootstrap\";\r\nimport { AwalMonthEnum, displayIkasSarakName, displayMonthName, displayNasakName, IkasSarakEnum } from \"../enums/enum\";\r\nimport { AhierMonth } from \"../model/AhierDate\";\r\nimport { AwalMonth } from \"../model/AwalDate\";\r\nimport Helper from \"../utility/helper\";\r\nimport { SakawiType } from \"./calendar\";\r\n\r\ninterface MonthNavigationProps {\r\n    sakawiType: SakawiType;\r\n    currentAhierMonth?: AhierMonth;\r\n    currentAwalMonth?: AwalMonth;\r\n    currentGregoryMonth?: number;\r\n    currentGregoryYear?: number;\r\n    onSelectSakawiType: (type: SakawiType) => void\r\n    onClickToday: () => void;\r\n    onClickPreviousMonth: () => void;\r\n    onClickNextMonth: () => void;\r\n}\r\n\r\nexport const MonthNavigation = (props: MonthNavigationProps) => {\r\n    const currentGregoryMonth = props.currentGregoryMonth ? props.currentGregoryMonth + 1 : 1;\r\n\r\n    return (\r\n        <>\r\n            <Col md={4}>\r\n                <ButtonToolbar aria-label=\"Toolbar with button groups\" style={{ justifyContent: \"flex-start\" }}>\r\n                    <ButtonGroup aria-label=\"Type of calendar\">\r\n                        <Button variant=\"outline-secondary\" active={props.sakawiType === 'sakawiAhier'} onClick={() => props.onSelectSakawiType('sakawiAhier')}>Lịch Cham</Button>\r\n                        <Button variant=\"outline-secondary\" active={props.sakawiType === 'sakawiAwal'} onClick={() => props.onSelectSakawiType('sakawiAwal')}>Lịch Awal</Button>\r\n                        <Button variant=\"outline-secondary\" active={props.sakawiType === 'sakawiGregory'} onClick={() => props.onSelectSakawiType('sakawiGregory')}>Dương lịch</Button>\r\n                    </ButtonGroup>\r\n                </ButtonToolbar>\r\n            </Col>\r\n            <Col md={5} style={{ textAlign: \"center\" }}>\r\n                {props.sakawiType === 'sakawiAhier' && props.currentAhierMonth &&\r\n                    <>\r\n                        <div className='bilan-title'>\r\n                            {displayMonthName(props.currentAhierMonth.month).akharThrahName}\r\n                            {' - '}{displayNasakName(props.currentAhierMonth.year.nasak).akharThrahName}\r\n                            {'   '}<label className='ikasSarak-title'>{displayIkasSarakName(props.currentAhierMonth.year.ikasSarak)}</label>\r\n                            {' - '}{Helper.convertToChamDigitUnicode(props.currentAhierMonth.year.yearNumber ?? 0)}\r\n                        </div>\r\n                        <div className='bilan-latin-title'>\r\n                            {displayMonthName(props.currentAhierMonth.month).rumiName} {`(${(props.currentAhierMonth.month + 1)})`}\r\n                            {' - '}{displayNasakName(props.currentAhierMonth.year.nasak).rumiName} {IkasSarakEnum[props.currentAhierMonth.year.ikasSarak]}\r\n                            {' - '}{props.currentAhierMonth.year.yearNumber}\r\n                        </div>\r\n                    </>\r\n                }\r\n                {props.sakawiType === 'sakawiAwal' && props.currentAwalMonth &&\r\n                    <>\r\n                        <div className='bilan-latin-title'>\r\n                            {AwalMonthEnum[props.currentAwalMonth.month]} {`(${(props.currentAwalMonth.month + 1)})`}\r\n                            {' - '}{IkasSarakEnum[props.currentAwalMonth.year.ikasSarak]}\r\n                            {' - '}{props.currentAwalMonth.year.yearNumber}\r\n                        </div>\r\n                        <br />\r\n                    </>\r\n                }\r\n                {props.sakawiType === 'sakawiGregory' &&\r\n                    <>\r\n                        <div className='bilan-latin-title'>\r\n                            {`Tháng ${currentGregoryMonth} - ${props.currentGregoryYear}`}\r\n                        </div>\r\n                        <br />\r\n                    </>\r\n                }\r\n            </Col>\r\n            <Col md={3}>\r\n                <ButtonToolbar aria-label=\"Toolbar with button groups\" style={{ justifyContent: \"flex-end\" }}>\r\n                    <ButtonGroup aria-label=\"Third group\" style={{ marginRight: \".75em\" }}>\r\n                        <Button variant=\"secondary\" onClick={props.onClickToday}>Hôm nay</Button>\r\n                    </ButtonGroup>\r\n                    <ButtonGroup aria-label=\"Navigate months\">\r\n                        <Button variant=\"secondary\" className=\"fa fa-chevron-left\" onClick={props.onClickPreviousMonth} />\r\n                        <Button variant=\"secondary\" className=\"fa fa-chevron-right\" onClick={props.onClickNextMonth} />\r\n                    </ButtonGroup>\r\n                </ButtonToolbar>\r\n            </Col>\r\n        </>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { AhierMonthEnum, GuecTypeEnum, GuenTypeEnum, IkasSarakEnum, NasakEnum } from \"../enums/enum\";\r\nimport { AhierMonth } from \"../model/AhierDate\";\r\nimport { AwalMonth } from \"../model/AwalDate\";\r\nimport { FullCalendarType } from \"../model/FullCalendarType\";\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport Helper from \"../utility/helper\";\r\nimport { SakawiType } from \"./calendar\";\r\nimport { MonthAhier } from \"./monthAhier\";\r\nimport { MonthAwal } from \"./monthAwal\";\r\nimport { MonthGregory } from \"./monthGregory\";\r\nimport { MonthNavigation } from \"./monthNavigation\";\r\n\r\ninterface MonthCalendarProps {\r\n    matrixSakawi: MatrixCalendarType[],\r\n    fullSakawi: FullCalendarType[]\r\n}\r\n\r\nexport const MonthCalendar = (props: MonthCalendarProps) => {\r\n    const initialAhierMonth: AhierMonth = { month: AhierMonthEnum.BilanSa, year: { nasak: NasakEnum.Pabuei, ikasSarak: IkasSarakEnum.JimLuic, yearNumber: 2019 } };\r\n    const initialAwalMonth: AwalMonth = { month: 0, year: { ikasSarak: 0, yearNumber: 1400 } };\r\n    const initialGregoryDate: Date = new Date();\r\n\r\n    const initialMatrixCalendarType: MatrixCalendarType = {\r\n        ahierMonth: initialAhierMonth,\r\n        dayNumbersOfAhierMonth: 0,\r\n        firstDayOfAhierMonth: 0,\r\n        hasGuen: false,\r\n        typeOfGuen: GuenTypeEnum.None,\r\n        hasGuec: false,\r\n        typeOfGuec: GuecTypeEnum.None,\r\n        dateOfGregoryCalendar: initialGregoryDate,\r\n        awalMonth: initialAwalMonth,\r\n        dayNumbersOfAwalMonth: 0,\r\n        firstDayOfAwalMonth: 0\r\n    }\r\n\r\n    const [sakawiType, setSakawiType] = useState<SakawiType>('sakawiAhier');\r\n    const [currentAhierMonthMatrix, setCurrentAhierMonthMatrix] = useState<MatrixCalendarType>(initialMatrixCalendarType);\r\n    const [currentAwalMonthMatrix, setCurrentAwalMonthMatrix] = useState<MatrixCalendarType>(initialMatrixCalendarType);\r\n    const [currentGregoryMonth, setCurrentGregoryMonth] = useState(new Date().getMonth());\r\n    const [currentGregoryYear, setCurrentGregoryYear] = useState(new Date().getFullYear());\r\n\r\n    React.useEffect(() => {\r\n        function init() {\r\n            // Set current matrix item \r\n            const currentAhierMonthMatrix = props.matrixSakawi.filter(m =>\r\n                Helper.addGregoryDays(m.dateOfGregoryCalendar, m.dayNumbersOfAhierMonth) > new Date())[0];\r\n            if (currentAhierMonthMatrix) {\r\n                setCurrentAhierMonthMatrix(currentAhierMonthMatrix);\r\n            }\r\n\r\n            const currentAwalMonthMatrix = props.matrixSakawi.filter(m =>\r\n                Helper.addGregoryDays(m.dateOfGregoryCalendar, m.dayNumbersOfAwalMonth) > new Date())[0];\r\n            if (currentAwalMonthMatrix) {\r\n                setCurrentAwalMonthMatrix(currentAwalMonthMatrix);\r\n            }\r\n        }\r\n\r\n        init();\r\n    }, [props.matrixSakawi]);\r\n\r\n    function handleOnClickToCurrentMonth() {\r\n        if (sakawiType === \"sakawiAhier\") {\r\n            const currentAhierMonth = props.matrixSakawi.filter(m =>\r\n                Helper.addGregoryDays(m.dateOfGregoryCalendar, m.dayNumbersOfAhierMonth) > new Date())[0];\r\n            if (currentAhierMonth) {\r\n                setCurrentAhierMonthMatrix(currentAhierMonth);\r\n            }\r\n        } else if (sakawiType === \"sakawiAwal\") {\r\n            const currentAwalMonth = props.matrixSakawi.filter(m =>\r\n                Helper.addGregoryDays(m.dateOfGregoryCalendar, m.dayNumbersOfAwalMonth) > new Date())[0];\r\n            if (currentAwalMonth) {\r\n                setCurrentAwalMonthMatrix(currentAwalMonth);\r\n            }\r\n        } else {\r\n            setCurrentGregoryMonth(new Date().getMonth());\r\n            setCurrentGregoryYear(new Date().getFullYear());\r\n        }\r\n    }\r\n\r\n    function handleOnClickPreviousMonth() {\r\n        if (sakawiType === \"sakawiAhier\") {\r\n            const index = props.matrixSakawi.findIndex(x => JSON.stringify(x) === JSON.stringify(currentAhierMonthMatrix));\r\n            setCurrentAhierMonthMatrix(props.matrixSakawi[index - 1]);\r\n        } else if (sakawiType === \"sakawiAwal\") {\r\n            const index = props.matrixSakawi.findIndex(x => JSON.stringify(x) === JSON.stringify(currentAwalMonthMatrix));\r\n            setCurrentAwalMonthMatrix(props.matrixSakawi[index - 1]);\r\n        } else {\r\n            if (currentGregoryMonth === 0) {\r\n                setCurrentGregoryMonth(11);\r\n                setCurrentGregoryYear(currentGregoryYear - 1);\r\n            } else {\r\n                setCurrentGregoryMonth(currentGregoryMonth - 1);\r\n                setCurrentGregoryYear(currentGregoryYear);\r\n            }\r\n        }\r\n    }\r\n\r\n    function handleOnClickNextMonth() {\r\n        if (sakawiType === \"sakawiAhier\") {\r\n            const index = props.matrixSakawi.findIndex(x => JSON.stringify(x) === JSON.stringify(currentAhierMonthMatrix));\r\n            setCurrentAhierMonthMatrix(props.matrixSakawi[index + 1]);\r\n        } else if (sakawiType === \"sakawiAwal\") {\r\n            const index = props.matrixSakawi.findIndex(x => JSON.stringify(x) === JSON.stringify(currentAwalMonthMatrix));\r\n            setCurrentAwalMonthMatrix(props.matrixSakawi[index + 1]);\r\n        } else {\r\n            if (currentGregoryMonth === 11) {\r\n                setCurrentGregoryMonth(0);\r\n                setCurrentGregoryYear(currentGregoryYear + 1);\r\n            } else {\r\n                setCurrentGregoryMonth(currentGregoryMonth + 1);\r\n                setCurrentGregoryYear(currentGregoryYear);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <MonthNavigation\r\n                    sakawiType={sakawiType}\r\n                    currentAhierMonth={currentAhierMonthMatrix.ahierMonth}\r\n                    currentAwalMonth={currentAwalMonthMatrix.awalMonth}\r\n                    currentGregoryMonth={currentGregoryMonth}\r\n                    currentGregoryYear={currentGregoryYear}\r\n                    onClickToday={handleOnClickToCurrentMonth}\r\n                    onClickPreviousMonth={handleOnClickPreviousMonth}\r\n                    onClickNextMonth={handleOnClickNextMonth}\r\n                    onSelectSakawiType={type => setSakawiType(type)}\r\n                />\r\n            </Row>\r\n            <Row>\r\n                <Col md={12}>\r\n                    {sakawiType === 'sakawiAhier' &&\r\n                        <MonthAhier\r\n                            matrixSakawi={props.matrixSakawi}\r\n                            fullSakawi={props.fullSakawi}\r\n                            currentAhierMonthMatrix={currentAhierMonthMatrix}\r\n                        />\r\n                    }\r\n                    {sakawiType === 'sakawiAwal' &&\r\n                        <MonthAwal\r\n                            matrixSakawi={props.matrixSakawi}\r\n                            fullSakawi={props.fullSakawi}\r\n                            currentAwalMonthMatrix={currentAwalMonthMatrix}\r\n                        />\r\n                    }\r\n                    {sakawiType === 'sakawiGregory' &&\r\n                        <MonthGregory\r\n                            matrixSakawi={props.matrixSakawi}\r\n                            fullSakawi={props.fullSakawi}\r\n                            currentGregoryMonth={currentGregoryMonth ?? 0}\r\n                            currentGregoryYear={currentGregoryYear ?? new Date().getFullYear()}\r\n                        />\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { Alert, Col, Container, Form, Row } from \"react-bootstrap\";\r\nimport { FullCalendarType } from \"../model/FullCalendarType\";\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport Helper from \"../utility/helper\";\r\nimport { CountDownBar, CountDownBarProps } from \"./countDownBar\";\r\nimport { MonthCalendar } from \"./monthCalendar\";\r\n\r\nexport declare type SakawiType = 'sakawiAwal' | 'sakawiAhier' | 'sakawiGregory';\r\nexport declare type AreaType = 'NinhThuan' | 'BinhThuan';\r\n\r\nexport const Calendar = () => {\r\n    const [showWarning, setShowWarning] = useState(true);\r\n    const [areaType, setAreaType] = useState<AreaType>('NinhThuan');\r\n    const [matrixSakawi, setMatrixSakawi] = useState<MatrixCalendarType[]>([]);\r\n    const [fullSakawi, setFullSakawi] = useState<FullCalendarType[]>([]);\r\n    const [nextEvents, setNextEvents] = useState<CountDownBarProps[]>([]);\r\n\r\n    React.useEffect(() => {\r\n        function init() {\r\n            // Build matrix Calendar\r\n            let matrix = Helper.buildMatrixCalendar(2046, areaType);\r\n            //let matrix = Helper.buildMatrixCalendar(2023);\r\n            setMatrixSakawi(matrix.matrixCalendar);\r\n            //console.log('matrixCalendar', JSON.stringify(matrix.matrixCalendar));\r\n            setFullSakawi(matrix.fullCalendar);\r\n            //console.log('fullCalendar', JSON.stringify(matrix.fullCalendar));\r\n\r\n            //TO-TEST\r\n            /*const addedAwalMonth = Helper.addAwalMonths({ month: AwalMonthEnum.Julhiijaah, year: { ikasSarak: IkasSarakEnum.Dal, yearNumber: 1443 } }, 1);\r\n            console.log('addedAwalMonth', JSON.stringify(addedAwalMonth));*/\r\n\r\n            /*const firstDateOfAwalMonth: AwalDate = { date: 1, awalMonth: { month: AwalMonthEnum.Julhiijaah, year: { ikasSarak: IkasSarakEnum.Dal, yearNumber: 1443 } } };\r\n            const addedAwalDate = Helper.addAwalDays(firstDateOfAwalMonth, 27);\r\n            console.log('fullCalfirstDateOfAwalMonthendar', JSON.stringify(firstDateOfAwalMonth));\r\n            console.log('addedAwalDate', JSON.stringify(addedAwalDate));*/\r\n\r\n            const nextEvents = Helper.getNextEvents(matrix.fullCalendar);\r\n            setNextEvents(nextEvents);\r\n        }\r\n\r\n        init();\r\n    }, [areaType]);\r\n\r\n    return (\r\n        <Container>\r\n            {showWarning &&\r\n                <Row>\r\n                    <Col sm={12} md={12} lg={12}>\r\n                        <Alert variant='info' onClose={() => setShowWarning(false)} dismissible>\r\n                            <Alert.Heading>Lưu ý!</Alert.Heading>\r\n                            - Ứng dụng đang trong quá trình phát triển nên không tránh khỏi những thiếu sót, rất mong nhận được nhiều góp ý để sản phẩm được hoàn thiện hơn.\r\n                            <br />- Ứng dụng này chỉ mang tính chất tham khảo, Sakawi chính thức được Hội đồng Chức sắc phát hành từng năm.\r\n                        </Alert>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            <Row>\r\n                <Col md={4}>\r\n                    <Form>\r\n                        <div className=\"mb-3\">\r\n                            <Form.Check\r\n                                inline\r\n                                type={\"radio\"}\r\n                                label={`Sakawi Ninh Thuận`}\r\n                                checked={areaType === \"NinhThuan\"}\r\n                                onChange={() => { setAreaType('NinhThuan') }}\r\n                            />\r\n                            <Form.Check\r\n                                inline\r\n                                type={\"radio\"}\r\n                                label={`Sakawi Bình Thuận`}\r\n                                checked={areaType === \"BinhThuan\"}\r\n                                onChange={() => { setAreaType('BinhThuan') }}\r\n                            />\r\n                        </div>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col sm={12} md={12} lg={12}>\r\n                    {nextEvents.map((item, index) =>\r\n                        <CountDownBar key={index} eventType={item.eventType} eventDate={item.eventDate} />\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n            {\r\n                matrixSakawi.length > 0 &&\r\n                <Row>\r\n                    <MonthCalendar\r\n                        matrixSakawi={matrixSakawi}\r\n                        fullSakawi={fullSakawi}\r\n                    />\r\n                </Row>\r\n            }\r\n            {/*{\r\n                <Row>\r\n                    <YearCalendar\r\n                        matrixSakawi={matrixSakawi}\r\n                        fullSakawi={fullSakawi}\r\n                    />\r\n                </Row>\r\n            }*/}\r\n            {/* {\r\n                matrixSakawi.length > 0 &&\r\n                <Row>\r\n                    <EventCalendar\r\n                        matrixSakawi={matrixSakawi}\r\n                        fullSakawi={fullSakawi}\r\n                    />\r\n                </Row>\r\n            } */}\r\n        </Container>\r\n    );\r\n}","import { Col, Container, Nav, Navbar, Row } from \"react-bootstrap\";\r\n\r\ninterface LayoutProps {\r\n    children: JSX.Element;\r\n}\r\n\r\nconst footerStyle: React.CSSProperties = {\r\n    background: \"#343A40\",\r\n    color: \"white\",\r\n    padding: \"10px\",\r\n    textAlign: \"center\",\r\n    justifyContent: \"center\"\r\n}\r\n\r\nexport const Layout = (props: LayoutProps) => {\r\n    return (\r\n        <Container fluid>\r\n            {/* Header */}\r\n            <Row>\r\n                <Col style={{ paddingRight: 0, paddingLeft: 0 }}>\r\n                    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n                        <Container>\r\n                            <Navbar.Brand href=\"#home\"><label className=\"logo\">꩜</label><label className=\"branding-text\">SAKAWI</label></Navbar.Brand>\r\n                            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                                <Nav className=\"mr-auto my-2 my-lg-0\"\r\n                                    style={{ maxHeight: '100px' }}\r\n                                    navbarScroll>\r\n                                    <Nav.Link href=\"#\">Lịch tháng</Nav.Link>\r\n                                    <Nav.Link href=\"#\">Lịch sự kiện</Nav.Link>\r\n                                    <Nav.Link href=\"#\">Tiện ích</Nav.Link>\r\n                                </Nav>\r\n                            </Navbar.Collapse>\r\n                        </Container>\r\n                    </Navbar>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n            {/* Body */}\r\n            <Row>\r\n                <Col sm={12} md={12} lg={12}>\r\n                    {props.children}\r\n                </Col>\r\n            </Row>\r\n            {/* Fotter */}\r\n            <Row>\r\n                <Col style={footerStyle}>\r\n                    {`© ${new Date().getFullYear()} Sakawi`}\r\n                    <br />\r\n                    {'Dự án được phát triển bởi '}\r\n                    <a href=\"https://tanginpantangin.com/#!/converter\" target=\"_blank\" rel=\"noreferrer\">Tangin Pan Tangin</a>\r\n                    {' và '}\r\n                    <a href=\"http://shopcham.com\" target=\"_blank\" rel=\"noreferrer\">Shop Cham</a>\r\n                </Col>\r\n            </Row>\r\n        </Container >\r\n    );\r\n}","import React from 'react';\r\n//import logo from './logo.svg';\r\nimport './App.css';\r\nimport { Calendar } from './components/calendar';\r\nimport { Layout } from './Layout';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Layout>\r\n        <Calendar/>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}