{"version":3,"sources":["enums/enum.ts","utility/constant.ts","utility/helper.ts","components/countDownBar.tsx","components/dayDetails.tsx","components/monthNavigation.tsx","components/monthAhier.tsx","components/monthAwal.tsx","components/monthGregory.tsx","components/calendar.tsx","Layout.tsx","App.tsx","index.tsx"],"names":["MonthEnum","DayEnum","IkasSarakEnum","NasakEnum","AwalMonthEnum","AhierMonthEnum","GuecTypeEnum","displayMonthName","month","result","displayNasakName","nasak","displayIkasSarakName","ikasSarak","firstDateOfSakawiAwal_Lieh_1407","Date","firstDateOfSakawiAhier_InaGirai_Lieh_1988","awalYearArray","no","name","Liéh","numberOfDays","Hak","Jim","Jây","Dal","Bak","Waw","JimLuic","awalMonthArray","Muharam","Syafar","Rabiulawal","Rabiulakhir","Jamadilawal","Jamadilakhir","Rejab","Sykban","Ramadan","Syawal","Julkaejah","Julhiijaah","Helper","currentDate","addedDays","getDayNumbersOfAwalMonth","awalMonth","year","newDays","date","newMonth","newYear","currentMonth","addedMonths","quotient","Math","floor","getMod","addAwalYears","currentYear","addedYears","newIkasSarak","yearNumber","yearName","yearItem","sakawiTakaiCiimConfig","filter","x","ArabYear","differenceInDays","getTime","remain","abs","awalYearNumber","awalYear","awalDate","totalYears","i","length","numberDaysOfCurrentYear","totalMonths","j","maxtrixCalendar","getActualDayNumbersOfAhierMonth","ahierMonth","BilanSa","Takuh","addAhierMonths","previousMonth","numberOfMonths","getMonthNumbersOfAhierYear","addAhierYears","previousYear","newNasak","remainNasak","numberOfDay","BilanKlau","BilanLima","BilanTajuh","BilanSalipan","BilanPuis","BilanDua","BilanPak","BilanNem","BilanDalipan","BilanSapluh","BilanMak","BilanBhang","index","findIndex","JSON","stringify","dayNumbersOfAhierMonth","newDt","setDate","getDate","toYearAhier","startAhierYear","InâGirai","numberOfAhierYear","newGregoryDate","y","ahierYear","matrixPerYear","renderMatrixPerYear","validMatrix","applyGuenGuecRules","push","lastMonthItem","addGregoryDays","dateOfGregoryCalendar","firstGregoryDate","addedGregoryDays","numberOfAhierMonth","m","getExpectedDayNumbersOfAhierMonth","firstDayOfAhierMonth","getDay","getAwalDateByGregoryDate","addAwalMonths","ahierMonthItem","dayNumbersOfAwalMonth","firstDayOfAwalMonth","Number","parseInt","getStartDayByAwalMonth","hasGuenRuleInNextYear","monthGuen","monthGuec","hasGuecRuleInNextYear","NoneGuec","element","checkIsGuenToAddDay","newDate","checkIsGuecToMinusDay","lastMonthOfCurrentYear","firstGregoryDateOfNextYear","checkHasGuecRuleInNextYear","checkHasGuenRuleInNextYear","getAhierAwalDaysGap","firstGregoryDateNextYear","nextAhierYear","matrixNextYear","firstMonth","isKateRamawanConflict","some","item","GuecByNormalRule","GuecByHareiButSukRule","GuecByKateRamawanRule","GuecByRijaNagarRule","n","daysGap","latinNumber","ChamDigitArr","EnglishDigits","reg","RegExp","toString","replace","c","indexOf","CountDownBar","props","useState","percent","setPercent","days","setDays","hours","setHours","minutes","setMinutes","seconds","setSeconds","useEffect","setTimeout","toDate","now","distance","init","ProgressBar","variant","variantType","label","dateName","slice","DayDetails","opacityValue","sakawiType","dateAhier","currentAhierMonth","dateAwal","currentAwalMonth","dateGregory","getMonth","currentGregoryMonth","tdStyle","opacity","backgroundColor","toLocaleDateString","GregoryDateStyle","fontSize","color","paddingTop","paddingBottom","textAlign","ahierDateStyle","awalDateStyle","flexDirection","paddingRight","alignSelf","eventStyle","display","paddingLeft","marginBottom","style","Row","Col","md","monthGregogy","getFullYear","displayGregoryDate","minHeight","maxHeight","dayNumbersOfCurrentAhierMonth","getEvents","map","monthAwal","margin","convertToChamDigitUnicode","className","dayNumbersOfCurrentAwalMonth","displayAwalDate","MonthNavigation","ButtonToolbar","justifyContent","ButtonGroup","Button","onClick","onSelectSakawiType","marginRight","onClickToday","onClickPreviousMonth","onClickNextMonth","MonthAhier","initialAhierDate","Pabuei","initialAwalDate","initialGregoryDate","currentAhierMonthMatrix","setCurrentAhierMonthMatrix","firstDateOfAhierMonth","setFirstDateOfAhierMonth","setFirstDayOfAhierMonth","firstDateOfAwalMonth","setFirstDateOfAwalMonth","setFirstDayOfAwalMonth","firstDateOfGregoryMonth","setFirstDateOfGregoryMonth","firstDayOfGregoryMonth","setFirstDayOfGregoryMonth","React","firstAhierDate","firstAwalDate","count","rows","weeks","cells","week","cellAhierDate","addAhierDays","matrixSakawi","cellAwalDate","addAwalDays","GregoryDate","Container","type","Table","bordered","hover","height","tableLayout","d","padding","MonthAwal","currentAwalMonthMatrix","setCurrentAwalMonthMatrix","MonthGregory","currentGregoryMonthMatrix","setCurrentGregoryMonthMatrix","Calendar","initialMatrixCalendarType","showWarning","setShowWarning","setMatrixSakawi","setCurrentAhierMonth","setCurrentAwalMonth","setCurrentGregoryMonth","setSakawiType","matrix","buildMatrixCalendar","console","log","Alert","onClose","dismissible","Heading","footerStyle","background","Layout","fluid","Navbar","bg","expand","Brand","href","Toggle","Collapse","id","Nav","navbarScroll","Link","sm","Card","ListGroup","Item","children","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6037123c.chunk.js","sourcesContent":["export declare type VariantType = 'primary' | 'info' | 'secondary' | 'success' | 'warning' | 'danger' | 'light' | 'link';\r\n\r\nexport enum MonthEnum {\r\n    January = 0,\r\n    February,\r\n    March,\r\n    April,\r\n    May,\r\n    June,\r\n    July,\r\n    August,\r\n    September,\r\n    October,\r\n    November,\r\n    December\r\n}\r\n\r\nexport enum DayEnum {\r\n    Sunday = 0,\r\n    Monday,\r\n    Tuesday,\r\n    Wednesday,\r\n    Thursday,\r\n    Friday,\r\n    Saturday\r\n}\r\n\r\nexport enum IkasSarakEnum {\r\n    Liéh = 0,\r\n    Hak,\r\n    Jim,\r\n    Jây,\r\n    Dal,\r\n    Bak,\r\n    Waw,\r\n    JimLuic\r\n}\r\n\r\nexport enum NasakEnum {\r\n    Takuh = 0,\r\n    Kabaw,\r\n    Rimaong,\r\n    Tapay,\r\n    InâGirai,\r\n    UlaAnaih,\r\n    Asaih,\r\n    Pabaiy,\r\n    Kra,\r\n    Manuk,\r\n    Asau,\r\n    Pabuei\r\n}\r\n\r\nexport enum AwalMonthEnum {\r\n    Muharam = 0,\r\n    Syafar,\r\n    Rabiulawal,\r\n    Rabiulakhir,\r\n    Jamadilawal,\r\n    Jamadilakhir,\r\n    Rejab,\r\n    Sykban,\r\n    Ramadan,\r\n    Syawal,\r\n    Julkaejah,\r\n    Julhiijaah\r\n}\r\n\r\nexport enum AhierMonthEnum {\r\n    BilanSa = 0,\r\n    BilanDua,\r\n    BilanKlau,\r\n    BilanPak,\r\n    BilanLima,\r\n    BilanNem,\r\n    BilanTajuh,\r\n    BilanDalipan,\r\n    BilanSalipan,\r\n    BilanSapluh,\r\n    BilanPuis,\r\n    BilanMak,\r\n    BilanBhang\r\n}\r\n\r\nexport enum GuecTypeEnum {\r\n    NoneGuec = -1,\r\n    GuecByNormalRule,\r\n    GuecByHareiButSukRule,\r\n    GuecByRijaNagarRule,\r\n    GuecByKateRamawanRule,\r\n}\r\n\r\nexport function displayMonthName(month: AhierMonthEnum) {\r\n    let result = '';\r\n\r\n    switch (month) {\r\n        case 0:\r\n            result = 'ꨝꨪꨤꩆ ꨧꨩ';\r\n            break;\r\n        case 1:\r\n            result = 'ꨝꨪꨤꩆ ꨕꨶꨩ';\r\n            break;\r\n        case 2:\r\n            result = 'ꨝꨪꨤꩆ ꨆꨵꨮꨭ';\r\n            break;\r\n        case 3:\r\n            result = 'ꨝꨪꨤꩆ ꨛꨩꩀ';\r\n            break;\r\n        case 4:\r\n            result = 'ꨝꨪꨤꩆ ꨤꨪꨟꨩ';\r\n            break;\r\n        case 5:\r\n            result = 'ꨝꨪꨤꩆ ꨘꩌ';\r\n            break;\r\n        case 6:\r\n            result = 'ꨝꨪꨤꩆ ꨓꨎꨭꩍ';\r\n            break;\r\n        case 7:\r\n            result = 'ꨝꨪꨤꩆ ꨕꨤꨪꨚꩆ';\r\n            break;\r\n        case 8:\r\n            result = 'ꨝꨪꨤꩆ ꨧꨤꨪꨚꩆ';\r\n            break;\r\n        case 9:\r\n            result = 'ꨝꨪꨤꩆ ꨧꨚꨵꨭꩍ';\r\n            break;\r\n        case 10:\r\n            result = 'ꨝꨪꨤꩆ ꨚꨶꨪꩋ';\r\n            break;\r\n        case 11:\r\n            result = 'ꨝꨪꨤꩆ ꨠꩀ';\r\n            break;\r\n        case 12:\r\n            result = 'ꨝꨪꨤꩆ ꨞꩃ';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function displayNasakName(nasak: NasakEnum) {\r\n    let result = '';\r\n\r\n    switch (nasak) {\r\n        case 0:\r\n            result = 'ꨓꨆꨭꩍ';\r\n            break;\r\n        case 1:\r\n            result = 'ꨆꨝꨥ';\r\n            break;\r\n        case 2:\r\n            result = 'ꨣꨪꨟꨯꨱꩃ';\r\n            break;\r\n        case 3:\r\n            result = 'ꨓꨛꩈ';\r\n            break;\r\n        case 4:\r\n            result = 'ꨁꨗꨩ ꨈꨪꨣꩈ';\r\n            break;\r\n        case 5:\r\n            result = 'ꨂꨤꨩ ꨗꨰꩍ';\r\n            break;\r\n        case 6:\r\n            result = 'ꨀꨧꨰꩍ';\r\n            break;\r\n        case 7:\r\n            result = 'ꨚꨝꨰꩈ';\r\n            break;\r\n        case 8:\r\n            result = 'ꨆꨴꨩ';\r\n            break;\r\n        case 9:\r\n            result = 'ꨟꨗꨭꩀ';\r\n            break;\r\n        case 10:\r\n            result = 'ꨀꨧꨮꨭ';\r\n            break;\r\n        case 11:\r\n            result = 'ꨚꨝꨶꨬ';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function displayIkasSarakName(ikasSarak: IkasSarakEnum) {\r\n    let result = '';\r\n\r\n    switch (ikasSarak) {\r\n        case 0:\r\n            result = '1';\r\n            break;\r\n        case 1:\r\n            result = '5';\r\n            break;\r\n        case 2:\r\n            result = '3';\r\n            break;\r\n        case 3:\r\n            result = '7';\r\n            break;\r\n        case 4:\r\n            result = '4';\r\n            break;\r\n        case 5:\r\n            result = '2';\r\n            break;\r\n        case 6:\r\n            result = '6';\r\n            break;\r\n        case 7:\r\n            result = '3';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n","import { AwalMonthEnum, IkasSarakEnum } from \"../enums/enum\";\r\n\r\nexport const firstDateOfSakawiAwal_Lieh_1407 = new Date(1986, 8, 5);//05/09/1986\r\nexport const yearNumberOfSakawiAwal_Lieh_1407 = 1407;\r\nexport const firstDateOfSakawiAhier_InaGirai_Lieh_1988 = new Date(1988, 3, 16);//16/04/1988\r\nexport const totalDaysOf8AwalYearCycle = 2835;\r\n\r\nexport const awalYearArray: { no: number; name: IkasSarakEnum; numberOfDays: number }[] = [\r\n    { no: 1, name: IkasSarakEnum.Liéh, numberOfDays: 354 },\r\n    { no: 2, name: IkasSarakEnum.Hak, numberOfDays: 355 },\r\n    { no: 3, name: IkasSarakEnum.Jim, numberOfDays: 354 },\r\n    { no: 4, name: IkasSarakEnum.Jây, numberOfDays: 354 },\r\n    { no: 5, name: IkasSarakEnum.Dal, numberOfDays: 355 },\r\n    { no: 6, name: IkasSarakEnum.Bak, numberOfDays: 354 },\r\n    { no: 7, name: IkasSarakEnum.Waw, numberOfDays: 354 },\r\n    { no: 8, name: IkasSarakEnum.JimLuic, numberOfDays: 355 }\r\n];\r\n\r\nexport const awalMonthArray: { no: number; name: AwalMonthEnum; numberOfDays: number }[] = [\r\n    { no: 1, name: AwalMonthEnum.Muharam, numberOfDays: 30 },\r\n    { no: 2, name: AwalMonthEnum.Syafar, numberOfDays: 29 },\r\n    { no: 3, name: AwalMonthEnum.Rabiulawal, numberOfDays: 30 },\r\n    { no: 4, name: AwalMonthEnum.Rabiulakhir, numberOfDays: 29 },\r\n    { no: 5, name: AwalMonthEnum.Jamadilawal, numberOfDays: 30 },\r\n    { no: 6, name: AwalMonthEnum.Jamadilakhir, numberOfDays: 29 },\r\n    { no: 7, name: AwalMonthEnum.Rejab, numberOfDays: 30 },\r\n    { no: 8, name: AwalMonthEnum.Sykban, numberOfDays: 29 },\r\n    { no: 9, name: AwalMonthEnum.Ramadan, numberOfDays: 30 },\r\n    { no: 10, name: AwalMonthEnum.Syawal, numberOfDays: 29 },\r\n    { no: 11, name: AwalMonthEnum.Julkaejah, numberOfDays: 30 },\r\n    { no: 12, name: AwalMonthEnum.Julhiijaah, numberOfDays: 30 }\r\n]","import sakawiTakaiCiimConfig from '../data/SakawiTakaiCiim.json';\r\nimport { AhierMonthEnum, AwalMonthEnum, GuecTypeEnum, IkasSarakEnum, NasakEnum } from \"../enums/enum\";\r\nimport { AhierDate, AhierMonth, AhierYear } from \"../model/AhierDate\";\r\nimport { AwalDate, AwalMonth, AwalYear } from '../model/AwalDate';\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport { awalMonthArray, awalYearArray, firstDateOfSakawiAhier_InaGirai_Lieh_1988, firstDateOfSakawiAwal_Lieh_1407, totalDaysOf8AwalYearCycle, yearNumberOfSakawiAwal_Lieh_1407 } from './constant';\r\n\r\nexport default class Helper {\r\n    //#region Awal\r\n    static addAwalDays(currentDate: AwalDate, addedDays: number) {\r\n        let numberOfDays = Helper.getDayNumbersOfAwalMonth(currentDate.awalMonth.year, currentDate.awalMonth.month);\r\n        let newDays = currentDate.date + addedDays;\r\n        let newMonth = currentDate.awalMonth.month;\r\n        let newYear = currentDate.awalMonth.year;\r\n\r\n        let result: AwalDate = {\r\n            date: 1,\r\n            awalMonth: {\r\n                month: AwalMonthEnum.Jamadilakhir,\r\n                year: { ikasSarak: IkasSarakEnum.Liéh }\r\n            }\r\n        };\r\n\r\n        if (newDays > numberOfDays) {\r\n            if (currentDate.awalMonth.month < 11) {\r\n                newMonth = currentDate.awalMonth.month + 1;\r\n            } else {\r\n                newMonth = 0;\r\n\r\n                if (currentDate.awalMonth.year.ikasSarak < 7) {\r\n                    newYear.ikasSarak = currentDate.awalMonth.year.ikasSarak + 1;\r\n                } else {\r\n                    newYear.ikasSarak = 0;\r\n                }\r\n            }\r\n\r\n            result = {\r\n                date: newDays - numberOfDays,\r\n                awalMonth: { month: newMonth, year: newYear }\r\n            };\r\n\r\n        } else if (newDays <= 0) {\r\n            if (currentDate.awalMonth.month > 0) {\r\n                newMonth = currentDate.awalMonth.month - 1;\r\n            } else {\r\n                newMonth = 11;\r\n\r\n                if (currentDate.awalMonth.year.ikasSarak > 0) {\r\n                    newYear.ikasSarak = currentDate.awalMonth.year.ikasSarak - 1;\r\n                } else {\r\n                    newYear.ikasSarak = 7;\r\n                }\r\n            }\r\n\r\n            result = {\r\n                date: Helper.getDayNumbersOfAwalMonth(currentDate.awalMonth.year, currentDate.awalMonth.month - 1) + newDays,\r\n                awalMonth: { month: newMonth, year: newYear }\r\n            };\r\n        }\r\n        else {\r\n            result = {\r\n                date: newDays,\r\n                awalMonth: currentDate.awalMonth\r\n            };\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static addAwalMonths(currentMonth: AwalMonth, addedMonths: number) {\r\n        let newMonth = currentMonth.month + addedMonths;\r\n        let quotient = Math.floor(newMonth / 12);\r\n        let remain = Helper.getMod(newMonth, 12);\r\n\r\n        let result: AwalMonth = {\r\n            month: remain,\r\n            year: Helper.addAwalYears(currentMonth.year, quotient)\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static addAwalYears(currentYear: AwalYear, addedYears: number) {\r\n        let newIkasSarak = currentYear.ikasSarak + addedYears;\r\n        let remain = Helper.getMod(newIkasSarak, 8);\r\n        let newYearNumber = (currentYear.yearNumber ?? 0) + addedYears;\r\n\r\n        let result: AwalYear = {\r\n            ikasSarak: remain,\r\n            yearNumber: newYearNumber\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static getDayNumbersOfAwalMonth(year: AwalYear, month: AwalMonthEnum) {\r\n        let numberOfDay = 0;\r\n\r\n        if (month === AwalMonthEnum.Muharam || month === AwalMonthEnum.Rabiulawal || month === AwalMonthEnum.Jamadilawal ||\r\n            month === AwalMonthEnum.Rejab || month === AwalMonthEnum.Ramadan || month === AwalMonthEnum.Julkaejah) {\r\n            // Tháng lẻ: (30 ngày), gồm: 1,3,5,7,9,11.\r\n            numberOfDay = 30;\r\n        } else if (month === AwalMonthEnum.Syafar || month === AwalMonthEnum.Rabiulakhir || month === AwalMonthEnum.Jamadilakhir ||\r\n            month === AwalMonthEnum.Sykban || month === AwalMonthEnum.Syawal) {\r\n            // Tháng chẳn: (29 ngày), gồm: 2,4,6,8,10. \r\n            numberOfDay = 29;\r\n        } else {\r\n            // Riêng tháng 12: \r\n            if (year.ikasSarak === IkasSarakEnum.Hak || year.ikasSarak === IkasSarakEnum.Dal || year.ikasSarak === IkasSarakEnum.JimLuic) {\r\n                // năm nhuận (thun \"Nâh\": Hak, Dal, Jim luic): 30 ngày\r\n                numberOfDay = 30;\r\n            } else {\r\n                // năm thường (thun \"Wak\"): 29 ngày\r\n                numberOfDay = 29;\r\n            }\r\n        }\r\n\r\n        return numberOfDay;\r\n    }\r\n\r\n    static getStartDayByAwalMonth(year: AwalYear, month: AwalMonthEnum) {\r\n        let yearName = IkasSarakEnum[year.ikasSarak];\r\n        let yearItem = sakawiTakaiCiimConfig.filter(x => x.ArabYear === yearName)[0];\r\n        let result = '';\r\n\r\n        switch (month) {\r\n            case 0:\r\n                result = yearItem['Month_01'];\r\n                break;\r\n            case 1:\r\n                result = yearItem['Month_02'];\r\n                break;\r\n            case 2:\r\n                result = yearItem['Month_03'];\r\n                break;\r\n            case 3:\r\n                result = yearItem['Month_04'];\r\n                break;\r\n            case 4:\r\n                result = yearItem['Month_05'];\r\n                break;\r\n            case 5:\r\n                result = yearItem['Month_06'];\r\n                break;\r\n            case 6:\r\n                result = yearItem['Month_07'];\r\n                break;\r\n            case 7:\r\n                result = yearItem['Month_08'];\r\n                break;\r\n            case 8:\r\n                result = yearItem['Month_09'];\r\n                break;\r\n            case 9:\r\n                result = yearItem['Month_10'];\r\n                break;\r\n            case 10:\r\n                result = yearItem['Month_11'];\r\n                break;\r\n            case 11:\r\n                result = yearItem['Month_12'];\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static getAwalDateByGregoryDate(date: Date) {\r\n        let differenceInTime = date.getTime() - firstDateOfSakawiAwal_Lieh_1407.getTime();\r\n        let differenceInDays = differenceInTime / (1000 * 3600 * 24);\r\n        let remain = Helper.getMod(differenceInDays, totalDaysOf8AwalYearCycle);\r\n        let quotient = Math.floor(Math.abs(differenceInDays) / totalDaysOf8AwalYearCycle);\r\n\r\n        let awalYearNumber = yearNumberOfSakawiAwal_Lieh_1407;\r\n        let awalYear = IkasSarakEnum.Liéh;\r\n        let awalMonth = AwalMonthEnum.Muharam;\r\n        let awalDate = 0;\r\n        let totalYears = 0;\r\n        for (let i = 0; i < awalYearArray.length; i++) {\r\n            totalYears += awalYearArray[i].numberOfDays;\r\n            if (remain < totalYears) {\r\n                awalYear = awalYearArray[i].name;\r\n\r\n                if (differenceInDays > 0) {\r\n                    awalYearNumber += (quotient * 8) + i;\r\n                } else {\r\n                    awalYearNumber -= (quotient * 8) + i;\r\n                }\r\n\r\n                let numberDaysOfCurrentYear = remain - (totalYears - awalYearArray[i].numberOfDays);\r\n                let totalMonths = 0;\r\n\r\n                for (let j = 0; j < awalMonthArray.length; j++) {\r\n                    totalMonths += awalMonthArray[j].numberOfDays;\r\n                    if (numberDaysOfCurrentYear < totalMonths) {\r\n                        awalMonth = awalMonthArray[j].name;\r\n                        let numberDaysOfCurrentMonth = numberDaysOfCurrentYear - (totalMonths - awalMonthArray[j].numberOfDays);\r\n                        awalDate = numberDaysOfCurrentMonth + 1;\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        let resultDate: AwalDate = {\r\n            date: awalDate,\r\n            awalMonth: { month: awalMonth, year: { ikasSarak: awalYear, yearNumber: awalYearNumber } }\r\n        }\r\n\r\n        return resultDate;\r\n    }\r\n    //#endregion\r\n\r\n    //#region Ahier\r\n    static addAhierDays(maxtrixCalendar: MatrixCalendarType[], currentDate: AhierDate, addedDays: number) {\r\n        const numberOfDays = Helper.getActualDayNumbersOfAhierMonth(maxtrixCalendar, currentDate.ahierMonth);\r\n        const newDays = currentDate.date + addedDays;\r\n\r\n        let result: AhierDate = {\r\n            date: 1,\r\n            ahierMonth: {\r\n                month: AhierMonthEnum.BilanSa,\r\n                year: { nasak: NasakEnum.Takuh, ikasSarak: IkasSarakEnum.Liéh }\r\n            }\r\n        };\r\n\r\n        if (newDays > numberOfDays) {\r\n            const nextMonth = Helper.addAhierMonths(currentDate.ahierMonth, 1);\r\n            result = {\r\n                date: newDays - numberOfDays,\r\n                ahierMonth: nextMonth\r\n            };\r\n        } else if (newDays <= 0) {\r\n            const previousMonth = Helper.addAhierMonths(currentDate.ahierMonth, -1);\r\n            const dayNumberOfPreviousMonth = Helper.getActualDayNumbersOfAhierMonth(maxtrixCalendar, previousMonth);\r\n            result = {\r\n                date: dayNumberOfPreviousMonth + newDays,\r\n                ahierMonth: previousMonth\r\n            };\r\n        }\r\n        else {\r\n            result = {\r\n                date: newDays,\r\n                ahierMonth: currentDate.ahierMonth\r\n            };\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static addAhierMonths(currentMonth: AhierMonth, addedMonths: number) {\r\n        const numberOfMonths = Helper.getMonthNumbersOfAhierYear(currentMonth.year);\r\n        const newMonth = currentMonth.month + addedMonths;\r\n        let result: AhierMonth = {\r\n            month: currentMonth.month,\r\n            year: currentMonth.year\r\n        }\r\n\r\n        if (newMonth > numberOfMonths - 1) {\r\n            const nextYear = Helper.addAhierYears(currentMonth.year, 1);\r\n            result = {\r\n                month: newMonth - numberOfMonths,\r\n                year: nextYear\r\n            }\r\n        } else if (newMonth < 0) {\r\n            const previousYear = Helper.addAhierYears(currentMonth.year, -1);\r\n            const numberOfMonthsOfPreviousYear = Helper.getMonthNumbersOfAhierYear(previousYear);\r\n\r\n            result = {\r\n                month: numberOfMonthsOfPreviousYear + newMonth,\r\n                year: previousYear\r\n            }\r\n        } else {\r\n            result = {\r\n                month: newMonth,\r\n                year: currentMonth.year\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static addAhierYears(currentYear: AhierYear, addedYears: number) {\r\n        let newNasak = (currentYear.nasak + addedYears) % 12;\r\n        let remainNasak = Helper.getMod(newNasak, 12);\r\n\r\n        let newIkasSarak = (currentYear.ikasSarak + addedYears) % 8;\r\n        let remainIkasSarak = Helper.getMod(newIkasSarak, 8);\r\n\r\n        let newYearNumber = (currentYear.yearNumber ?? 0) + addedYears;\r\n\r\n        let result: AhierYear = {\r\n            nasak: remainNasak,\r\n            ikasSarak: remainIkasSarak,\r\n            yearNumber: newYearNumber\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static getExpectedDayNumbersOfAhierMonth(year: AhierYear, month: AhierMonthEnum) {\r\n        let numberOfDay = 0;\r\n        if (month === AhierMonthEnum.BilanSa || month === AhierMonthEnum.BilanKlau || month === AhierMonthEnum.BilanLima ||\r\n            month === AhierMonthEnum.BilanTajuh || month === AhierMonthEnum.BilanSalipan || month === AhierMonthEnum.BilanPuis) {\r\n            // Tháng lẻ - \"bilan tapak\": (30 ngày), gồm: 1,3,5,7,9,11.\r\n            numberOfDay = 30;\r\n        } else if (month === AhierMonthEnum.BilanDua || month === AhierMonthEnum.BilanPak || month === AhierMonthEnum.BilanNem ||\r\n            month === AhierMonthEnum.BilanDalipan || month === AhierMonthEnum.BilanSapluh) {\r\n            // Tháng chẳn - \"bilan u\" : (29 ngày), gồm: 2,4,6,8,10. \r\n            numberOfDay = 29;\r\n        } else if (month === AhierMonthEnum.BilanMak) {\r\n            // Tháng 12:  \r\n            if (year.ikasSarak === IkasSarakEnum.Hak || year.ikasSarak === IkasSarakEnum.Dal || year.ikasSarak === IkasSarakEnum.JimLuic) {\r\n                // năm nhuận (thun \"Nâh\": Hak, Dal, Jim luic): 30 ngày\r\n                numberOfDay = 30;\r\n            } else {\r\n                // năm thường (thun \"Wak\"): 29 ngày\r\n                numberOfDay = 29;\r\n            }\r\n        } else if (month === AhierMonthEnum.BilanBhang) {\r\n            if (year.ikasSarak === IkasSarakEnum.Hak || year.ikasSarak === IkasSarakEnum.Dal || year.ikasSarak === IkasSarakEnum.JimLuic) {\r\n                // năm nhuận (thun \"Nâh\": Hak, Dal, Jim luic): 29 ngày\r\n                numberOfDay = 29;\r\n            }\r\n        }\r\n\r\n        return numberOfDay;\r\n    }\r\n\r\n    static getActualDayNumbersOfAhierMonth(maxtrixCalendar: MatrixCalendarType[], ahierMonth: AhierMonth) {\r\n        const index = maxtrixCalendar.findIndex(x => JSON.stringify(x.ahierMonth) === JSON.stringify(ahierMonth));\r\n        if (index !== -1) {\r\n            return maxtrixCalendar[index].dayNumbersOfAhierMonth;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    static getMonthNumbersOfAhierYear(year: AhierYear) {\r\n        if (year.ikasSarak === IkasSarakEnum.Hak\r\n            || year.ikasSarak === IkasSarakEnum.Dal\r\n            || year.ikasSarak === IkasSarakEnum.JimLuic) {\r\n            return 13;\r\n        }\r\n        return 12;\r\n    }\r\n    //#endregion\r\n\r\n    //#region Gregory\r\n    static addGregoryDays(date: Date, numberOfDays: number) {\r\n        let newDt = new Date(date);\r\n        newDt.setDate(date.getDate() + numberOfDays);\r\n        return newDt;\r\n    }\r\n    //#endregion\r\n\r\n    static buildMatrixCalendar(toYearAhier: number) {\r\n        let result: MatrixCalendarType[] = [];\r\n\r\n        // Choose thun 1988 as a root\r\n        const startAhierYear: AhierYear = {\r\n            nasak: NasakEnum.InâGirai,\r\n            ikasSarak: IkasSarakEnum.Liéh,\r\n            yearNumber: 1988\r\n        }\r\n\r\n        const numberOfAhierYear = toYearAhier - (startAhierYear.yearNumber ?? 0);\r\n        let newGregoryDate = firstDateOfSakawiAhier_InaGirai_Lieh_1988;\r\n\r\n        for (let y = 0; y < numberOfAhierYear; y++) {\r\n            const ahierYear = Helper.addAhierYears(startAhierYear, y);\r\n            const matrixPerYear = Helper.renderMatrixPerYear(ahierYear, newGregoryDate);\r\n            const validMatrix = Helper.applyGuenGuecRules(matrixPerYear);\r\n\r\n            // Check guen-guec rules\r\n            result.push(...validMatrix);\r\n\r\n            const lastMonthItem = validMatrix[validMatrix.length - 1];\r\n            newGregoryDate = Helper.addGregoryDays(lastMonthItem.dateOfGregoryCalendar, lastMonthItem.dayNumbersOfAhierMonth);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static renderMatrixPerYear(ahierYear: AhierYear, firstGregoryDate: Date) {\r\n        let matrixPerYear: MatrixCalendarType[] = [];\r\n        let newGregoryDate = firstGregoryDate;\r\n        let addedGregoryDays = 0;\r\n        const numberOfAhierMonth = Helper.getMonthNumbersOfAhierYear(ahierYear);\r\n\r\n        for (let m = 0; m < numberOfAhierMonth; m++) {\r\n            const ahierMonth: AhierMonth = { month: m, year: ahierYear };\r\n            const dayNumbersOfAhierMonth = Helper.getExpectedDayNumbersOfAhierMonth(ahierYear, m);\r\n            const firstDayOfAhierMonth = newGregoryDate.getDay();\r\n\r\n            const awalDate = Helper.getAwalDateByGregoryDate(newGregoryDate);\r\n            const awalMonth = Helper.addAwalMonths(awalDate.awalMonth, 1);\r\n            const dayNumbersOfAwalMonth = Helper.getDayNumbersOfAwalMonth(awalMonth.year, awalMonth.month);\r\n            const firstDayOfAwalMonth = Number.parseInt(Helper.getStartDayByAwalMonth(awalMonth.year, awalMonth.month)) - 1; // Sunday is 0 \r\n\r\n            let ahierMonthItem: MatrixCalendarType = {\r\n                ahierMonth: ahierMonth,\r\n                dayNumbersOfAhierMonth: dayNumbersOfAhierMonth,\r\n                firstDayOfAhierMonth: firstDayOfAhierMonth,\r\n                dateOfGregoryCalendar: newGregoryDate,\r\n                awalMonth: awalMonth,\r\n                dayNumbersOfAwalMonth: dayNumbersOfAwalMonth,\r\n                firstDayOfAwalMonth: firstDayOfAwalMonth\r\n            }\r\n\r\n            matrixPerYear.push(ahierMonthItem);\r\n\r\n            addedGregoryDays += dayNumbersOfAhierMonth;\r\n            newGregoryDate = Helper.addGregoryDays(firstGregoryDate, addedGregoryDays);\r\n        }\r\n\r\n        return matrixPerYear;\r\n    }\r\n\r\n    static applyGuenGuecRules(matrixPerYear: MatrixCalendarType[]) {\r\n        let monthGuen = -1;\r\n        let monthGuec = -1;\r\n        let hasGuecRuleInNextYear = GuecTypeEnum.NoneGuec;\r\n        let hasGuenRuleInNextYear = false;\r\n\r\n        // Check validations and fix in current year\r\n        for (let index = 0; index < matrixPerYear.length; index++) {\r\n            const element = matrixPerYear[index];\r\n\r\n            // Guen\r\n            if (monthGuen === -1 && Helper.checkIsGuenToAddDay(element.firstDayOfAhierMonth, element.firstDayOfAwalMonth)) {\r\n                monthGuen = index;\r\n                matrixPerYear[monthGuen - 1].dayNumbersOfAhierMonth += 1;\r\n            }\r\n\r\n            if (monthGuen !== -1 && index >= monthGuen) {\r\n                const newDate = Helper.addGregoryDays(matrixPerYear[index].dateOfGregoryCalendar, 1);\r\n                matrixPerYear[index].dateOfGregoryCalendar = newDate;\r\n                matrixPerYear[index].firstDayOfAhierMonth = newDate.getDay();\r\n            }\r\n\r\n            // Guec\r\n            if (monthGuec === -1 && Helper.checkIsGuecToMinusDay(element.firstDayOfAhierMonth, element.firstDayOfAwalMonth)) {\r\n                monthGuec = index;\r\n                matrixPerYear[monthGuec - 1].dayNumbersOfAhierMonth -= 1;\r\n            }\r\n\r\n            if (monthGuec !== -1 && index >= monthGuec) {\r\n                const newDate = Helper.addGregoryDays(matrixPerYear[index].dateOfGregoryCalendar, -1);\r\n                matrixPerYear[index].dateOfGregoryCalendar = newDate;\r\n                matrixPerYear[index].firstDayOfAhierMonth = newDate.getDay();\r\n            }\r\n        }\r\n\r\n        // Check validations in next year to fix current year\r\n        const lastMonthOfCurrentYear = matrixPerYear[matrixPerYear.length - 1];\r\n        const firstGregoryDateOfNextYear = Helper.addGregoryDays(lastMonthOfCurrentYear.dateOfGregoryCalendar, lastMonthOfCurrentYear.dayNumbersOfAhierMonth);\r\n        hasGuecRuleInNextYear = Helper.checkHasGuecRuleInNextYear(lastMonthOfCurrentYear.ahierMonth.year, firstGregoryDateOfNextYear);\r\n        hasGuenRuleInNextYear = Helper.checkHasGuenRuleInNextYear(lastMonthOfCurrentYear.ahierMonth.year, firstGregoryDateOfNextYear);\r\n\r\n        if (hasGuecRuleInNextYear !== GuecTypeEnum.NoneGuec) {\r\n            // Bilan Mak (12)\r\n            matrixPerYear[11].dayNumbersOfAhierMonth -= 1;\r\n\r\n            // Bilan Bhang (13)\r\n            const newDate = Helper.addGregoryDays(matrixPerYear[12].dateOfGregoryCalendar, -1);\r\n            matrixPerYear[12].dateOfGregoryCalendar = newDate;\r\n            matrixPerYear[12].firstDayOfAhierMonth = newDate.getDay();\r\n        } else if (hasGuenRuleInNextYear) {\r\n            // Bilan (12) or (13)\r\n            if (Helper.getAhierAwalDaysGap(lastMonthOfCurrentYear.firstDayOfAhierMonth, lastMonthOfCurrentYear.firstDayOfAwalMonth) === 2) {\r\n                lastMonthOfCurrentYear.dayNumbersOfAhierMonth += 1;\r\n            }\r\n        }\r\n\r\n        //TODO\r\n        return [...matrixPerYear];\r\n    }\r\n\r\n    static checkIsGuenToAddDay(firstDayOfAhierMonth: number, firstDayOfAwalMonth: number) {\r\n        const daysGap = Helper.getAhierAwalDaysGap(firstDayOfAhierMonth, firstDayOfAwalMonth);\r\n        return daysGap > 2;\r\n    }\r\n\r\n    static checkIsGuecToMinusDay(firstDayOfAhierMonth: number, firstDayOfAwalMonth: number) {\r\n        return firstDayOfAhierMonth === firstDayOfAwalMonth;\r\n    }\r\n\r\n    static checkHasGuecRuleInNextYear(currentYear: AhierYear, firstGregoryDateNextYear: Date) {\r\n        let result = GuecTypeEnum.NoneGuec;\r\n\r\n        const nextAhierYear = Helper.addAhierYears(currentYear, 1);\r\n        const matrixNextYear = Helper.renderMatrixPerYear(nextAhierYear, firstGregoryDateNextYear);\r\n        const firstMonth = matrixNextYear[0];\r\n        const isKateRamawanConflict = matrixNextYear.some(x =>\r\n            x.ahierMonth.month === AhierMonthEnum.BilanTajuh &&\r\n            x.awalMonth.month === AwalMonthEnum.Ramadan &&\r\n            Helper.getAhierAwalDaysGap(x.firstDayOfAhierMonth, x.firstDayOfAwalMonth) === 1);\r\n        const hasNormalGuec = matrixNextYear.some(item => Helper.checkIsGuecToMinusDay(item.firstDayOfAhierMonth, item.firstDayOfAwalMonth));\r\n\r\n        if (hasNormalGuec) {\r\n            result = GuecTypeEnum.GuecByNormalRule;\r\n        } else if (nextAhierYear.ikasSarak === IkasSarakEnum.Liéh) {\r\n            if (firstMonth.firstDayOfAhierMonth === 4 && firstMonth.firstDayOfAwalMonth === 5) {\r\n                result = GuecTypeEnum.GuecByHareiButSukRule;\r\n            } else if (isKateRamawanConflict) {\r\n                result = GuecTypeEnum.GuecByKateRamawanRule;\r\n            }\r\n        } else if (firstMonth.firstDayOfAhierMonth === 5 && firstMonth.firstDayOfAwalMonth === 6) {\r\n            result = GuecTypeEnum.GuecByRijaNagarRule;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static checkHasGuenRuleInNextYear(currentYear: AhierYear, firstGregoryDateNextYear: Date) {\r\n        const nextAhierYear = Helper.addAhierYears(currentYear, 1);\r\n        const matrixNextYear = Helper.renderMatrixPerYear(nextAhierYear, firstGregoryDateNextYear);\r\n\r\n        return matrixNextYear.some(item => Helper.checkIsGuenToAddDay(item.firstDayOfAhierMonth, item.firstDayOfAwalMonth));\r\n    }\r\n\r\n    static getMod(n: number, m: number) {\r\n        const remain = n % m;\r\n        return Math.floor(remain >= 0 ? remain : remain + m);\r\n    };\r\n\r\n    static getAhierAwalDaysGap(firstDayOfAhierMonth: number, firstDayOfAwalMonth: number) {\r\n        let daysGap = 0;\r\n\r\n        if (firstDayOfAhierMonth < firstDayOfAwalMonth) {\r\n            daysGap = firstDayOfAwalMonth - firstDayOfAhierMonth;\r\n        } else if (firstDayOfAhierMonth > firstDayOfAwalMonth) {\r\n            daysGap = firstDayOfAwalMonth + (6 - firstDayOfAhierMonth) + 1; // Sunday is 0\r\n        }\r\n\r\n        return daysGap;\r\n    }\r\n\r\n    static convertToChamDigitUnicode(latinNumber: number) {\r\n        const ChamDigitArr = ['꩐', '꩑', '꩒', '꩓', '꩔', '꩕', '꩖', '꩗', '꩘', '꩙'];\r\n        const EnglishDigits = '0123456789';\r\n        const reg = new RegExp('[' + EnglishDigits + ']', 'g');\r\n\r\n        return latinNumber.toString().replace(reg, function (c) {\r\n            return ChamDigitArr[EnglishDigits.indexOf(c)]\r\n        });\r\n    }\r\n}","import { useEffect, useState } from \"react\";\r\nimport { ProgressBar } from \"react-bootstrap\";\r\nimport { VariantType } from \"../enums/enum\";\r\n\r\nexport interface CountDownBarProps {\r\n    dateName: string;\r\n    variantType: VariantType;\r\n    toDate: Date;\r\n}\r\n\r\nexport const CountDownBar = (props: CountDownBarProps) => {\r\n    const [percent, setPercent] = useState(100);\r\n    const [days, setDays] = useState(0);\r\n    const [hours, setHours] = useState(0);\r\n    const [minutes, setMinutes] = useState(0);\r\n    const [seconds, setSeconds] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            init();\r\n        }, 1000);\r\n    });\r\n\r\n    function init() {\r\n        if (!props.toDate) {\r\n            return;\r\n        }\r\n\r\n        const now = new Date().getTime();\r\n        const distance = props.toDate.getTime() - now;\r\n        const timeOfYear = 365 * 24 * 60 * 60 * 1000;\r\n        const percent = distance / timeOfYear * 100;\r\n        setPercent(percent);\r\n\r\n        // Time calculations for days, hours, minutes and seconds\r\n        const days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n        const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n        const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n        const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n        setDays(days);\r\n        setHours(hours);\r\n        setMinutes(minutes);\r\n        setSeconds(seconds);\r\n    }\r\n\r\n    return (\r\n        <ProgressBar variant={props.variantType.toString()} now={percent}\r\n            label={`${props.dateName}: còn ${days} ngày - ${(\"0\" + hours).slice(-2)}h${(\"0\" + minutes).slice(-2)}'${(\"0\" + seconds).slice(-2)}\"`} />\r\n    );\r\n}","import { Col, Row } from \"react-bootstrap\";\r\nimport { AwalMonthEnum, displayIkasSarakName } from \"../enums/enum\";\r\nimport { AhierDate, AhierMonth } from \"../model/AhierDate\";\r\nimport { AwalDate, AwalMonth } from \"../model/AwalDate\";\r\nimport Helper from \"../utility/helper\";\r\nimport { SakawiType } from \"./calendar\";\r\n\r\ninterface DayDetailsProps {\r\n    sakawiType: SakawiType;\r\n    dateGregory: Date;\r\n    dateAwal: AwalDate;\r\n    dateAhier: AhierDate;\r\n    currentAhierMonth?: AhierMonth;\r\n    currentAwalMonth?: AwalMonth;\r\n    currentGregoryMonth?: number;\r\n    dayNumbersOfCurrentAhierMonth: number;\r\n    dayNumbersOfCurrentAwalMonth: number;\r\n}\r\n\r\nexport const DayDetails = (props: DayDetailsProps) => {\r\n    let opacityValue = 1;\r\n    if (props.sakawiType === \"sakawiAhier\") {\r\n        if (props.dateAhier.ahierMonth !== props.currentAhierMonth) {\r\n            opacityValue = 0.3;\r\n        }\r\n    } else if (props.sakawiType === \"sakawiAwal\") {\r\n        if (props.dateAwal.awalMonth !== props.currentAwalMonth) {\r\n            opacityValue = 0.3;\r\n        }\r\n    } else if (props.sakawiType === \"sakawiGregory\") {\r\n        if (props.dateGregory.getMonth() !== props.currentGregoryMonth) {\r\n            opacityValue = 0.3;\r\n        }\r\n    } else {\r\n        //TODO: sakawiGregory\r\n        opacityValue = 1;\r\n    }\r\n\r\n    const tdStyle: React.CSSProperties = {\r\n        opacity: opacityValue,\r\n        backgroundColor: (props.dateGregory.toLocaleDateString() === new Date().toLocaleDateString()) ? '#FFEFBF' : ''\r\n    }\r\n\r\n    const GregoryDateStyle: React.CSSProperties = {\r\n        fontSize: props.sakawiType === \"sakawiGregory\" ? \"1.3rem\" : \"0.8rem\",\r\n        color: \"black\",\r\n        paddingTop: \"0.1rem\",\r\n        paddingBottom: \"0.1rem\",\r\n        textAlign: \"right\"\r\n    }\r\n\r\n    const ahierDateStyle: React.CSSProperties = {\r\n        fontSize: props.sakawiType === \"sakawiAhier\" ? \"1.5rem\" : \"1rem\",\r\n        color: \"#F15A25\",\r\n        paddingTop: \"2rem\",\r\n        paddingBottom: \"0.1rem\",\r\n        textAlign: \"right\"\r\n    }\r\n\r\n    const awalDateStyle: React.CSSProperties = {\r\n        flexDirection: \"row\",\r\n        fontSize: props.sakawiType === \"sakawiAwal\" ? \"1.5rem\" : \"1rem\",\r\n        color: \"#007A3D\",\r\n        paddingTop: \"2rem\",\r\n        paddingBottom: \"0.3rem\",\r\n        paddingRight: \"0.3rem\",\r\n        alignSelf: \"end\"\r\n    }\r\n\r\n    const eventStyle: React.CSSProperties = {\r\n        display: \"block\",\r\n        fontSize: \"0.8rem\",\r\n        color: \"white\",\r\n        backgroundColor: \"#3788d8\",\r\n        paddingLeft: \"0.3rem\",\r\n        textAlign: \"left\",\r\n        marginBottom: \"0.1rem\",\r\n    }\r\n\r\n    function displayGregoryDate(sakawiType: SakawiType, dateAhier: AhierDate, dateAwal: AwalDate, dateGregory: Date) {\r\n        const monthGregogy = dateGregory.getMonth() + 1;\r\n\r\n        if (dateGregory.getDate() === 1 ||\r\n            (sakawiType === \"sakawiAwal\" && dateAwal.date === 1) ||\r\n            (sakawiType === \"sakawiAhier\" && dateAhier.date === 1)) {\r\n            return dateGregory.getDate() + \".\" + monthGregogy + \".\" + dateGregory.getFullYear();\r\n        } else {\r\n            return dateGregory.getDate();\r\n        }\r\n    }\r\n\r\n    function displayAhierDate(dateAhier: AhierDate) {\r\n        const bingun = 'ꩃ';\r\n        const klem = 'ꩌ';\r\n\r\n        if (props.dayNumbersOfCurrentAhierMonth === 30) {\r\n            if (dateAhier.date <= 15) {\r\n                return Helper.convertToChamDigitUnicode(dateAhier.date) + bingun;\r\n            } else {\r\n                return Helper.convertToChamDigitUnicode(dateAhier.date - 15) + klem;\r\n            }\r\n        } else {\r\n            if (dateAhier.date <= 14) {\r\n                if (dateAhier.date <= 5) {\r\n                    return Helper.convertToChamDigitUnicode(dateAhier.date) + bingun;\r\n                } else {\r\n                    return Helper.convertToChamDigitUnicode(dateAhier.date + 1) + bingun;\r\n                }\r\n            } else {\r\n                return Helper.convertToChamDigitUnicode(dateAhier.date - 14) + klem;\r\n            }\r\n        }\r\n    };\r\n\r\n    function displayAwalDate(dateAwal: AwalDate) {\r\n        const monthAwal = dateAwal.awalMonth.month + 1;\r\n        const bingun = 'ꩃ';\r\n        const klem = 'ꩌ';\r\n\r\n        if (dateAwal.date === 1) {\r\n            return (\r\n                <>\r\n                    <label style={{ margin: 0 }} >{Helper.convertToChamDigitUnicode(dateAwal.date) + bingun + \".\" + Helper.convertToChamDigitUnicode(monthAwal) + \".\"}</label>\r\n                    <label style={{ margin: 0 }} className='ikasSarak-month-cell'>{displayIkasSarakName(dateAwal.awalMonth.year.ikasSarak)}</label>\r\n                </>\r\n            )\r\n        } else {\r\n            if (props.dayNumbersOfCurrentAwalMonth === 30) {\r\n                if (dateAwal.date <= 15) {\r\n                    return Helper.convertToChamDigitUnicode(dateAwal.date) + bingun;\r\n                } else {\r\n                    return Helper.convertToChamDigitUnicode(dateAwal.date - 15) + klem;\r\n                }\r\n            } else {\r\n                if (dateAwal.date <= 14) {\r\n                    return Helper.convertToChamDigitUnicode(dateAwal.date) + bingun;\r\n                } else {\r\n                    return Helper.convertToChamDigitUnicode(dateAwal.date - 14) + klem;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function getEvents() {\r\n        let result: string[] = [];\r\n\r\n        if (props.dateAhier.ahierMonth.month === 0 && props.dateAhier.date === 1) {\r\n            result.push('Akaok thun');\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month !== AwalMonthEnum.Ramadan) {\r\n            if (props.dateAhier.ahierMonth.month === 0 && props.dateGregory.getDay() === 4 && props.dateAhier.date < 7) {\r\n                result.push('Rija Nagar');\r\n            }\r\n        } else {\r\n            if (props.dateAhier.ahierMonth.month === 0 && props.dateGregory.getDay() === 4 && props.dateAhier.date > 14 && props.dateAhier.date < 21) {\r\n                result.push('Rija Nagar');\r\n            }\r\n        }\r\n\r\n        if (props.dateAhier.ahierMonth.month === 5 && props.dateAhier.date === 29) {\r\n            result.push('Katé palei Hamu Tanran');\r\n        }\r\n\r\n        if (props.dateAhier.ahierMonth.month === 6 && props.dateAhier.date === 1) {\r\n            result.push('Katé angaok bimong');\r\n        }\r\n\r\n        if (props.dayNumbersOfCurrentAhierMonth === 30) {\r\n            if (props.dateAhier.ahierMonth.month === 8 && props.dateAhier.date === 16) {\r\n                result.push('Ca-mbur');\r\n            }\r\n        } else {\r\n            if (props.dateAhier.ahierMonth.month === 8 && props.dateAhier.date === 15) {\r\n                result.push('Ca-mbur');\r\n            }\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month === 8 && props.dateAwal.date === 1) {\r\n            result.push('Tamâ ricaow Ramâwan');\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month === 8 && props.dateAwal.date === 16) {\r\n            result.push('Muk trun');\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month === 8 && props.dateAwal.date === 21) {\r\n            result.push('Ong trun');\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month === 9 && props.dateAwal.date === 2) {\r\n            result.push('Talaih aek Ramâwan');\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month === 11 && props.dateAwal.date === 1) {\r\n            result.push('Ikak Waha');\r\n        }\r\n\r\n        if (props.dateAwal.awalMonth.month === 11 && props.dateAwal.date === 11) {\r\n            result.push('Talaih Waha');\r\n        }\r\n\r\n        if (props.dateAhier.ahierMonth.month === 3 && props.dateGregory.getDay() === 0 && props.dateAhier.date < 7) {\r\n            result.push('Yuer Yang');\r\n        }\r\n\r\n        // TODO: \r\n        // if (props.dateAhier.ahierMonth.month === 10 && props.dateGregory.getDay() === 2 && props.dateAhier.date <= 15) {\r\n        //     result.push('Peh ba-mbeng Yang');\r\n        // }\r\n\r\n        if ((props.dateAhier.ahierMonth.month === 2\r\n            || props.dateAhier.ahierMonth.month === 5\r\n            || props.dateAhier.ahierMonth.month === 7\r\n            || props.dateAhier.ahierMonth.month === 9\r\n            || props.dateAhier.ahierMonth.month === 10) && props.dateGregory.getDay() === 3) {\r\n\r\n            if (props.dayNumbersOfCurrentAhierMonth === 30) {\r\n                if (props.dateAhier.date > 15 && (props.dateAhier.date - 15) % 2 === 0) {\r\n                    result.push('♥️ Lakhah');\r\n                }\r\n            } else {\r\n                if (props.dateAhier.date > 14 && (props.dateAhier.date - 14) % 2 === 0) {\r\n                    result.push('♥️ Lakhah');\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    return (\r\n        <td style={tdStyle}>\r\n            <Row>\r\n                <Col md={6}></Col>\r\n                <Col style={GregoryDateStyle} md={6}>\r\n                    {displayGregoryDate(props.sakawiType, props.dateAhier, props.dateAwal, props.dateGregory)}\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={12} style={{ minHeight: \"10px\", maxHeight: \"25px\" }}>\r\n                    {getEvents().map((item, index) => { return <p key={index} style={eventStyle}>{item}</p> })}\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col style={awalDateStyle} md={6}>\r\n                    {/* {props.dateAwal.date}.{props.dateAwal.awalMonth.month + 1}-{IkasSarakEnum[props.dateAwal.awalMonth.year.ikasSarak]} */}\r\n                    {displayAwalDate(props.dateAwal)}\r\n                </Col>\r\n                <Col style={ahierDateStyle} md={6}>\r\n                    {/* {props.dateAhier.date}.{props.dateAhier.ahierMonth.month + 1}.{NasakEnum[props.dateAhier.ahierMonth.year.nasak]}.{IkasSarakEnum[props.dateAhier.ahierMonth.year.ikasSarak]} */}\r\n                    {displayAhierDate(props.dateAhier)}\r\n                </Col>\r\n            </Row>\r\n        </td>\r\n    );\r\n}","import { Button, ButtonGroup, ButtonToolbar, Col } from \"react-bootstrap\";\r\nimport { AhierMonthEnum, AwalMonthEnum, displayIkasSarakName, displayMonthName, displayNasakName, IkasSarakEnum, NasakEnum } from \"../enums/enum\";\r\nimport { AhierMonth } from \"../model/AhierDate\";\r\nimport { AwalMonth } from \"../model/AwalDate\";\r\nimport Helper from \"../utility/helper\";\r\nimport { SakawiType } from \"./calendar\";\r\n\r\ninterface MonthNavigationProps {\r\n    sakawiType: SakawiType;\r\n    currentAhierMonth?: AhierMonth;\r\n    currentAwalMonth?: AwalMonth;\r\n    currentGregoryMonth?: number;\r\n    onSelectSakawiType: (type: SakawiType) => void\r\n    onClickToday: () => void;\r\n    onClickPreviousMonth: () => void;\r\n    onClickNextMonth: () => void;\r\n}\r\n\r\nexport const MonthNavigation = (props: MonthNavigationProps) => {\r\n    // const [radioValue, setRadioValue] = useState('sakawiAhier');\r\n    // const radioButtons = [\r\n    //     { name: 'Lịch Chăm', value: 'sakawiAhier' },\r\n    //     { name: 'Lịch Awal', value: 'sakawiAwal' },\r\n    //     { name: 'Dương lịch', value: 'sakawiGregory' },\r\n    // ];\r\n\r\n    return (\r\n        <>\r\n            <Col md={4}>\r\n                <ButtonToolbar aria-label=\"Toolbar with button groups\" style={{ justifyContent: \"flex-start\" }}>\r\n                    {/* <ButtonGroup>\r\n                        {radioButtons.map((radio, idx) => (\r\n                            <ToggleButton\r\n                                key={idx}\r\n                                id={`radio-${idx}`}\r\n                                type=\"radio\"\r\n                                variant=\"secondary\"\r\n                                //variant={idx % 2 ? 'outline-success' : 'outline-danger'}\r\n                                name=\"radio\"\r\n                                value={radio.value}\r\n                                checked={radioValue === radio.value}\r\n                                onChange={(e) => {\r\n                                    props.onSelectSakawiType(e.currentTarget.value as SakawiType);\r\n                                    setRadioValue(e.currentTarget.value);\r\n                                }}\r\n                            >\r\n                                {radio.name}\r\n                            </ToggleButton>\r\n                        ))}\r\n                    </ButtonGroup> */}\r\n                    <ButtonGroup aria-label=\"Type of calendar\">\r\n                        <Button variant=\"secondary\" onClick={() => props.onSelectSakawiType('sakawiAhier')}>Lịch Chăm</Button>\r\n                        <Button variant=\"secondary\" onClick={() => props.onSelectSakawiType('sakawiAwal')}>Lịch Awal</Button>\r\n                        <Button variant=\"secondary\" onClick={() => props.onSelectSakawiType('sakawiGregory')}>Dương lịch</Button>\r\n                    </ButtonGroup>\r\n                </ButtonToolbar>\r\n            </Col>\r\n            <Col md={5} style={{ textAlign: \"center\" }}>\r\n                {props.sakawiType === 'sakawiAhier' && props.currentAhierMonth &&\r\n                    <>\r\n                        <div>\r\n                            <label className='bilan-title'>{displayMonthName(props.currentAhierMonth.month)}</label>\r\n                            {' - '}<label className='bilan-title'>{displayNasakName(props.currentAhierMonth.year.nasak)}</label>\r\n                            {' - '}<label className='ikasSarak-title'>{displayIkasSarakName(props.currentAhierMonth.year.ikasSarak)}</label>\r\n                            {' - '}<label className='bilan-title'>{Helper.convertToChamDigitUnicode(props.currentAhierMonth.year.yearNumber ?? 0)}</label>\r\n                        </div>\r\n                        <h5>\r\n                            {AhierMonthEnum[props.currentAhierMonth.month]} {`(${(props.currentAhierMonth.month + 1)})`} -\r\n                            {NasakEnum[props.currentAhierMonth.year.nasak]} {IkasSarakEnum[props.currentAhierMonth.year.ikasSarak]} -\r\n                            {props.currentAhierMonth.year.yearNumber}\r\n                        </h5>\r\n                    </>\r\n                }\r\n                {props.sakawiType === 'sakawiAwal' && props.currentAwalMonth &&\r\n                    <>\r\n                        <h2>{AwalMonthEnum[props.currentAwalMonth.month]} {`(${(props.currentAwalMonth.month + 1)})`} -\r\n                            {IkasSarakEnum[props.currentAwalMonth.year.ikasSarak]} -\r\n                            {props.currentAwalMonth.year.yearNumber}</h2>\r\n                    </>\r\n                }\r\n            </Col>\r\n            <Col md={3}>\r\n                <ButtonToolbar aria-label=\"Toolbar with button groups\" style={{ justifyContent: \"flex-end\" }}>\r\n                    <ButtonGroup aria-label=\"Third group\" style={{ marginRight: \".75em\" }}>\r\n                        <Button variant=\"secondary\" onClick={props.onClickToday}>Hôm nay</Button>\r\n                    </ButtonGroup>\r\n                    <ButtonGroup aria-label=\"Navigate months\">\r\n                        <Button variant=\"secondary\" className=\"fa fa-chevron-left\" onClick={props.onClickPreviousMonth} />\r\n                        <Button variant=\"secondary\" className=\"fa fa-chevron-right\" onClick={props.onClickNextMonth} />\r\n                    </ButtonGroup>\r\n                </ButtonToolbar>\r\n            </Col>\r\n        </>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { Col, Container, Row, Table } from \"react-bootstrap\";\r\nimport { AhierMonthEnum, IkasSarakEnum, NasakEnum } from \"../enums/enum\";\r\nimport { AhierDate, AhierMonth } from \"../model/AhierDate\";\r\nimport { AwalDate, AwalMonth } from \"../model/AwalDate\";\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport Helper from \"../utility/helper\";\r\nimport { SakawiType } from \"./calendar\";\r\nimport { DayDetails } from \"./dayDetails\";\r\nimport { MonthNavigation } from \"./monthNavigation\";\r\n\r\ninterface MonthAhierProps {\r\n    matrixSakawi: MatrixCalendarType[],\r\n    currentAhierMonthMatrix: MatrixCalendarType,\r\n    onSelectSakawiType: (type: SakawiType) => void\r\n}\r\n\r\nexport const MonthAhier = (props: MonthAhierProps) => {\r\n    const initialAhierMonth: AhierMonth = { month: AhierMonthEnum.BilanSa, year: { nasak: NasakEnum.Pabuei, ikasSarak: IkasSarakEnum.JimLuic, yearNumber: 2019 } };\r\n    const initialAwalMonth: AwalMonth = { month: 0, year: { ikasSarak: 0, yearNumber: 1400 } };\r\n    const initialAhierDate: AhierDate = { date: 1, ahierMonth: initialAhierMonth };\r\n    const initialAwalDate: AwalDate = { date: 1, awalMonth: initialAwalMonth };\r\n    const initialGregoryDate: Date = new Date();\r\n\r\n    const [currentAhierMonthMatrix, setCurrentAhierMonthMatrix] = useState(props.currentAhierMonthMatrix);\r\n\r\n    const [firstDateOfAhierMonth, setFirstDateOfAhierMonth] = useState<AhierDate>(initialAhierDate);\r\n    const [firstDayOfAhierMonth, setFirstDayOfAhierMonth] = useState(0);\r\n\r\n    const [firstDateOfAwalMonth, setFirstDateOfAwalMonth] = useState<AwalDate>(initialAwalDate);\r\n    const [firstDayOfAwalMonth, setFirstDayOfAwalMonth] = useState(0);\r\n\r\n    const [firstDateOfGregoryMonth, setFirstDateOfGregoryMonth] = useState<Date>(initialGregoryDate);\r\n    const [firstDayOfGregoryMonth, setFirstDayOfGregoryMonth] = useState(0);\r\n\r\n    React.useEffect(() => {\r\n        function init() {\r\n            // Ahier Date\r\n            const firstAhierDate: AhierDate = { date: 1, ahierMonth: currentAhierMonthMatrix.ahierMonth };\r\n            setFirstDateOfAhierMonth(firstAhierDate);\r\n            setFirstDayOfAhierMonth(currentAhierMonthMatrix.firstDayOfAhierMonth);\r\n\r\n            // Awal Date\r\n            const firstAwalDate: AwalDate = { date: 1, awalMonth: currentAhierMonthMatrix.awalMonth };\r\n            setFirstDateOfAwalMonth(firstAwalDate);\r\n            setFirstDayOfAwalMonth(currentAhierMonthMatrix.firstDayOfAwalMonth);\r\n\r\n            // Gregory Date\r\n            setFirstDateOfGregoryMonth(currentAhierMonthMatrix.dateOfGregoryCalendar);\r\n            setFirstDayOfGregoryMonth(currentAhierMonthMatrix.dateOfGregoryCalendar.getDay());\r\n        }\r\n\r\n        init();\r\n    }, [currentAhierMonthMatrix, props.currentAhierMonthMatrix]);\r\n\r\n    function handleGoToToday() {\r\n        setCurrentAhierMonthMatrix(props.currentAhierMonthMatrix);\r\n    }\r\n\r\n    function handleGoToPreviousMonth() {\r\n        const index = props.matrixSakawi.findIndex(x => x === currentAhierMonthMatrix);\r\n        setCurrentAhierMonthMatrix(props.matrixSakawi[index - 1]);\r\n    }\r\n\r\n    function handleGoToNextMonth() {\r\n        const index = props.matrixSakawi.findIndex(x => x === currentAhierMonthMatrix);\r\n        setCurrentAhierMonthMatrix(props.matrixSakawi[index + 1]);\r\n    }\r\n\r\n    // draw Calendar Table\r\n    let count = 0;\r\n    let rows = [];\r\n\r\n    for (let weeks = 0; weeks < 6; weeks++) {\r\n        let cells = []\r\n        for (let days = 0; days < 7; days++) {\r\n            let week = 0;\r\n            if (firstDayOfAwalMonth < firstDayOfAhierMonth) {\r\n                week = 7;\r\n            }\r\n\r\n            const cellAhierDate = Helper.addAhierDays(props.matrixSakawi, firstDateOfAhierMonth, count - firstDayOfAhierMonth);\r\n            const dateAhier: AhierDate = {\r\n                date: cellAhierDate.date,\r\n                ahierMonth: cellAhierDate.ahierMonth\r\n            }\r\n\r\n            const cellAwalDate = Helper.addAwalDays(firstDateOfAwalMonth, count - firstDayOfAwalMonth - week);\r\n            const dateAwal: AwalDate = {\r\n                date: cellAwalDate.date,\r\n                awalMonth: cellAwalDate.awalMonth\r\n            }\r\n\r\n            const GregoryDate = Helper.addGregoryDays(firstDateOfGregoryMonth, count - firstDayOfGregoryMonth);\r\n            const dayNumbersOfCurrentAhierMonth = Helper.getActualDayNumbersOfAhierMonth(props.matrixSakawi, cellAhierDate.ahierMonth);\r\n            const dayNumbersOfCurrentAwalMonth = Helper.getDayNumbersOfAwalMonth(dateAwal.awalMonth.year, dateAwal.awalMonth.month);\r\n\r\n            cells.push(\r\n                <DayDetails\r\n                    sakawiType=\"sakawiAhier\"\r\n                    key={`sakawiAhier-cell-${weeks}-${days}`}\r\n                    dateAhier={dateAhier}\r\n                    dateAwal={dateAwal}\r\n                    dateGregory={GregoryDate}\r\n                    currentAhierMonth={currentAhierMonthMatrix.ahierMonth}\r\n                    dayNumbersOfCurrentAhierMonth={dayNumbersOfCurrentAhierMonth}\r\n                    dayNumbersOfCurrentAwalMonth={dayNumbersOfCurrentAwalMonth}\r\n                />\r\n            );\r\n            count++;\r\n        }\r\n\r\n        rows.push(<tr key={`sakawiAhier-row-${weeks}`}>{cells}</tr>)\r\n    }\r\n\r\n    const dayNames = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n    const tableStyle: React.CSSProperties = {\r\n        height: \"400px\",\r\n        tableLayout: \"fixed\"\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <MonthNavigation\r\n                    sakawiType=\"sakawiAhier\"\r\n                    currentAhierMonth={currentAhierMonthMatrix.ahierMonth}\r\n                    onClickToday={handleGoToToday}\r\n                    onClickPreviousMonth={handleGoToPreviousMonth}\r\n                    onClickNextMonth={handleGoToNextMonth}\r\n                    onSelectSakawiType={type => props.onSelectSakawiType(type)}\r\n                />\r\n            </Row>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Table bordered hover style={tableStyle}>\r\n                        <thead>\r\n                            <tr>\r\n                                {dayNames.map((d, index) =>\r\n                                    <th style={{ padding: \"2px\", textAlign: \"center\" }} key={index}>{d}</th>\r\n                                )}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {rows}\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Col, Container, Row, Table } from \"react-bootstrap\";\r\nimport { AhierMonthEnum, IkasSarakEnum, NasakEnum } from \"../enums/enum\";\r\nimport { AhierDate, AhierMonth } from \"../model/AhierDate\";\r\nimport { AwalDate, AwalMonth } from \"../model/AwalDate\";\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport Helper from '../utility/helper';\r\nimport { SakawiType } from \"./calendar\";\r\nimport { DayDetails } from \"./dayDetails\";\r\nimport { MonthNavigation } from \"./monthNavigation\";\r\n\r\ninterface MonthAwalProps {\r\n    matrixSakawi: MatrixCalendarType[],\r\n    currentAwalMonthMatrix: MatrixCalendarType,\r\n    onSelectSakawiType: (type: SakawiType) => void\r\n}\r\n\r\nexport const MonthAwal = (props: MonthAwalProps) => {\r\n    const initialAhierMonth: AhierMonth = { month: AhierMonthEnum.BilanSa, year: { nasak: NasakEnum.Pabuei, ikasSarak: IkasSarakEnum.JimLuic, yearNumber: 2019 } };\r\n    const initialAwalMonth: AwalMonth = { month: 0, year: { ikasSarak: 0, yearNumber: 1400 } };\r\n    const initialAhierDate: AhierDate = { date: 1, ahierMonth: initialAhierMonth };\r\n    const initialAwalDate: AwalDate = { date: 1, awalMonth: initialAwalMonth };\r\n    const initialGregoryDate: Date = new Date();\r\n\r\n    const [currentAwalMonthMatrix, setCurrentAwalMonthMatrix] = useState(props.currentAwalMonthMatrix);\r\n\r\n    const [firstDateOfAhierMonth, setFirstDateOfAhierMonth] = useState<AhierDate>(initialAhierDate);\r\n    const [firstDayOfAhierMonth, setFirstDayOfAhierMonth] = useState(0);\r\n\r\n    const [firstDateOfAwalMonth, setFirstDateOfAwalMonth] = useState<AwalDate>(initialAwalDate);\r\n    const [firstDayOfAwalMonth, setFirstDayOfAwalMonth] = useState(0);\r\n\r\n    const [firstDateOfGregoryMonth, setFirstDateOfGregoryMonth] = useState<Date>(initialGregoryDate);\r\n    const [firstDayOfGregoryMonth, setFirstDayOfGregoryMonth] = useState(0);\r\n\r\n    React.useEffect(() => {\r\n        function init() {\r\n            //console.log('props.currentAwalMonthMatrix', JSON.stringify(props.currentAwalMonthMatrix));\r\n\r\n            // Ahier Date\r\n            const firstAhierDate: AhierDate = { date: 1, ahierMonth: currentAwalMonthMatrix.ahierMonth };\r\n            setFirstDateOfAhierMonth(firstAhierDate);\r\n            setFirstDayOfAhierMonth(currentAwalMonthMatrix.firstDayOfAhierMonth);\r\n\r\n            // Awal Date\r\n            const firstAwalDate: AwalDate = { date: 1, awalMonth: currentAwalMonthMatrix.awalMonth };\r\n            setFirstDateOfAwalMonth(firstAwalDate);\r\n            setFirstDayOfAwalMonth(currentAwalMonthMatrix.firstDayOfAwalMonth);\r\n\r\n            // Gregory Date\r\n            setFirstDateOfGregoryMonth(currentAwalMonthMatrix.dateOfGregoryCalendar);\r\n            setFirstDayOfGregoryMonth(currentAwalMonthMatrix.dateOfGregoryCalendar.getDay());\r\n        }\r\n\r\n        init();\r\n    }, [currentAwalMonthMatrix, props.currentAwalMonthMatrix]);\r\n\r\n\r\n    function handleGoToToday() {\r\n        setCurrentAwalMonthMatrix(props.currentAwalMonthMatrix);\r\n    }\r\n\r\n    function handleGoToPreviousMonth() {\r\n        const index = props.matrixSakawi.findIndex(x => x === currentAwalMonthMatrix);\r\n        setCurrentAwalMonthMatrix(props.matrixSakawi[index - 1]);\r\n    }\r\n\r\n    function handleGoToNextMonth() {\r\n        const index = props.matrixSakawi.findIndex(x => x === currentAwalMonthMatrix);\r\n        setCurrentAwalMonthMatrix(props.matrixSakawi[index + 1]);\r\n    }\r\n\r\n    // draw Calendar Table\r\n    let count = 0;\r\n    let rows = [];\r\n\r\n    for (let weeks = 0; weeks < 6; weeks++) {\r\n        let cells = []\r\n        for (let days = 0; days < 7; days++) {\r\n            let week = 0;\r\n            if (firstDayOfAwalMonth < firstDayOfAhierMonth) {\r\n                week = 7;\r\n            }\r\n\r\n            const cellAwalDate = Helper.addAwalDays(firstDateOfAwalMonth, count - firstDayOfAwalMonth);\r\n            const dateAwal: AwalDate = {\r\n                date: cellAwalDate.date,\r\n                awalMonth: cellAwalDate.awalMonth\r\n            }\r\n\r\n            const cellAhierDate = Helper.addAhierDays(props.matrixSakawi, firstDateOfAhierMonth, count - firstDayOfAhierMonth + week);\r\n            const dateAhier: AhierDate = {\r\n                date: cellAhierDate.date,\r\n                ahierMonth: cellAhierDate.ahierMonth\r\n            }\r\n\r\n            const GregoryDate = Helper.addGregoryDays(firstDateOfGregoryMonth, count - firstDayOfGregoryMonth + week);\r\n            const dayNumbersOfCurrentAhierMonth = Helper.getActualDayNumbersOfAhierMonth(props.matrixSakawi, cellAhierDate.ahierMonth);\r\n            const dayNumbersOfCurrentAwalMonth = Helper.getDayNumbersOfAwalMonth(dateAwal.awalMonth.year, dateAwal.awalMonth.month);\r\n\r\n            cells.push(\r\n                <DayDetails\r\n                    sakawiType=\"sakawiAwal\"\r\n                    key={`sakawiAwal-cell-${weeks}-${days}`}\r\n                    dateAhier={dateAhier}\r\n                    dateAwal={dateAwal}\r\n                    dateGregory={GregoryDate}\r\n                    currentAhierMonth={currentAwalMonthMatrix.ahierMonth}\r\n                    currentAwalMonth={currentAwalMonthMatrix.awalMonth}\r\n                    dayNumbersOfCurrentAhierMonth={dayNumbersOfCurrentAhierMonth}\r\n                    dayNumbersOfCurrentAwalMonth={dayNumbersOfCurrentAwalMonth}\r\n                />\r\n            );\r\n            count++;\r\n        }\r\n\r\n        rows.push(<tr key={`sakawiAwal-row-${weeks}`}>{cells}</tr>)\r\n    }\r\n\r\n    const dayNames = [\"Adit\", \"Thom\", \"Angar\", \"But\", \"Jip\", \"Suk\", \"Sanacar\"];\r\n    const tableStyle: React.CSSProperties = {\r\n        height: \"400px\",\r\n        tableLayout: \"fixed\"\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <MonthNavigation\r\n                    sakawiType=\"sakawiAwal\"\r\n                    currentAwalMonth={currentAwalMonthMatrix.awalMonth}\r\n                    onClickToday={handleGoToToday}\r\n                    onClickPreviousMonth={handleGoToPreviousMonth}\r\n                    onClickNextMonth={handleGoToNextMonth}\r\n                    onSelectSakawiType={type => props.onSelectSakawiType(type)}\r\n                />\r\n            </Row>\r\n            {/* <Row>\r\n                <Col md={4}>\r\n                    <ButtonToolbar aria-label=\"Toolbar with button groups\" style={{ justifyContent: \"flex-start\" }}>\r\n                        <ButtonGroup aria-label=\"Type of calendar\">\r\n                            <Button variant=\"secondary\" onClick={() => props.onSelectSakawiType('sakawiAhier')}>Lịch Chăm</Button>\r\n                            <Button variant=\"secondary\">Lịch Awal</Button>\r\n                            <Button variant=\"secondary\" onClick={() => props.onSelectSakawiType('sakawiGregory')}>Dương lịch</Button>\r\n                        </ButtonGroup>\r\n                    </ButtonToolbar>\r\n                </Col>\r\n                <Col md={5} style={{ textAlign: \"center\" }}>\r\n                    <h2>{AwalMonthEnum[currentAwalMonth.month]} {`(${(currentAwalMonth.month + 1)})`} - {IkasSarakEnum[currentAwalMonth.year.ikasSarak]} - {currentAwalMonth.year.yearNumber}</h2>\r\n                </Col>\r\n                <Col md={3} style={{ textAlign: \"left\" }}>\r\n                    <ButtonToolbar aria-label=\"Toolbar with button groups\" style={{ justifyContent: \"flex-end\" }}>\r\n                        <ButtonGroup aria-label=\"Third group\" style={{ marginRight: \".75em\" }}>\r\n                            <Button variant=\"secondary\" onClick={handleGoToToday}>Hôm nay</Button>\r\n                        </ButtonGroup>\r\n                        <ButtonGroup aria-label=\"Basic example\">\r\n                            <Button variant=\"secondary\" className=\"fa fa-chevron-left\" onClick={handleGoToPreviousMonth} />\r\n                            <Button variant=\"secondary\" className=\"fa fa-chevron-right\" onClick={handleGoToNextMonth} />\r\n                        </ButtonGroup>\r\n                    </ButtonToolbar>\r\n                </Col>\r\n            </Row> */}\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Table bordered hover style={tableStyle}>\r\n                        <thead>\r\n                            <tr>\r\n                                {dayNames.map((d, index) =>\r\n                                    <th style={{ padding: \"2px\", textAlign: \"center\" }} key={index}>{d}</th>\r\n                                )}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {rows}\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Col, Container, Row, Table } from \"react-bootstrap\";\r\nimport { AhierMonthEnum, IkasSarakEnum, NasakEnum } from \"../enums/enum\";\r\nimport { AhierDate, AhierMonth } from \"../model/AhierDate\";\r\nimport { AwalDate, AwalMonth } from \"../model/AwalDate\";\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport Helper from '../utility/helper';\r\nimport { SakawiType } from \"./calendar\";\r\nimport { DayDetails } from \"./dayDetails\";\r\nimport { MonthNavigation } from \"./monthNavigation\";\r\n\r\ninterface MonthGregoryProps {\r\n    matrixSakawi: MatrixCalendarType[],\r\n    currentGregoryMonthMatrix: MatrixCalendarType,\r\n    onSelectSakawiType: (type: SakawiType) => void\r\n}\r\n\r\nexport const MonthGregory = (props: MonthGregoryProps) => {\r\n    const initialAhierMonth: AhierMonth = { month: AhierMonthEnum.BilanSa, year: { nasak: NasakEnum.Pabuei, ikasSarak: IkasSarakEnum.JimLuic, yearNumber: 2019 } };\r\n    const initialAwalMonth: AwalMonth = { month: 0, year: { ikasSarak: 0, yearNumber: 1400 } };\r\n    const initialAhierDate: AhierDate = { date: 1, ahierMonth: initialAhierMonth };\r\n    const initialAwalDate: AwalDate = { date: 1, awalMonth: initialAwalMonth };\r\n    const initialGregoryDate: Date = new Date();\r\n\r\n    const [currentGregoryMonthMatrix, setCurrentGregoryMonthMatrix] = useState(props.currentGregoryMonthMatrix);\r\n\r\n    const [firstDateOfAhierMonth, setFirstDateOfAhierMonth] = useState<AhierDate>(initialAhierDate);\r\n    const [firstDayOfAhierMonth, setFirstDayOfAhierMonth] = useState(0);\r\n\r\n    const [firstDateOfAwalMonth, setFirstDateOfAwalMonth] = useState<AwalDate>(initialAwalDate);\r\n    const [firstDayOfAwalMonth, setFirstDayOfAwalMonth] = useState(0);\r\n\r\n    const [firstDateOfGregoryMonth, setFirstDateOfGregoryMonth] = useState<Date>(initialGregoryDate);\r\n    const [firstDayOfGregoryMonth, setFirstDayOfGregoryMonth] = useState(0);\r\n\r\n    React.useEffect(() => {\r\n        function init() {\r\n            // Gregory Date\r\n            const firstGregoryDate = new Date(currentGregoryMonthMatrix.dateOfGregoryCalendar.getFullYear(), currentGregoryMonthMatrix.dateOfGregoryCalendar.getMonth(), 1);\r\n            setFirstDateOfGregoryMonth(firstGregoryDate);\r\n            setFirstDayOfGregoryMonth(firstGregoryDate.getDay());\r\n\r\n            // Ahier Date\r\n            const firstAhierDate: AhierDate = { date: 1, ahierMonth: currentGregoryMonthMatrix.ahierMonth };\r\n            setFirstDateOfAhierMonth(firstAhierDate);\r\n            setFirstDayOfAhierMonth(currentGregoryMonthMatrix.firstDayOfAhierMonth);\r\n\r\n            // Awal Date\r\n            const firstAwalDate: AwalDate = { date: 1, awalMonth: currentGregoryMonthMatrix.awalMonth };\r\n            setFirstDateOfAwalMonth(firstAwalDate);\r\n            setFirstDayOfAwalMonth(currentGregoryMonthMatrix.firstDayOfAwalMonth);\r\n        }\r\n\r\n        init();\r\n    }, [currentGregoryMonthMatrix, props.currentGregoryMonthMatrix]);\r\n\r\n    function handleGoToToday() {\r\n        setCurrentGregoryMonthMatrix(props.currentGregoryMonthMatrix);\r\n    }\r\n\r\n    function handleGoToPreviousMonth() {\r\n        const index = props.matrixSakawi.findIndex(x => x === currentGregoryMonthMatrix);\r\n        setCurrentGregoryMonthMatrix(props.matrixSakawi[index - 1]);\r\n    }\r\n\r\n    function handleGoToNextMonth() {\r\n        const index = props.matrixSakawi.findIndex(x => x === currentGregoryMonthMatrix);\r\n        setCurrentGregoryMonthMatrix(props.matrixSakawi[index + 1]);\r\n    }\r\n\r\n    // draw Calendar Table\r\n    let count = 0;\r\n    let rows = [];\r\n\r\n    for (let weeks = 0; weeks < 6; weeks++) {\r\n        let cells = []\r\n        for (let days = 0; days < 7; days++) {\r\n            let week = 0;\r\n            if (firstDayOfAwalMonth < firstDayOfAhierMonth) {\r\n                week = 7;\r\n            }\r\n\r\n            const cellAwalDate = Helper.addAwalDays(firstDateOfAwalMonth, (count - firstDayOfAwalMonth));\r\n            const dateAwal: AwalDate = {\r\n                date: cellAwalDate.date,\r\n                awalMonth: cellAwalDate.awalMonth\r\n            }\r\n\r\n            const cellAhierDate = Helper.addAhierDays(props.matrixSakawi, firstDateOfAhierMonth, count - firstDayOfAhierMonth + week);\r\n            const dateAhier: AhierDate = {\r\n                date: cellAhierDate.date,\r\n                ahierMonth: cellAhierDate.ahierMonth\r\n            }\r\n\r\n            const GregoryDate = Helper.addGregoryDays(firstDateOfGregoryMonth, count - firstDayOfGregoryMonth);\r\n            const dayNumbersOfCurrentAhierMonth = Helper.getActualDayNumbersOfAhierMonth(props.matrixSakawi, cellAhierDate.ahierMonth);\r\n            const dayNumbersOfCurrentAwalMonth = Helper.getDayNumbersOfAwalMonth(dateAwal.awalMonth.year, dateAwal.awalMonth.month);\r\n\r\n            cells.push(\r\n                <DayDetails\r\n                    sakawiType=\"sakawiGregory\"\r\n                    key={`sakawiGregory-cell-${weeks}-${days}`}\r\n                    dateAhier={dateAhier}\r\n                    dateAwal={dateAwal}\r\n                    dateGregory={GregoryDate}\r\n                    currentAhierMonth={currentGregoryMonthMatrix.ahierMonth}\r\n                    currentAwalMonth={currentGregoryMonthMatrix.awalMonth}\r\n                    currentGregoryMonth={currentGregoryMonthMatrix.dateOfGregoryCalendar.getMonth()}\r\n                    dayNumbersOfCurrentAhierMonth={dayNumbersOfCurrentAhierMonth}\r\n                    dayNumbersOfCurrentAwalMonth={dayNumbersOfCurrentAwalMonth}\r\n                />\r\n            );\r\n            count++;\r\n        }\r\n\r\n        rows.push(<tr key={`sakawiGregory-row-${weeks}`}>{cells}</tr>)\r\n    }\r\n\r\n    const dayNames = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    const tableStyle: React.CSSProperties = {\r\n        height: \"400px\",\r\n        tableLayout: \"fixed\"\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <MonthNavigation\r\n                    sakawiType=\"sakawiGregory\"\r\n                    onClickToday={handleGoToToday}\r\n                    onClickPreviousMonth={handleGoToPreviousMonth}\r\n                    onClickNextMonth={handleGoToNextMonth}\r\n                    onSelectSakawiType={type => props.onSelectSakawiType(type)}\r\n                />\r\n            </Row>\r\n            {/* <Row>\r\n                <Col md={4}>\r\n                    <ButtonToolbar aria-label=\"Toolbar with button groups\">\r\n                        <ButtonGroup aria-label=\"Type of calendar\">\r\n                            <Button variant=\"secondary\" onClick={() => props.onSelectSakawiType('sakawiAhier')}>Lịch Chăm</Button>\r\n                            <Button variant=\"secondary\" onClick={() => props.onSelectSakawiType('sakawiAwal')}>Lịch Awal</Button>\r\n                            <Button variant=\"secondary\">Dương lịch</Button>\r\n                        </ButtonGroup>\r\n                    </ButtonToolbar>\r\n                </Col>\r\n                <Col md={5} style={{ textAlign: \"center\" }}>\r\n                    <h2>{currentGregoryMonthMatrix.dateOfGregoryCalendar.getMonth} {currentGregoryMonthMatrix.dateOfGregoryCalendar.setFullYear}</h2>\r\n                </Col>\r\n                <Col md={3} style={{ textAlign: \"left\" }}>\r\n                    <ButtonToolbar aria-label=\"Toolbar with button groups\" style={{ justifyContent: \"flex-end\" }}>\r\n                        <ButtonGroup aria-label=\"Third group\" style={{ marginRight: \".75em\" }}>\r\n                            <Button variant=\"secondary\" onClick={handleGoToToday}>Hôm nay</Button>\r\n                        </ButtonGroup>\r\n                        <ButtonGroup aria-label=\"Basic example\">\r\n                            <Button variant=\"secondary\" className=\"fa fa-chevron-left\" onClick={handleGoToPreviousMonth} />\r\n                            <Button variant=\"secondary\" className=\"fa fa-chevron-right\" onClick={handleGoToNextMonth} />\r\n                        </ButtonGroup>\r\n                    </ButtonToolbar>\r\n                </Col>\r\n            </Row> */}\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Table bordered hover style={tableStyle}>\r\n                        <thead>\r\n                            <tr>\r\n                                {dayNames.map((d, index) =>\r\n                                    <th style={{ padding: \"2px\", textAlign: \"center\" }} key={index}>{d}</th>\r\n                                )}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {rows}\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Alert, Col, Row } from \"react-bootstrap\";\r\nimport { AhierMonthEnum, IkasSarakEnum, NasakEnum } from \"../enums/enum\";\r\nimport { AhierMonth } from \"../model/AhierDate\";\r\nimport { AwalMonth } from \"../model/AwalDate\";\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport Helper from \"../utility/helper\";\r\nimport { CountDownBar } from \"./countDownBar\";\r\nimport { MonthAhier } from \"./monthAhier\";\r\nimport { MonthAwal } from \"./monthAwal\";\r\nimport { MonthGregory } from \"./monthGregory\";\r\n\r\nexport declare type SakawiType = 'sakawiAwal' | 'sakawiAhier' | 'sakawiGregory';\r\n\r\nexport const Calendar = () => {\r\n    const initialAhierMonth: AhierMonth = { month: AhierMonthEnum.BilanSa, year: { nasak: NasakEnum.Pabuei, ikasSarak: IkasSarakEnum.JimLuic, yearNumber: 2019 } };\r\n    const initialAwalMonth: AwalMonth = { month: 0, year: { ikasSarak: 0, yearNumber: 1400 } };\r\n    const initialGregoryDate: Date = new Date();\r\n\r\n    const initialMatrixCalendarType: MatrixCalendarType = {\r\n        ahierMonth: initialAhierMonth,\r\n        dayNumbersOfAhierMonth: 0,\r\n        firstDayOfAhierMonth: 0,\r\n        dateOfGregoryCalendar: initialGregoryDate,\r\n        awalMonth: initialAwalMonth,\r\n        dayNumbersOfAwalMonth: 0,\r\n        firstDayOfAwalMonth: 0\r\n    }\r\n\r\n    const [showWarning, setShowWarning] = useState(true);\r\n    const [matrixSakawi, setMatrixSakawi] = useState<MatrixCalendarType[]>([]);\r\n    const [currentAhierMonth, setCurrentAhierMonth] = useState<MatrixCalendarType>(initialMatrixCalendarType);\r\n    const [currentAwalMonth, setCurrentAwalMonth] = useState<MatrixCalendarType>(initialMatrixCalendarType);\r\n    const [currentGregoryMonth, setCurrentGregoryMonth] = useState<MatrixCalendarType>(initialMatrixCalendarType);\r\n    // const [year] = useState(new Date().getFullYear());\r\n    // const [month] = useState(new Date().getMonth());\r\n    const [sakawiType, setSakawiType] = useState<SakawiType>('sakawiAhier');\r\n\r\n    React.useEffect(() => {\r\n        function init() {\r\n            // Build matrix Calendar\r\n            let matrix = Helper.buildMatrixCalendar(2046);\r\n            setMatrixSakawi(matrix);\r\n            console.log('matrix', JSON.stringify(matrix));\r\n\r\n            // Set current matrix item \r\n            const currentAhierMonth = matrix.filter(m =>\r\n                Helper.addGregoryDays(m.dateOfGregoryCalendar, m.dayNumbersOfAhierMonth) > new Date())[0];\r\n            if (currentAhierMonth) {\r\n                setCurrentAhierMonth(currentAhierMonth);\r\n            }\r\n\r\n            const currentAwalMonth = matrix.filter(m =>\r\n                Helper.addGregoryDays(m.dateOfGregoryCalendar, m.dayNumbersOfAwalMonth) > new Date())[0];\r\n            if (currentAwalMonth) {\r\n                setCurrentAwalMonth(currentAwalMonth);\r\n            }\r\n\r\n            const currentGregoryMonth = matrix.filter(m =>\r\n                Helper.addGregoryDays(m.dateOfGregoryCalendar, m.dayNumbersOfAwalMonth) > new Date())[0];//TODO\r\n            if (currentGregoryMonth) {\r\n                setCurrentGregoryMonth(currentGregoryMonth);\r\n            }\r\n        }\r\n\r\n        init();\r\n    }, [sakawiType]);\r\n\r\n    function onSelectSakawiType(type: SakawiType) {\r\n        setSakawiType(type);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {showWarning &&\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <Alert variant='info' onClose={() => setShowWarning(false)} dismissible>\r\n                            <Alert.Heading>Lưu ý!</Alert.Heading>\r\n                            - Ứng dụng đang trong quá trình phát triển, rất mong nhận được góp ý từ người dùng để sản phẩm được hoàn thiện hơn.\r\n                            <br />- Sakawi năm hiện tại được tính theo Sakawi của Hội đồng Chức sắc phát hành.\r\n                            Sakawi các năm tiếp theo chỉ mang tính chất tham khảo.\r\n                        </Alert>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            <Row>\r\n                <Col md={12}>\r\n                    <CountDownBar dateName={\"Rija Nagar\"} variantType='success' toDate={new Date(2022, 4, 5)} />\r\n                    <CountDownBar dateName={\"Katé\"} variantType='info' toDate={new Date(2022, 9, 5)} />\r\n                    <CountDownBar dateName={\"Ramâwan\"} variantType='warning' toDate={new Date(2022, 3, 2)} />\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n            {\r\n                matrixSakawi.length > 0 &&\r\n                <Row>\r\n                    {sakawiType === 'sakawiGregory' &&\r\n                        <MonthGregory\r\n                            matrixSakawi={matrixSakawi}\r\n                            currentGregoryMonthMatrix={currentGregoryMonth}\r\n                            onSelectSakawiType={onSelectSakawiType}\r\n                        />\r\n                    }\r\n                    {sakawiType === 'sakawiAwal' &&\r\n                        <MonthAwal\r\n                            matrixSakawi={matrixSakawi}\r\n                            currentAwalMonthMatrix={currentAwalMonth}\r\n                            onSelectSakawiType={onSelectSakawiType}\r\n                        />\r\n                    }\r\n                    {sakawiType === 'sakawiAhier' &&\r\n                        <MonthAhier\r\n                            matrixSakawi={matrixSakawi}\r\n                            currentAhierMonthMatrix={currentAhierMonth}\r\n                            onSelectSakawiType={onSelectSakawiType}\r\n                        />\r\n                    }\r\n                </Row>\r\n            }\r\n        </>\r\n    );\r\n}","import { Card, Col, Container, ListGroup, Nav, Navbar, Row } from \"react-bootstrap\";\r\n\r\ninterface LayoutProps {\r\n    children: JSX.Element;\r\n}\r\n\r\nconst footerStyle: React.CSSProperties = {\r\n    background: \"#20232a\",\r\n    color: \"white\",\r\n    padding: \"15px\",\r\n    textAlign: \"center\",\r\n    justifyContent: \"center\"\r\n}\r\n\r\nexport const Layout = (props: LayoutProps) => {\r\n    return (\r\n        <Container fluid>\r\n            {/* Header */}\r\n            <Row>\r\n                <Col style={{ paddingRight: 0, paddingLeft: 0 }}>\r\n                    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n                        <Navbar.Brand href=\"#home\">SAKAWI CHAM</Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                            <Nav className=\"mr-auto my-2 my-lg-0\"\r\n                                style={{ maxHeight: '100px' }}\r\n                                navbarScroll>\r\n                                <Nav.Link href=\"#\">Trang chủ</Nav.Link>\r\n                                <Nav.Link href=\"#\">Tiện ích</Nav.Link>\r\n                                <Nav.Link href=\"#\">Tài liệu</Nav.Link>\r\n                                <Nav.Link href=\"#\">Blog</Nav.Link>\r\n                                <Nav.Link href=\"#\">Hướng dẫn</Nav.Link>\r\n                                <Nav.Link href=\"#\">Chúng tôi</Nav.Link>\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Navbar>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n            {/* Body */}\r\n            <Row>\r\n                <Col sm={2}>\r\n                    <Card>\r\n                        <ListGroup>\r\n                            <ListGroup.Item>Lịch tháng</ListGroup.Item>\r\n                            <ListGroup.Item>Lịch năm</ListGroup.Item>\r\n                            <ListGroup.Item>Sự kiện trong năm</ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n                <Col sm={10}>\r\n                    {props.children}\r\n                </Col>\r\n            </Row>\r\n            {/* Fotter */}\r\n            <Row>\r\n                <Col style={{ paddingRight: 0, paddingLeft: 0 }}>\r\n                    <p style={footerStyle}>{`© ${new Date().getFullYear()} Sakawi Cham`}</p>\r\n                </Col>\r\n            </Row>\r\n        </Container >\r\n    );\r\n}","import React from 'react';\r\n//import logo from './logo.svg';\r\nimport './App.css';\r\nimport { Calendar } from './components/calendar';\r\nimport { Layout } from './Layout';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Layout>\r\n        <Calendar/>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}