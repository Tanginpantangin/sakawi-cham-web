{"version":3,"sources":["enums/enum.ts","components/countDownBar.tsx","utility/constant.ts","utility/helper.ts","components/day.tsx","components/month.tsx","components/dayAhier.tsx","components/monthAhier.tsx","components/dayAwal.tsx","components/monthAwal.tsx","components/calendar.tsx","Layout.tsx","App.tsx","index.tsx"],"names":["MonthEnum","DayEnum","IkasSarakEnum","NasakEnum","AwalMonthEnum","AhierMonthEnum","displayMonthName","month","result","displayNasakName","nasak","displayIkasSarakName","ikasSarak","CountDownBar","props","useState","percent","setPercent","days","setDays","hours","setHours","minutes","setMinutes","seconds","setSeconds","useEffect","setTimeout","toDate","now","Date","getTime","distance","Math","floor","init","ProgressBar","variant","variantType","toString","label","dateName","slice","firstDateOfSakawiAwal_Lieh_1439","firstDateOfSakawiAhier_Pabuei_JimLuic_2019","awalYearArray","no","name","Liéh","numberOfDays","Hak","Jim","Jây","Dal","Bak","Waw","JimLuic","awalMonthArray","Muharam","Syafar","Rabiulawal","Rabiulakhir","Jamadilawal","Jamadilakhir","Rejab","Sykban","Ramadan","Syawal","Julkaejah","Julhiijaah","Helper","currentDate","addedDays","getDayNumbersOfAwalMonth","awalMonth","year","newDays","date","newMonth","newYear","currentMonth","addedMonths","quotient","getMod","addAwalYears","currentYear","addedYears","newIkasSarak","yearNumber","yearName","yearItem","dataConfig","filter","x","ArabYear","differenceInDays","remain","abs","awalYearNumber","awalYear","awalDate","totalYears","i","length","numberDaysOfCurrentYear","totalMonths","j","getDayNumbersOfAhierMonth","ahierMonth","BilanSa","Takuh","getMonthNumbersOfAhierYear","previousYear","addAhierYears","numberOfMonths","newNasak","remainNasak","numberOfDay","BilanKlau","BilanLima","BilanTajuh","BilanSalipan","BilanPuis","BilanDua","BilanPak","BilanNem","BilanDalipan","BilanSapluh","BilanMak","BilanBhang","newDt","setDate","getDate","toYearAhier","startAhierYear","Pabuei","numberOfAhierYear","newGregoryDate","y","ahierYear","numberOfAhierMonth","addedGregoryDays","m","dayNumbersOfAhierMonth","firstDayOfAhierMonth","getDay","getAwalDateByGregoryDate","addAwalMonths","ahierMonthItem","dateOfGregoryCalendar","dayNumbersOfAwalMonth","firstDayOfAwalMonth","Number","parseInt","getStartDayByAwalMonth","push","addGregoryDays","n","divStyle","display","flexDirection","fontSize","Day","style","getMonth","Month","setYear","setMonth","firstDateOfMonth","setFirstDateOfMonth","firstDayOfMonth","setFirstDayOfMonth","React","firstDate","count","rows","weeks","cells","cellDate","Container","Row","Col","md","textAlign","ButtonToolbar","ButtonGroup","Button","className","onClick","marginLeft","nowDate","getFullYear","Table","striped","bordered","hover","height","tableLayout","map","d","index","padding","GregoryDateStyle","color","paddingTop","paddingBottom","ahierDateStyle","awalDateStyle","DayAhier","dateGregory","dateAwal","dateAhier","MonthAhier","setAhierMonth","firstAhierDate","firstDateOfAhierMonth","setFirstDateOfAhierMonth","setFirstDayOfAhierMonth","firstDateOfAwalMonth","setFirstDateOfAwalMonth","setFirstDayOfAwalMonth","firstDateOfGregoryMonth","setFirstDateOfGregoryMonth","firstDayOfGregoryMonth","setFirstDayOfGregoryMonth","matrix","buildMatrixCalendar","console","log","JSON","stringify","currentAhierMonth","firstAwalDate","cellAhierDate","addAhierDays","week","cellAwalDate","addAwalDays","GregoryDate","addAhierMonths","DayAwal","MonthAwal","setAwalMonth","Calendar","sakawiType","monthAwal","monthAhier","footerStyle","background","justifyContent","Layout","fluid","Navbar","bg","expand","Brand","href","Toggle","Collapse","id","Nav","maxHeight","navbarScroll","Link","NavDropdown","title","Item","Divider","sm","Card","Header","ListGroup","children","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff12261e.chunk.js","sourcesContent":["export declare type VariantType = 'primary' | 'info' | 'secondary' | 'success' | 'warning' | 'danger' | 'light' | 'link';\r\n\r\nexport enum MonthEnum {\r\n    January = 0,\r\n    February,\r\n    March,\r\n    April,\r\n    May,\r\n    June,\r\n    July,\r\n    August,\r\n    September,\r\n    October,\r\n    November,\r\n    December\r\n}\r\n\r\nexport enum DayEnum {\r\n    Sunday = 0,\r\n    Monday,\r\n    Tuesday,\r\n    Wednesday,\r\n    Thursday,\r\n    Friday,\r\n    Saturday\r\n}\r\n\r\nexport enum IkasSarakEnum {\r\n    Liéh = 0,\r\n    Hak,\r\n    Jim,\r\n    Jây,\r\n    Dal,\r\n    Bak,\r\n    Waw,\r\n    JimLuic\r\n}\r\n\r\nexport enum NasakEnum {\r\n    Takuh = 0,\r\n    Kabaw,\r\n    Rimaong,\r\n    Tapay,\r\n    InâGirai,\r\n    UlaAnaih,\r\n    Asaih,\r\n    Pabaiy,\r\n    Kra,\r\n    Manuk,\r\n    Asau,\r\n    Pabuei\r\n}\r\n\r\nexport enum AwalMonthEnum {\r\n    Muharam = 0,\r\n    Syafar,\r\n    Rabiulawal,\r\n    Rabiulakhir,\r\n    Jamadilawal,\r\n    Jamadilakhir,\r\n    Rejab,\r\n    Sykban,\r\n    Ramadan,\r\n    Syawal,\r\n    Julkaejah,\r\n    Julhiijaah\r\n}\r\n\r\nexport enum AhierMonthEnum {\r\n    BilanSa = 0,\r\n    BilanDua,\r\n    BilanKlau,\r\n    BilanPak,\r\n    BilanLima,\r\n    BilanNem,\r\n    BilanTajuh,\r\n    BilanDalipan,\r\n    BilanSalipan,\r\n    BilanSapluh,\r\n    BilanPuis,\r\n    BilanMak,\r\n    BilanBhang\r\n}\r\n\r\nexport function displayMonthName(month: AhierMonthEnum) {\r\n    let result = '';\r\n\r\n    switch (month) {\r\n        case 0:\r\n            result = 'ꨝꨪꨤꩆ ꨧꨩ';\r\n            break;\r\n        case 1:\r\n            result = 'ꨝꨪꨤꩆ ꨕꨶꨩ';\r\n            break;\r\n        case 2:\r\n            result = 'ꨝꨪꨤꩆ ꨆꨵꨮꨭ';\r\n            break;\r\n        case 3:\r\n            result = 'ꨝꨤꩆ ꨛꨩꩀ';\r\n            break;\r\n        case 4:\r\n            result = 'ꨝꨤꩆ ꨤꨪꨟꨩ';\r\n            break;\r\n        case 5:\r\n            result = 'ꨝꨤꩆ ꨘꩌ';\r\n            break;\r\n        case 6:\r\n            result = 'ꨝꨤꩆ ꨓꨎꨭꩍ';\r\n            break;\r\n        case 7:\r\n            result = 'ꨝꨤꩆ ꨕꨤꨪꨚꩆ';\r\n            break;\r\n        case 8:\r\n            result = 'ꨝꨤꩆ ꨧꨤꨪꨚꩆ';\r\n            break;\r\n        case 9:\r\n            result = 'ꨝꨤꩆ ꨧꨚꨵꨭꩍ';\r\n            break;\r\n        case 10:\r\n            result = 'ꨝꨤꩆ ꨚꨶꨪꩋ';\r\n            break;\r\n        case 11:\r\n            result = 'ꨝꨤꩆ ꨠꩀ';\r\n            break;\r\n        case 12:\r\n            result = 'ꨝꨤꩆ ꨞꩃ';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function displayNasakName(nasak: NasakEnum){\r\n    let result = '';\r\n\r\n    switch (nasak) {\r\n        case 0:\r\n            result = 'ꨓꨆꨭꩍ';\r\n            break;\r\n        case 1:\r\n            result = 'ꨆꨝꨥ';\r\n            break;\r\n        case 2:\r\n            result = 'ꨣꨪꨟꨯꨱꩃ';\r\n            break;\r\n        case 3:\r\n            result = 'ꨓꨛꩈ';\r\n            break;\r\n        case 4:\r\n            result = 'ꨁꨗꨩ ꨈꨪꨣꩈ';\r\n            break;\r\n        case 5:\r\n            result = 'ꨂꨤꨩ ꨗꨰꩍ';\r\n            break;\r\n        case 6:\r\n            result = 'ꨀꨧꨰꩍ';\r\n            break;\r\n        case 7:\r\n            result = 'ꨚꨝꨰꩈ';\r\n            break;\r\n        case 8:\r\n            result = 'ꨆꨴꨩ';\r\n            break;\r\n        case 9:\r\n            result = 'ꨟꨗꨭꩀ';\r\n            break;\r\n        case 10:\r\n            result = 'ꨀꨧꨮꨭ';\r\n            break;\r\n        case 11:\r\n            result = 'ꨚꨝꨶꨬ';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function displayIkasSarakName(ikasSarak: IkasSarakEnum){\r\n    let result = '';\r\n\r\n    switch (ikasSarak) {\r\n        case 0:\r\n            result = '1';\r\n            break;\r\n        case 1:\r\n            result = '5';\r\n            break;\r\n        case 2:\r\n            result = '3';\r\n            break;\r\n        case 3:\r\n            result = '7';\r\n            break;\r\n        case 4:\r\n            result = '4';\r\n            break;\r\n        case 5:\r\n            result = '2';\r\n            break;\r\n        case 6:\r\n            result = '6';\r\n            break;\r\n        case 7:\r\n            result = '3';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport { ProgressBar } from \"react-bootstrap\";\r\nimport { VariantType } from \"../enums/enum\";\r\n\r\nexport interface CountDownBarProps {\r\n    dateName: string;\r\n    variantType: VariantType;\r\n    toDate: Date;\r\n}\r\n\r\nexport const CountDownBar = (props: CountDownBarProps) => {\r\n    const [percent, setPercent] = useState(100);\r\n    const [days, setDays] = useState(0);\r\n    const [hours, setHours] = useState(0);\r\n    const [minutes, setMinutes] = useState(0);\r\n    const [seconds, setSeconds] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            init();\r\n        }, 1000);\r\n    });\r\n\r\n    function init() {\r\n        if (!props.toDate) {\r\n            return;\r\n        }\r\n\r\n        const now = new Date().getTime();\r\n        const distance = props.toDate.getTime() - now;\r\n        const timeOfYear = 365 * 24 * 60 * 60 * 1000;\r\n        const percent = distance / timeOfYear * 100;\r\n        setPercent(percent);\r\n\r\n        // Time calculations for days, hours, minutes and seconds\r\n        const days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n        const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n        const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n        const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n        setDays(days);\r\n        setHours(hours);\r\n        setMinutes(minutes);\r\n        setSeconds(seconds);\r\n    }\r\n\r\n    return (\r\n        <ProgressBar variant={props.variantType.toString()} now={percent}\r\n            label={`${props.dateName}: còn ${days} ngày - ${(\"0\" + hours).slice(-2)}h${(\"0\" + minutes).slice(-2)}'${(\"0\" + seconds).slice(-2)}\"`} />\r\n    );\r\n}","import { AwalMonthEnum, IkasSarakEnum } from \"../enums/enum\";\r\n\r\nexport const firstDateOfSakawiAwal_Lieh_1439 = new Date(2017, 8, 22);//22/09/2017\r\nexport const yearNumberOfSakawiAwal_Lieh_1439 = 1439;\r\nexport const firstDateOfSakawiAwal_Hak_1440 = new Date(2018, 8, 11);\r\nexport const firstDateOfSakawiAhier_Pabuei_JimLuic_2019 = new Date(2019, 3, 4);//04/04/2019\r\nexport const totalDaysOf8AwalYearCycle = 2835;\r\n\r\nexport const awalYearArray: { no: number; name: IkasSarakEnum; numberOfDays: number }[] = [\r\n    { no: 1, name: IkasSarakEnum.Liéh, numberOfDays: 354 },\r\n    { no: 2, name: IkasSarakEnum.Hak, numberOfDays: 355 },\r\n    { no: 3, name: IkasSarakEnum.Jim, numberOfDays: 354 },\r\n    { no: 4, name: IkasSarakEnum.Jây, numberOfDays: 354 },\r\n    { no: 5, name: IkasSarakEnum.Dal, numberOfDays: 355 },\r\n    { no: 6, name: IkasSarakEnum.Bak, numberOfDays: 354 },\r\n    { no: 7, name: IkasSarakEnum.Waw, numberOfDays: 354 },\r\n    { no: 8, name: IkasSarakEnum.JimLuic, numberOfDays: 355 }\r\n];\r\n\r\nexport const awalMonthArray: { no: number; name: AwalMonthEnum; numberOfDays: number }[] = [\r\n    { no: 1, name: AwalMonthEnum.Muharam, numberOfDays: 30 },\r\n    { no: 2, name: AwalMonthEnum.Syafar, numberOfDays: 29 },\r\n    { no: 3, name: AwalMonthEnum.Rabiulawal, numberOfDays: 30 },\r\n    { no: 4, name: AwalMonthEnum.Rabiulakhir, numberOfDays: 29 },\r\n    { no: 5, name: AwalMonthEnum.Jamadilawal, numberOfDays: 30 },\r\n    { no: 6, name: AwalMonthEnum.Jamadilakhir, numberOfDays: 29 },\r\n    { no: 7, name: AwalMonthEnum.Rejab, numberOfDays: 30 },\r\n    { no: 8, name: AwalMonthEnum.Sykban, numberOfDays: 29 },\r\n    { no: 9, name: AwalMonthEnum.Ramadan, numberOfDays: 30 },\r\n    { no: 10, name: AwalMonthEnum.Syawal, numberOfDays: 29 },\r\n    { no: 11, name: AwalMonthEnum.Julkaejah, numberOfDays: 30 },\r\n    { no: 12, name: AwalMonthEnum.Julhiijaah, numberOfDays: 30 }\r\n]","import dataConfig from '../data/SakawiTakaiCiim.json';\r\nimport { AhierMonthEnum, AwalMonthEnum, IkasSarakEnum, NasakEnum } from \"../enums/enum\";\r\nimport { AhierDate, AhierMonth, AhierYear } from \"../model/AhierDate\";\r\nimport { AwalDate, AwalMonth, AwalYear } from '../model/AwalDate';\r\nimport { MatrixCalendarType } from \"../model/MatrixCalendarType\";\r\nimport { awalMonthArray, awalYearArray, firstDateOfSakawiAhier_Pabuei_JimLuic_2019, firstDateOfSakawiAwal_Lieh_1439, totalDaysOf8AwalYearCycle, yearNumberOfSakawiAwal_Lieh_1439 } from './constant';\r\n\r\nexport default class Helper {\r\n    //#region Awal\r\n    static addAwalDays(currentDate: AwalDate, addedDays: number) {\r\n        let numberOfDays = Helper.getDayNumbersOfAwalMonth(currentDate.awalMonth.year, currentDate.awalMonth.month);\r\n        let newDays = currentDate.date + addedDays;\r\n        let newMonth = currentDate.awalMonth.month;\r\n        let newYear = currentDate.awalMonth.year;\r\n    \r\n        let result: AwalDate = {\r\n            date: 1,\r\n            awalMonth: {\r\n                month: AwalMonthEnum.Jamadilakhir,\r\n                year: { ikasSarak: IkasSarakEnum.Liéh }\r\n            }\r\n        };\r\n    \r\n        if (newDays > numberOfDays) {\r\n            if (currentDate.awalMonth.month < 11) {\r\n                newMonth = currentDate.awalMonth.month + 1;\r\n            } else {\r\n                newMonth = 0;\r\n    \r\n                if (currentDate.awalMonth.year.ikasSarak < 7) {\r\n                    newYear.ikasSarak = currentDate.awalMonth.year.ikasSarak + 1;\r\n                } else {\r\n                    newYear.ikasSarak = 0;\r\n                }\r\n            }\r\n    \r\n            result = {\r\n                date: newDays - numberOfDays,\r\n                awalMonth: {month:newMonth, year: newYear}\r\n            };\r\n    \r\n        } else if (newDays <= 0) {\r\n            if (currentDate.awalMonth.month > 0) {\r\n                newMonth = currentDate.awalMonth.month - 1;\r\n            } else {\r\n                newMonth = 11;\r\n    \r\n                if (currentDate.awalMonth.year.ikasSarak > 0) {\r\n                    newYear.ikasSarak = currentDate.awalMonth.year.ikasSarak - 1;\r\n                } else {\r\n                    newYear.ikasSarak = 7;\r\n                }\r\n            }\r\n    \r\n            result = {\r\n                date: Helper.getDayNumbersOfAwalMonth(currentDate.awalMonth.year, currentDate.awalMonth.month - 1) + newDays,\r\n                awalMonth: { month: newMonth,year: newYear}\r\n            };\r\n        }\r\n        else {\r\n            result = {\r\n                date: newDays,\r\n                awalMonth: currentDate.awalMonth\r\n            };\r\n        }\r\n    \r\n        return result;\r\n    }\r\n    \r\n    static addAwalMonths(currentMonth: AwalMonth, addedMonths: number) {\r\n        let newMonth = currentMonth.month + addedMonths;\r\n        let quotient = Math.floor(newMonth / 12);\r\n        let remain = Helper.getMod(newMonth, 12);\r\n    \r\n        let result: AwalMonth = {\r\n            month: remain,\r\n            year: Helper.addAwalYears(currentMonth.year, quotient)\r\n        }\r\n    \r\n        return result;\r\n    }\r\n    \r\n    static addAwalYears(currentYear: AwalYear, addedYears: number) {\r\n        let newIkasSarak = currentYear.ikasSarak + addedYears;\r\n        let remain = Helper.getMod(newIkasSarak, 8);\r\n        let newYearNumber = (currentYear.yearNumber ?? 0) + addedYears;\r\n    \r\n        let result: AwalYear = {\r\n            ikasSarak: remain,\r\n            yearNumber: newYearNumber\r\n        }\r\n    \r\n        return result;\r\n    }\r\n\r\n    static getDayNumbersOfAwalMonth(year: AwalYear, month: AwalMonthEnum) {\r\n        let numberOfDay = 0;\r\n\r\n        if (month === AwalMonthEnum.Muharam || month === AwalMonthEnum.Rabiulawal || month === AwalMonthEnum.Jamadilawal ||\r\n            month === AwalMonthEnum.Rejab || month === AwalMonthEnum.Ramadan || month === AwalMonthEnum.Julkaejah) {\r\n            // Tháng lẻ: (30 ngày), gồm: 1,3,5,7,9,11.\r\n            numberOfDay = 30;\r\n        } else if (month === AwalMonthEnum.Syafar || month === AwalMonthEnum.Rabiulakhir || month === AwalMonthEnum.Jamadilakhir ||\r\n            month === AwalMonthEnum.Sykban || month === AwalMonthEnum.Syawal) {\r\n            // Tháng chẳn: (29 ngày), gồm: 2,4,6,8,10. \r\n            numberOfDay = 29;\r\n        } else {\r\n            // Riêng tháng 12: \r\n            if (year.ikasSarak === IkasSarakEnum.Hak || year.ikasSarak === IkasSarakEnum.Dal || year.ikasSarak === IkasSarakEnum.JimLuic) {\r\n                // năm nhuận (thun \"Nâh\": Hak, Dal, Jim luic): 30 ngày\r\n                numberOfDay = 30;\r\n            } else {\r\n                // năm thường (thun \"Wak\"): 29 ngày\r\n                numberOfDay = 29;\r\n            }\r\n        }\r\n\r\n        return numberOfDay;\r\n    }\r\n\r\n    static getStartDayByAwalMonth(year: AwalYear, month: AwalMonthEnum) {\r\n        let yearName = IkasSarakEnum[year.ikasSarak];\r\n        let yearItem = dataConfig.filter(x => x.ArabYear === yearName)[0];\r\n        let result = '';\r\n\r\n        switch (month) {\r\n            case 0:\r\n                result = yearItem['Month_01'];\r\n                break;\r\n            case 1:\r\n                result = yearItem['Month_02'];\r\n                break;\r\n            case 2:\r\n                result = yearItem['Month_03'];\r\n                break;\r\n            case 3:\r\n                result = yearItem['Month_04'];\r\n                break;\r\n            case 4:\r\n                result = yearItem['Month_05'];\r\n                break;\r\n            case 5:\r\n                result = yearItem['Month_06'];\r\n                break;\r\n            case 6:\r\n                result = yearItem['Month_07'];\r\n                break;\r\n            case 7:\r\n                result = yearItem['Month_08'];\r\n                break;\r\n            case 8:\r\n                result = yearItem['Month_09'];\r\n                break;\r\n            case 9:\r\n                result = yearItem['Month_10'];\r\n                break;\r\n            case 10:\r\n                result = yearItem['Month_11'];\r\n                break;\r\n            case 11:\r\n                result = yearItem['Month_12'];\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static getAwalDateByGregoryDate(date: Date) {\r\n        let differenceInTime = date.getTime() - firstDateOfSakawiAwal_Lieh_1439.getTime();\r\n        let differenceInDays = differenceInTime / (1000 * 3600 * 24);\r\n        let remain = Helper.getMod(differenceInDays, totalDaysOf8AwalYearCycle);\r\n        let quotient = Math.floor(Math.abs(differenceInDays) / totalDaysOf8AwalYearCycle);\r\n\r\n        let awalYearNumber = yearNumberOfSakawiAwal_Lieh_1439;\r\n        let awalYear = IkasSarakEnum.Liéh;\r\n        let awalMonth = AwalMonthEnum.Muharam;\r\n        let awalDate = 0;\r\n        let totalYears = 0;\r\n        for (let i = 0; i < awalYearArray.length; i++) {\r\n            totalYears += awalYearArray[i].numberOfDays;\r\n            if (remain < totalYears) {\r\n                awalYear = awalYearArray[i].name;\r\n\r\n                //TODO\r\n                if (differenceInDays > 0) {\r\n                    awalYearNumber += (quotient * 8) + i;\r\n                } else {\r\n                    awalYearNumber -= (quotient * 8) + i;\r\n                }\r\n                let numberDaysOfCurrentYear = remain - (totalYears - awalYearArray[i].numberOfDays);\r\n\r\n                let totalMonths = 0;\r\n                for (let j = 0; j < awalMonthArray.length; j++) {\r\n                    totalMonths += awalMonthArray[j].numberOfDays;\r\n                    if (numberDaysOfCurrentYear < totalMonths) {\r\n                        awalMonth = awalMonthArray[j].name;\r\n                        let numberDaysOfCurrentMonth = numberDaysOfCurrentYear - (totalMonths - awalMonthArray[j].numberOfDays);\r\n                        awalDate = numberDaysOfCurrentMonth + 1;\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        let resultDate: AwalDate = {\r\n            date: awalDate,\r\n            awalMonth: { month: awalMonth, year: { ikasSarak: awalYear, yearNumber: awalYearNumber } }\r\n        }\r\n\r\n        return resultDate;\r\n    }    \r\n    //#endregion\r\n\r\n    //#region Ahier\r\n    //TODO\r\n    static addAhierDays(currentDate: AhierDate, addedDays: number) {\r\n        let numberOfDays = Helper.getDayNumbersOfAhierMonth(currentDate.ahierMonth.year, currentDate.ahierMonth.month);\r\n        let newDays = currentDate.date + addedDays;\r\n        let newMonth = currentDate.ahierMonth.month;\r\n        let newYear = currentDate.ahierMonth.year;\r\n\r\n        let result: AhierDate = {\r\n            date: 1,\r\n            ahierMonth: {\r\n                month: AhierMonthEnum.BilanSa,\r\n                year: { nasak: NasakEnum.Takuh, ikasSarak: IkasSarakEnum.Liéh }\r\n            }\r\n        };\r\n\r\n        if (newDays > numberOfDays) {\r\n            if (currentDate.ahierMonth.month < Helper.getMonthNumbersOfAhierYear(currentDate.ahierMonth.year)) {\r\n                newMonth = currentDate.ahierMonth.month + 1;\r\n            } else {\r\n                newMonth = 0;\r\n\r\n                if (currentDate.ahierMonth.year.ikasSarak < 7) {\r\n                    newYear.ikasSarak = currentDate.ahierMonth.year.ikasSarak + 1;\r\n                } else {\r\n                    newYear.ikasSarak = 0;\r\n                }\r\n            }\r\n\r\n            result = {\r\n                date: newDays - numberOfDays,\r\n                ahierMonth: {month:newMonth, year: newYear}\r\n            };\r\n\r\n        } else if (newDays <= 0) {\r\n            if (currentDate.ahierMonth.month > 0) {\r\n                newMonth = currentDate.ahierMonth.month - 1;\r\n            } else {\r\n                let previousYear = Helper.addAhierYears(currentDate.ahierMonth.year, -1);\r\n                newMonth = Helper.getMonthNumbersOfAhierYear(previousYear) - 1;\r\n\r\n                if (currentDate.ahierMonth.year.ikasSarak > 0) {\r\n                    newYear.ikasSarak = currentDate.ahierMonth.year.ikasSarak - 1;\r\n                } else {\r\n                    newYear.ikasSarak = 7;\r\n                }\r\n            }\r\n\r\n            result = {\r\n                date: Helper.getDayNumbersOfAhierMonth(currentDate.ahierMonth.year, currentDate.ahierMonth.month - 1) + newDays,\r\n                ahierMonth: { month: newMonth,year: newYear}\r\n            };\r\n        }\r\n        else {\r\n            result = {\r\n                date: newDays,\r\n                ahierMonth: currentDate.ahierMonth\r\n            };\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static addAhierMonths(currentMonth: AhierMonth, addedMonths: number) {\r\n        let numberOfMonths = Helper.getMonthNumbersOfAhierYear(currentMonth.year);\r\n        let newMonth = currentMonth.month + addedMonths;\r\n        let quotient = Math.floor(newMonth / numberOfMonths);\r\n        let remain = Helper.getMod(newMonth, numberOfMonths);\r\n\r\n        let result: AhierMonth = {\r\n            month: remain,\r\n            year: Helper.addAhierYears(currentMonth.year, quotient)\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static addAhierYears(currentYear: AhierYear, addedYears: number) {\r\n        let newNasak = (currentYear.nasak + addedYears) % 12;\r\n        let remainNasak = Helper.getMod(newNasak, 12);\r\n    \r\n        let newIkasSarak = (currentYear.ikasSarak + addedYears) % 8;\r\n        let remainIkasSarak = Helper.getMod(newIkasSarak, 8);\r\n    \r\n        let newYearNumber = (currentYear.yearNumber ?? 0) + addedYears;\r\n    \r\n        let result: AhierYear = {\r\n            nasak: remainNasak,\r\n            ikasSarak: remainIkasSarak,\r\n            yearNumber: newYearNumber\r\n        }\r\n    \r\n        return result;\r\n    }\r\n\r\n    static getDayNumbersOfAhierMonth(year: AhierYear, month: AhierMonthEnum) {\r\n        let numberOfDay = 0;\r\n\r\n        if (month === AhierMonthEnum.BilanSa || month === AhierMonthEnum.BilanKlau || month === AhierMonthEnum.BilanLima ||\r\n            month === AhierMonthEnum.BilanTajuh || month === AhierMonthEnum.BilanSalipan || month === AhierMonthEnum.BilanPuis) {\r\n            // Tháng lẻ - \"bilan tapak\": (30 ngày), gồm: 1,3,5,7,9,11.\r\n            numberOfDay = 30;\r\n        } else if (month === AhierMonthEnum.BilanDua || month === AhierMonthEnum.BilanPak || month === AhierMonthEnum.BilanNem ||\r\n            month === AhierMonthEnum.BilanDalipan || month === AhierMonthEnum.BilanSapluh) {\r\n            // Tháng chẳn - \"bilan u\" : (29 ngày), gồm: 2,4,6,8,10. \r\n            numberOfDay = 29;\r\n        } else if (month === AhierMonthEnum.BilanMak) {\r\n            // Tháng 12:  \r\n            if (year.ikasSarak === IkasSarakEnum.Hak || year.ikasSarak === IkasSarakEnum.Dal || year.ikasSarak === IkasSarakEnum.JimLuic) {\r\n                // năm nhuận (thun \"Nâh\": Hak, Dal, Jim luic): 30 ngày\r\n                numberOfDay = 30;\r\n            } else {\r\n                // năm thường (thun \"Wak\"): 29 ngày\r\n                numberOfDay = 29;\r\n            }\r\n        } else if (month === AhierMonthEnum.BilanBhang) {\r\n            if (year.ikasSarak === IkasSarakEnum.Hak || year.ikasSarak === IkasSarakEnum.Dal || year.ikasSarak === IkasSarakEnum.JimLuic) {\r\n                // năm nhuận (thun \"Nâh\": Hak, Dal, Jim luic): 29 ngày\r\n                numberOfDay = 29;\r\n            }\r\n        }\r\n\r\n        return numberOfDay;\r\n    }\r\n\r\n    static getMonthNumbersOfAhierYear(year: AhierYear) {\r\n        if (year.ikasSarak === IkasSarakEnum.Hak\r\n            || year.ikasSarak === IkasSarakEnum.Dal\r\n            || year.ikasSarak === IkasSarakEnum.JimLuic) {\r\n            return 13;\r\n        }\r\n        return 12;\r\n    }\r\n    //#endregion\r\n\r\n    //#region Gregory\r\n    static addGregoryDays(date: Date, numberOfDays: number) {\r\n        let newDt = new Date(date);\r\n        newDt.setDate(date.getDate() + numberOfDays);\r\n        return newDt;\r\n    }\r\n    //#endregion\r\n\r\n    static buildMatrixCalendar(toYearAhier: number) {\r\n        let result: MatrixCalendarType[] = [];\r\n\r\n        const startAhierYear: AhierYear = {\r\n            nasak: NasakEnum.Pabuei,\r\n            ikasSarak: IkasSarakEnum.JimLuic,\r\n            yearNumber: 2019\r\n        }\r\n\r\n        const numberOfAhierYear = toYearAhier - (startAhierYear.yearNumber ?? 0);\r\n        let newGregoryDate = firstDateOfSakawiAhier_Pabuei_JimLuic_2019;\r\n\r\n        for (let y = 0; y < numberOfAhierYear; y++) {\r\n            const ahierYear = Helper.addAhierYears(startAhierYear, y);\r\n            const numberOfAhierMonth = Helper.getMonthNumbersOfAhierYear(ahierYear);\r\n            let addedGregoryDays = 0;\r\n\r\n            for (let m = 0; m < numberOfAhierMonth; m++) {\r\n                const ahierMonth: AhierMonth = { month: m, year: ahierYear };\r\n                const dayNumbersOfAhierMonth = Helper.getDayNumbersOfAhierMonth(ahierYear, m);\r\n                const firstDayOfAhierMonth = newGregoryDate.getDay();\r\n\r\n                const awalDate = Helper.getAwalDateByGregoryDate(newGregoryDate);\r\n                const awalMonth = Helper.addAwalMonths(awalDate.awalMonth, 1);\r\n                const dayNumbersOfAwalMonth = Helper.getDayNumbersOfAwalMonth(awalMonth.year, awalMonth.month);\r\n                const firstDayOfAwalMonth = Number.parseInt(Helper.getStartDayByAwalMonth(awalMonth.year, awalMonth.month)) - 1; // Sunday is 0 \r\n\r\n                let ahierMonthItem: MatrixCalendarType = {\r\n                    ahierMonth: ahierMonth,\r\n                    dayNumbersOfAhierMonth: dayNumbersOfAhierMonth,\r\n                    firstDayOfAhierMonth: firstDayOfAhierMonth,\r\n                    dateOfGregoryCalendar: newGregoryDate,\r\n                    awalMonth: awalMonth,\r\n                    dayNumbersOfAwalMonth: dayNumbersOfAwalMonth,\r\n                    firstDayOfAwalMonth: firstDayOfAwalMonth\r\n                }\r\n\r\n                result.push(ahierMonthItem);\r\n\r\n                addedGregoryDays += dayNumbersOfAhierMonth;\r\n                newGregoryDate = Helper.addGregoryDays(firstDateOfSakawiAhier_Pabuei_JimLuic_2019, addedGregoryDays);\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static getMod(n: number, m: number) {\r\n        const remain = n % m;\r\n        return Math.floor(remain >= 0 ? remain : remain + m);\r\n    };\r\n}","import { AhierDate } from \"../model/AhierDate\";\r\nimport { AwalDate } from \"../model/AwalDate\";\r\n\r\ninterface DayProps {\r\n    date: Date;\r\n    dateAwal?: AwalDate;\r\n    dateAhier?: AhierDate;\r\n}\r\n\r\nconst divStyle: React.CSSProperties = {\r\n    display: \"flex\",\r\n    flexDirection: \"row-reverse\",\r\n    fontSize: \"0.8rem\"\r\n}\r\n\r\nexport const Day = (props: DayProps) => {\r\n    return (\r\n        <td>\r\n            <div style={divStyle}>\r\n                {props.date.getDate()}.{props.date.getMonth() + 1}\r\n            </div>\r\n            <div>\r\n\r\n            </div>\r\n        </td>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { Button, ButtonGroup, ButtonToolbar, Col, Container, Row, Table } from \"react-bootstrap\";\r\nimport { MonthEnum } from \"../enums/enum\";\r\nimport Helper from '../utility/helper';\r\nimport { Day } from \"./day\";\r\n\r\ninterface MonthProps {\r\n    year: number;\r\n    month: number;\r\n}\r\n\r\nexport const Month = (props: MonthProps) => {\r\n    const [year, setYear] = useState(props.year);\r\n    const [month, setMonth] = useState(props.month);\r\n    const [firstDateOfMonth, setFirstDateOfMonth] = useState(new Date());\r\n    const [firstDayOfMonth, setFirstDayOfMonth] = useState(0);\r\n\r\n    React.useEffect(() => {\r\n        function init() {\r\n            const firstDate = new Date(year, month, 1);\r\n            setFirstDateOfMonth(firstDate);\r\n            setFirstDayOfMonth(firstDate.getDay());\r\n        }\r\n\r\n        init();\r\n    }, [year, month]);\r\n\r\n    /*function addGregoryDays(date: Date, numberOfDays: number) {\r\n        let newDt = new Date(date);\r\n        newDt.setDate(date.getDate() + numberOfDays);\r\n        return newDt;\r\n    }*/\r\n\r\n    function handleGoToToday() {\r\n        const nowDate = new Date();\r\n        setMonth(nowDate.getMonth());\r\n        setYear(nowDate.getFullYear());\r\n    }\r\n\r\n    function handleGoToPreviousMonth() {\r\n        if (month > 0) {\r\n            setMonth(month - 1);\r\n        } else {\r\n            setMonth(11);\r\n            setYear(year - 1);\r\n        }\r\n    }\r\n\r\n    function handleGoToNextMonth() {\r\n        if (month + 1 < 11) {\r\n            setMonth(month + 1);\r\n        } else {\r\n            setMonth(0);\r\n            setYear(year + 1);\r\n        }\r\n    }\r\n\r\n    // draw Calendar Table\r\n    let count = 0;\r\n    let rows = [];\r\n\r\n    for (let weeks = 0; weeks < 6; weeks++) {\r\n        let cells = []\r\n        for (let days = 0; days < 7; days++) {\r\n            let cellDate = Helper.addGregoryDays(firstDateOfMonth, (count - firstDayOfMonth));\r\n            cells.push(<Day key={`cell${weeks}-${days}`} date={cellDate}></Day>);\r\n            count++\r\n        }\r\n\r\n        rows.push(<tr key={weeks}>{cells}</tr>)\r\n    }\r\n\r\n    const dayNames = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    const tableStyle: React.CSSProperties = {\r\n        height: \"400px\",\r\n        tableLayout: \"fixed\"\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col md={4} style={{ textAlign: \"left\" }}>\r\n                    <ButtonToolbar aria-label=\"Toolbar with button groups\">\r\n                        <ButtonGroup aria-label=\"Basic example\">\r\n                            <Button variant=\"secondary\" className=\"fa fa-chevron-left\" onClick={handleGoToPreviousMonth} />\r\n                            <Button variant=\"secondary\" className=\"fa fa-chevron-right\" onClick={handleGoToNextMonth} />\r\n                        </ButtonGroup>\r\n                        <ButtonGroup aria-label=\"Third group\" style={{ marginLeft: \".75em\" }}>\r\n                            <Button variant=\"secondary\" onClick={handleGoToToday}>Today</Button>\r\n                        </ButtonGroup>\r\n                    </ButtonToolbar>\r\n                </Col>\r\n                <Col md={4} style={{ textAlign: \"center\" }}>\r\n                    <h2>{MonthEnum[month]} {year}</h2>\r\n                </Col>\r\n                <Col md={4}></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Table striped bordered hover style={tableStyle}>\r\n                        <thead>\r\n                            <tr>\r\n                                {dayNames.map((d, index) =>\r\n                                    <th style={{ padding: \"2px\", textAlign: \"center\" }} key={index}>{d}</th>\r\n                                )}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {rows}\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n","import { Col, Row } from \"react-bootstrap\";\r\nimport { IkasSarakEnum, NasakEnum } from \"../enums/enum\";\r\nimport { AhierDate } from \"../model/AhierDate\";\r\nimport { AwalDate } from \"../model/AwalDate\";\r\n\r\ninterface DayAhierProps {\r\n    dateGregory: Date;\r\n    dateAwal: AwalDate;\r\n    dateAhier: AhierDate;\r\n}\r\n\r\nconst GregoryDateStyle: React.CSSProperties = {\r\n    fontSize: \"0.7rem\",\r\n    color: \"black\",\r\n    paddingTop: \"0.1rem\",\r\n    paddingBottom: \"0.1rem\",\r\n}\r\n\r\nconst ahierDateStyle: React.CSSProperties = {\r\n    fontSize: \"0.7rem\",\r\n    color: \"orange\",\r\n    paddingTop: \"2rem\",\r\n    paddingBottom: \"0.1rem\",\r\n}\r\n\r\nconst awalDateStyle: React.CSSProperties = {\r\n    flexDirection: \"row\",\r\n    fontSize: \"0.7rem\",\r\n    color: \"green\",\r\n    paddingTop: \"2rem\",\r\n    paddingBottom: \"0.1rem\",\r\n}\r\n\r\nexport const DayAhier = (props: DayAhierProps) => {\r\n    return (\r\n        <td>\r\n            <Row>\r\n                <Col md={6}></Col>\r\n                <Col style={GregoryDateStyle} md={6}>\r\n                    {props.dateGregory.getDate()}/{props.dateGregory.getMonth() + 1}/{props.dateGregory.getFullYear()}\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={6}></Col>\r\n                <Col md={6}></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col style={awalDateStyle} md={6}>\r\n                    {props.dateAwal.date}.{props.dateAwal.awalMonth.month + 1}-{IkasSarakEnum[props.dateAwal.awalMonth.year.ikasSarak]}\r\n                </Col>\r\n                <Col style={ahierDateStyle} md={6}>\r\n                    {props.dateAhier.date}.{props.dateAhier.ahierMonth.month + 1}.{NasakEnum[props.dateAhier.ahierMonth.year.nasak]}-{IkasSarakEnum[props.dateAhier.ahierMonth.year.ikasSarak]}\r\n                </Col>\r\n            </Row>\r\n        </td>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { Button, ButtonGroup, ButtonToolbar, Col, Container, Row, Table } from \"react-bootstrap\";\r\nimport { AhierMonthEnum, IkasSarakEnum, NasakEnum, displayMonthName, displayNasakName, displayIkasSarakName } from \"../enums/enum\";\r\nimport { AhierDate, AhierMonth } from \"../model/AhierDate\";\r\nimport { AwalDate } from \"../model/AwalDate\";\r\nimport Helper from \"../utility/helper\";\r\nimport { DayAhier } from \"./dayAhier\";\r\n\r\ninterface MonthAhierProps {\r\n    ahierMonth: AhierMonth;\r\n}\r\n\r\nexport const MonthAhier = (props: MonthAhierProps) => {\r\n    //const [matrixCalender, setMatrixCalender] = useState<MatrixCalendarType>();\r\n    const [ahierMonth, setAhierMonth] = useState(props.ahierMonth);\r\n    let firstAhierDate: AhierDate = { date: 1, ahierMonth: props.ahierMonth };\r\n    const [firstDateOfAhierMonth, setFirstDateOfAhierMonth] = useState<AhierDate>(firstAhierDate);\r\n    const [firstDayOfAhierMonth, setFirstDayOfAhierMonth] = useState(0);\r\n\r\n    let firstAwalDate: AwalDate = { date: 1, awalMonth: { month: 0, year: { ikasSarak: 0, yearNumber: 1400 } } };\r\n    const [firstDateOfAwalMonth, setFirstDateOfAwalMonth] = useState<AwalDate>(firstAwalDate);\r\n    const [firstDayOfAwalMonth, setFirstDayOfAwalMonth] = useState(0);\r\n\r\n    const [firstDateOfGregoryMonth, setFirstDateOfGregoryMonth] = useState<Date>(new Date(2019,3,4));\r\n    const [firstDayOfGregoryMonth, setFirstDayOfGregoryMonth] = useState(0);\r\n\r\n    React.useEffect(() => {\r\n        function init() {\r\n            // Build matrix Calendar\r\n            let matrix = Helper.buildMatrixCalendar(2022);\r\n            console.log('matrix: ' + JSON.stringify(matrix));\r\n            let currentAhierMonth = matrix.filter(m => m.ahierMonth.month === ahierMonth.month\r\n                && m.ahierMonth.year.yearNumber === ahierMonth.year.yearNumber)[0];\r\n            //setMatrixCalender(currentAhierMonth);\r\n\r\n            // Ahier Date\r\n            let firstAhierDate: AhierDate = { date: 1, ahierMonth: currentAhierMonth.ahierMonth };\r\n            setFirstDateOfAhierMonth(firstAhierDate);\r\n            setFirstDayOfAhierMonth(currentAhierMonth?.firstDayOfAhierMonth);\r\n\r\n            // Awal Date\r\n            let firstAwalDate: AwalDate = { date: 1, awalMonth: currentAhierMonth.awalMonth };\r\n            setFirstDateOfAwalMonth(firstAwalDate);\r\n            setFirstDayOfAwalMonth(currentAhierMonth?.firstDayOfAwalMonth);\r\n\r\n            // Gregory Date\r\n            setFirstDateOfGregoryMonth(currentAhierMonth.dateOfGregoryCalendar);\r\n            setFirstDayOfGregoryMonth(currentAhierMonth.dateOfGregoryCalendar.getDay());\r\n        }\r\n\r\n        init();\r\n    }, [ahierMonth]);\r\n\r\n    function handleGoToToday() {\r\n        let ahierMonth: AhierMonth = { month: AhierMonthEnum.BilanSa, year: { nasak: NasakEnum.Pabuei, ikasSarak: IkasSarakEnum.JimLuic, yearNumber: 2019 } };\r\n        setAhierMonth(ahierMonth);\r\n    }\r\n\r\n    function handleGoToPreviousMonth() {\r\n        setAhierMonth(Helper.addAhierMonths(ahierMonth, -1));\r\n    }\r\n\r\n    function handleGoToNextMonth() {\r\n        setAhierMonth(Helper.addAhierMonths(ahierMonth, 1));\r\n    }\r\n\r\n    // draw Calendar Table\r\n    let count = 0;\r\n    let rows = [];\r\n\r\n    for (let weeks = 0; weeks < 6; weeks++) {\r\n        let cells = []\r\n        for (let days = 0; days < 7; days++) {\r\n            let cellAhierDate = Helper.addAhierDays(firstDateOfAhierMonth, (count - firstDayOfAhierMonth));\r\n            let dateAhier: AhierDate = {\r\n                date: cellAhierDate.date,\r\n                ahierMonth: cellAhierDate.ahierMonth\r\n            }\r\n\r\n            let week = 0;\r\n            if (firstDayOfAwalMonth < firstDayOfAhierMonth) {\r\n                week = 7;\r\n            }\r\n\r\n            let cellAwalDate = Helper.addAwalDays(firstDateOfAwalMonth, (count - firstDayOfAwalMonth - week));\r\n            let dateAwal: AwalDate = {\r\n                date: cellAwalDate.date,\r\n                awalMonth: cellAwalDate.awalMonth\r\n            }\r\n\r\n            let GregoryDate = Helper.addGregoryDays(firstDateOfGregoryMonth, (count - firstDayOfGregoryMonth));\r\n\r\n            cells.push(<DayAhier key={`cell${weeks}-${days}`} dateAhier={dateAhier} dateAwal={dateAwal} dateGregory={GregoryDate}></DayAhier>);\r\n            count++;\r\n        }\r\n\r\n        rows.push(<tr key={weeks}>{cells}</tr>)\r\n    }\r\n\r\n    const dayNames = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    const tableStyle: React.CSSProperties = {\r\n        height: \"400px\",\r\n        tableLayout: \"fixed\"\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col md={4} style={{ textAlign: \"left\" }}>\r\n                    <ButtonToolbar aria-label=\"Toolbar with button groups\">\r\n                        <ButtonGroup aria-label=\"Basic example\">\r\n                            <Button variant=\"secondary\" className=\"fa fa-chevron-left\" onClick={handleGoToPreviousMonth} />\r\n                            <Button variant=\"secondary\" className=\"fa fa-chevron-right\" onClick={handleGoToNextMonth} />\r\n                        </ButtonGroup>\r\n                        <ButtonGroup aria-label=\"Third group\" style={{ marginLeft: \".75em\" }}>\r\n                            <Button variant=\"secondary\" onClick={handleGoToToday}>Today</Button>\r\n                        </ButtonGroup>\r\n                    </ButtonToolbar>\r\n                </Col>\r\n                <Col md={6} style={{ textAlign: \"center\" }}>\r\n                    <div>\r\n                        <label className='bilan-title'>{displayMonthName(ahierMonth.month)}</label>\r\n                        {' - '}<label className='bilan-title'>{displayNasakName(ahierMonth.year.nasak)}</label>\r\n                        {'   '}<label className='ikasSarak-title'>{displayIkasSarakName(ahierMonth.year.ikasSarak)}</label>\r\n                    </div>\r\n                    <h5>{AhierMonthEnum[ahierMonth.month]} {`(${(ahierMonth.month + 1)})`} - {NasakEnum[ahierMonth.year.nasak]} {IkasSarakEnum[ahierMonth.year.ikasSarak]} - {ahierMonth.year.yearNumber}</h5>\r\n                </Col>\r\n                <Col md={2}></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Table striped bordered hover style={tableStyle}>\r\n                        <thead>\r\n                            <tr>\r\n                                {dayNames.map((d, index) =>\r\n                                    <th style={{ padding: \"2px\", textAlign: \"center\" }} key={index}>{d}</th>\r\n                                )}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {rows}\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n","import { Col, Row } from \"react-bootstrap\";\r\nimport { IkasSarakEnum } from \"../enums/enum\";\r\nimport { AhierDate } from \"../model/AhierDate\";\r\nimport { AwalDate } from \"../model/AwalDate\";\r\n\r\ninterface DayAwalProps {\r\n    date?: Date;\r\n    dateAwal: AwalDate;\r\n    dateAhier?: AhierDate;\r\n}\r\n\r\nconst divStyle: React.CSSProperties = {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    fontSize: \"0.8rem\",\r\n    color: \"green\",\r\n    paddingTop: \"2rem\",\r\n    paddingBottom: \"0.1rem\",\r\n}\r\n\r\nexport const DayAwal = (props: DayAwalProps) => {\r\n    return (\r\n        <td>\r\n            <Row>\r\n                <Col md={4}></Col>\r\n                <Col md={4}></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={4}></Col>\r\n                <Col md={4}></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col style={divStyle} md={4}>\r\n                    {props.dateAwal.date}.{props.dateAwal.awalMonth.month + 1}.{IkasSarakEnum[props.dateAwal.awalMonth.year.ikasSarak]}\r\n                </Col>\r\n                <Col md={4}></Col>\r\n            </Row>\r\n        </td>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { Button, ButtonGroup, ButtonToolbar, Col, Container, Row, Table } from \"react-bootstrap\";\r\nimport { AwalMonthEnum, IkasSarakEnum } from \"../enums/enum\";\r\nimport { AwalDate, AwalMonth } from \"../model/AwalDate\";\r\nimport Helper from '../utility/helper';\r\nimport { DayAwal } from \"./dayAwal\";\r\n\r\ninterface MonthAwalProps {\r\n    awalMonth: AwalMonth;\r\n}\r\n\r\nexport const MonthAwal = (props: MonthAwalProps) => {\r\n    const [awalMonth, setAwalMonth] = useState(props.awalMonth);\r\n    let firstDate: AwalDate = { date: 1, awalMonth: props.awalMonth };\r\n    const [firstDateOfMonth, setFirstDateOfMonth] = useState<AwalDate>(firstDate);\r\n    const [firstDayOfMonth, setFirstDayOfMonth] = useState(0);\r\n\r\n    React.useEffect(() => {\r\n        function init() {\r\n            // Read Sakawi Takai Ciim\r\n            let startDay = Number.parseInt(Helper.getStartDayByAwalMonth(awalMonth.year, awalMonth.month));\r\n            //setFirstDayOfMonth(startDay);\r\n\r\n            let firstDate: AwalDate = { date: 1, awalMonth: awalMonth };\r\n            //setFirstDateOfMonth(firstDate);\r\n        }\r\n\r\n        init();\r\n    }, [awalMonth]);\r\n\r\n    function handleGoToToday() {\r\n        /*let result = Helper.getAwalDateByGregoryDate(new Date(2016, 9, 2));\r\n        console.log('2016, 9, 2 => ', JSON.stringify(result));*/\r\n\r\n        /*let startAhierYear: AhierYear = {\r\n            nasak: Nasak.Pabuei,\r\n            ikasSarak: IkasSarak.Jim,\r\n            yearNumber: 2019\r\n        }\r\n\r\n        let newYear = addAhierYears(startAhierYear, -1);\r\n        console.log('new year: ' + JSON.stringify(newYear))*/\r\n\r\n        let matrix = Helper.buildMatrixCalendar(2020);\r\n        console.log('matrix: ' + JSON.stringify(matrix))\r\n\r\n        /*const awalMonth: AwalMonth = { month: 0, year: { ikasSarak: IkasSarakEnum.Liéh, yearNumber: 2020 } };\r\n        let newMonth = addAwalMonths(awalMonth, -13);\r\n        console.log('addAwalMonths : ' + JSON.stringify(newMonth))*/\r\n\r\n        setAwalMonth({ month: 0, year: { ikasSarak: IkasSarakEnum.Liéh } });\r\n    }\r\n\r\n    function handleGoToPreviousMonth() {\r\n        setAwalMonth(Helper.addAwalMonths(awalMonth, -1));\r\n    }\r\n\r\n    function handleGoToNextMonth() {\r\n        setAwalMonth(Helper.addAwalMonths(awalMonth, 1));\r\n    }\r\n\r\n    // draw Calendar Table\r\n    let count = 0;\r\n    let rows = [];\r\n\r\n    for (let weeks = 0; weeks < 6; weeks++) {\r\n        let cells = []\r\n        for (let days = 0; days < 7; days++) {\r\n            let cellDate = Helper.addAwalDays(firstDateOfMonth, (count - firstDayOfMonth + 1));\r\n            let dateAwal: AwalDate = {\r\n                date: cellDate.date,\r\n                awalMonth: cellDate.awalMonth,\r\n            }\r\n\r\n            cells.push(<DayAwal key={`cell${weeks}-${days}`} dateAwal={dateAwal}></DayAwal>);\r\n            count++\r\n        }\r\n\r\n        rows.push(<tr key={weeks}>{cells}</tr>)\r\n    }\r\n\r\n    const dayNames = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    const tableStyle: React.CSSProperties = {\r\n        height: \"400px\",\r\n        tableLayout: \"fixed\"\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col md={4} style={{ textAlign: \"left\" }}>\r\n                    <ButtonToolbar aria-label=\"Toolbar with button groups\">\r\n                        <ButtonGroup aria-label=\"Basic example\">\r\n                            <Button variant=\"secondary\" className=\"fa fa-chevron-left\" onClick={handleGoToPreviousMonth} />\r\n                            <Button variant=\"secondary\" className=\"fa fa-chevron-right\" onClick={handleGoToNextMonth} />\r\n                        </ButtonGroup>\r\n                        <ButtonGroup aria-label=\"Third group\" style={{ marginLeft: \".75em\" }}>\r\n                            <Button variant=\"secondary\" onClick={handleGoToToday}>Today</Button>\r\n                        </ButtonGroup>\r\n                    </ButtonToolbar>\r\n                </Col>\r\n                <Col md={5} style={{ textAlign: \"center\" }}>\r\n                    <h2>{AwalMonthEnum[awalMonth.month]} {`(${(awalMonth.month + 1)})`} - {IkasSarakEnum[awalMonth.year.ikasSarak]}</h2>\r\n                </Col>\r\n                <Col md={3}></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Table striped bordered hover style={tableStyle}>\r\n                        <thead>\r\n                            <tr>\r\n                                {dayNames.map((d, index) =>\r\n                                    <th style={{ padding: \"2px\", textAlign: \"center\" }} key={index}>{d}</th>\r\n                                )}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {rows}\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { AhierMonthEnum, IkasSarakEnum, NasakEnum } from \"../enums/enum\";\r\nimport { AhierMonth } from \"../model/AhierDate\";\r\nimport { AwalMonth } from \"../model/AwalDate\";\r\nimport { CountDownBar } from \"./countDownBar\";\r\nimport { Month } from \"./month\";\r\nimport { MonthAhier } from \"./monthAhier\";\r\nimport { MonthAwal } from \"./monthAwal\";\r\n\r\nexport declare type SakawiType = 'sakawiAwal' | 'sakawiAhier' | 'solarCalendar';\r\n\r\nexport const Calendar = () => {\r\n    const [year] = useState(new Date().getFullYear());\r\n    const [month] = useState(new Date().getMonth());\r\n    const [sakawiType] = useState<SakawiType>('sakawiAhier');\r\n\r\n    // Sakawi Awal\r\n    let awalMonth: AwalMonth = { month: 0, year: { ikasSarak: IkasSarakEnum.Hak } };\r\n    const [monthAwal] = useState(awalMonth);\r\n\r\n    // Sakawi Ahier\r\n    let ahierMonth: AhierMonth = { month: AhierMonthEnum.BilanSa, year: { nasak: NasakEnum.Pabuei, ikasSarak: IkasSarakEnum.JimLuic, yearNumber: 2019 } };\r\n    const [monthAhier] = useState(ahierMonth);\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <CountDownBar dateName={\"Rija Nagar\"} variantType='success' toDate={new Date(2022, 4, 28)} />\r\n                    <CountDownBar dateName={\"Katé\"} variantType='info' toDate={new Date(2021, 10, 5)} />\r\n                    <CountDownBar dateName={\"Ramawan\"} variantType='warning' toDate={new Date(2022, 4, 2)} />\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n            <Row>\r\n                {sakawiType === 'solarCalendar' && <Month year={year} month={month} />}\r\n                {sakawiType === 'sakawiAwal' && <MonthAwal awalMonth={monthAwal} />}\r\n                {sakawiType === 'sakawiAhier' && <MonthAhier ahierMonth={monthAhier} />}\r\n            </Row>\r\n        </>\r\n    );\r\n}","import { Card, Col, Container, Row, ListGroup, Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\n\r\ninterface LayoutProps {\r\n    children: JSX.Element;\r\n}\r\n\r\nconst footerStyle: React.CSSProperties = {\r\n    background: \"#20232a\",\r\n    color: \"white\",\r\n    padding: \"15px\",\r\n    textAlign: \"center\",\r\n    justifyContent: \"center\"\r\n}\r\n\r\nexport const Layout = (props: LayoutProps) => {\r\n    return (\r\n        <Container fluid>\r\n            {/* Header */}\r\n            <Row>\r\n            <Col>\r\n                <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"#home\">SAKAWI CHAM</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto my-2 my-lg-0\"\r\n                        style={{ maxHeight: '100px' }}\r\n                        navbarScroll>\r\n                            <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                            <Nav.Link href=\"#link\">Link</Nav.Link>\r\n                            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                                <NavDropdown.Divider />\r\n                                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                </Col>\r\n            </Row>\r\n            <br/>\r\n            {/* Body */}\r\n            <Row>\r\n                <Col sm={2}>\r\n                    <Card>\r\n                        <Card.Header>Featured</Card.Header>\r\n                        <ListGroup>\r\n                            <ListGroup.Item>Cras justo odio</ListGroup.Item>\r\n                            <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\r\n                            <ListGroup.Item>Vestibulum at eros</ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n                <Col sm={10}>\r\n                    {props.children}\r\n                </Col>\r\n            </Row>\r\n            {/* Fotter */}\r\n            <Row>\r\n                <Col>\r\n                    <p style={footerStyle}>{`© ${new Date().getFullYear()} Sakawi Cham`}</p>\r\n                </Col> \r\n            </Row>\r\n        </Container>\r\n    );\r\n}","import React from 'react';\r\n//import logo from './logo.svg';\r\nimport './App.css';\r\nimport { Calendar } from './components/calendar';\r\nimport { Layout } from './Layout';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Layout>\r\n        <Calendar/>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}